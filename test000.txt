(1, 0xdbcd4900f9378e61)
|--
|--(1, 0x7e00ca7bda37f4db)
|--|--     Program PWSCF v.£ starts on £Jan£ at  £:£:£ 
|--|--
|--(1, 0xbc8c1e5e6cd20638)
|--|--     This program is part of the  __SYMBOL__  Quantum ESPRESSO suite
|--|--     for quantum simulation of materials; please cite
|--|--         " __CHEMELEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
               " __CHEMELEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
|--|--          URL http: __FULLPATH__ ", 
|--|--     in publications or presentations arising from this work. More details at
|--|--     http: __FULLPATH__ /quote
|--|--
|--(1, 0x07148409c9bc8360)
|--|--     Parallel version (MPI), running on    £ processors
|--|--
|--(1, 0x79ef7fcb9f80defb)
|--|--     MPI processes distributed on     £ nodes
|--|--      __CHEMELEM__ -points division:     npool     =       £
|--|--     R & G space division:  proc/nbgrp/npool/nimage =       £
|--|--     Waiting for input...
|--|--     Reading input from standard input
|--|--
|--(1, 0x9838dcd92e2350dc)
|--|--     Current dimensions of program PWSCF are:
|--|--     Max number of different atomic species (ntypx) = £
|--|--     Max number of  __SYMBOL__  (npk) =  £
|--|--     Max angular momentum in pseudopotentials (lmaxx) =  £
|--|--
|--(1, 0x477712e23bb7ae07)
|--|--     Subspace diagonalization in iterative solution of the eigenvalue problem:
|--|--     one  __SYMBOL__  per band group will be used
|--|--     scalapack  __SYMBOL__  algorithm (size of  __SYMBOL__   £*  £ procs)
|--|--
|--
|--(1, 0x87d93efd52feb557)
|--|--(1, 0x7ef9091328db476a)
|--|--|--     Parallelization info
|--|--|--     --------------------
|--|--|--     sticks:   dense  smooth     PW      __SYMBOL__     dense   smooth      PW
|--|--|--     Min         £     £     £                 £     £    £
|--|--|--     Max         £     £     £                 £     £    £
|--|--|--     Sum        £    £    £                £    £   £
|--|--|--
|--|--
|--|--(1, 0xa4495702b1804fff)
|--|--|--     Title: 
|--|--|--      __SYMBOL__                                                               
|--|--|--
|--|--
|--(1, 0x14afdc96cea5971d)
|--|--      __SYMBOL__  index     =            £
|--|--     lattice parameter (alat)  =       £  a.u.
|--|--      __SYMBOL__  volume          =     £ (a.u.)^£
|--|--     number of atoms/cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of  __SYMBOL__  states=           £
|--|--      __SYMBOL__  cutoff     =     £  Ry
|--|--     charge density cutoff     =     £  Ry
|--|--     convergence threshold     =      £
|--|--     mixing beta               =       £
|--|--     number of iterations used =            £  plain     mixing
|--|--      __SYMBOL__       =  SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--|--     nstep                     =           £
|--|--
|--
|--(1, 0x3c03f95b18375bb2)
|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
           celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--
|--(1, 0x097a0bb2f4cbf024)
|--|--     crystal axes: (cart. coord. in units of alat)
|--|--               a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
|--|--
|--(1, 0xf21420ad5b680ac7)
|--|--     reciprocal axes: (cart. coord. in units £ pi/alat)
|--|--               b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
|--|--
|--
|--(1, 0x555ad5de27c8e15f)
|--|--     PseudoPot. # £ for  __CHEMELEM__  read from file:
|--|--      __FULLPATH__ 
|--|--     MD£ check sum: £ad£b£dd£ee£b£c£ded£da£f£fe
|--|--     Pseudo is Ultrasoft + core correction, Zval = £
|--|--     Generated by new atomic code, or converted to UPF format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--                                                       £   £
|--|--
|--(1, 0x4e9b9714282b68fb)
|--|--     PseudoPot. # £ for  __CHEMELEM__   read from file:
|--|--      __FULLPATH__ 
|--|--     MD£ check sum: b£d£ece£c£a£eaa£b£
|--|--     Pseudo is Ultrasoft, Zval =  £
|--|--     Generated by new atomic code, or converted to UPF format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--
|--
|--(1, 0x310596f6530d6b30)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEMELEM__             £    £      __CHEMELEM__ ( £ )
               __CHEMELEM__               £    £      __CHEMELEM__  ( £ )
|--|--
|--(1, 0xa551310a70f6e4e1)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x463687ca7231fd92)
|--|--                                    s                        frac. trans.
|--|--
|--(1, 0x624f674f29809e96)
|--|--      isym =  £     identity                                     
|--|--
|--(1, 0xb30d2659b764a99e)
|--|--(1, 0x47d10f58adb04d3d)
|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--                  (     £          £          £      )
                           (     £          £          £      )
|--|--|--
|--|--(1, 0xa3a3c7d9c610d500)
|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--                  (  £  £  £ )
                           (  £  £  £ )
|--|--|--
|--|--
|--(23, 0xcb1526582e35d421)
|--|--(1, 0xb356c6075de4827c)
|--|--|--      isym =  £     £ deg rotation - cart. axis [£,£,£]        
|--|--|--
|--|--(1, 0xb30d2659b764a99e)
|--|--|--(1, 0x47d10f58adb04d3d)
|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--                  (     £         £          £      )
                              (     £          £          £      )
|--|--|--|--
|--|--|--(1, 0xa3a3c7d9c610d500)
|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--                  (  £ £  £ )
                              (  £  £  £ )
|--|--|--|--
|--|--|--
|--(1, 0x4a3e8e3455a706ee)
|--|--      isym = £     inversion                                    
|--|--
|--(1, 0xb30d2659b764a99e)
|--|--(1, 0x47d10f58adb04d3d)
|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--                  (     £         £          £      )
                           (     £          £         £      )
|--|--|--
|--|--(1, 0xa3a3c7d9c610d500)
|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--                  (  £ £  £ )
                           (  £  £ £ )
|--|--|--
|--|--
|--(23, 0x6c7db729e2aaccc9)
|--|--(1, 0xbd7b0f3e989e780d)
|--|--|--      isym = £     inv. £ deg rotation - cart. axis [£,£,£]   
|--|--|--
|--|--(1, 0xb30d2659b764a99e)
|--|--|--(1, 0x47d10f58adb04d3d)
|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--                  (     £          £          £      )
                              (     £          £         £      )
|--|--|--|--
|--|--|--(1, 0xa3a3c7d9c610d500)
|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--                  (  £  £  £ )
                              (  £  £ £ )
|--|--|--|--
|--|--|--
|--(1, 0x4e43046484ba34a7)
|--|--   Cartesian axes
|--|--
|--(1, 0xe44f0fffae7460cf)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0xeb1c2f5f98a28e9a)
|--|--   Crystallographic axes
|--|--
|--(1, 0x13aaf1652522597f)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0x4ac7fa5ce02ed3eb)
|--|--     number of k points=    £   __SYMBOL__  smearing, width (Ry)=  £
|--|--                       cart. coord. in units £pi/alat
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x3d1eb23b8d6f9ca7)
|--|--                       cryst. coord.
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x247ff6788795cb3a)
|--|--     Dense  grid:    £  __SYMBOL__      FFT dimensions: (  £,  £,  £ )
|--|--
|--(1, 0x23747463b4ae377d)
|--|--     Dynamical RAM for                 wfc:       £ MB
|--|--
|--(1, 0x0dac462f9a7fe626)
|--|--     Dynamical RAM for     wfc (w. buffer):       £ MB
|--|--
|--(1, 0x5a922b128eb43a2e)
|--|--     Dynamical RAM for           str. fact:       £ MB
|--|--
|--(1, 0xeedb127658485381)
|--|--     Dynamical RAM for           local pot:       £ MB
|--|--
|--(1, 0x1acff9e35d032c5f)
|--|--     Dynamical RAM for          nlocal pot:       £ MB
|--|--
|--(1, 0x1c5ec1c733aa413c)
|--|--     Dynamical RAM for                qrad:       £ MB
|--|--
|--(1, 0xd2a0f3b821f233db)
|--|--     Dynamical RAM for          rho,v,vnew:       £ MB
|--|--
|--(1, 0xc2f6693e308eb859)
|--|--     Dynamical RAM for               rhoin:       £ MB
|--|--
|--(1, 0x5a4a06e213875f2d)
|--|--     Dynamical RAM for            rho*nmix:       £ MB
|--|--
|--(1, 0xb39e2a1a85f89aac)
|--|--     Dynamical RAM for            __SYMBOL__        £ MB
|--|--
|--(1, 0xd48322acaef53128)
|--|--     Dynamical RAM for          h,s,v(r/c):       £ MB
|--|--
|--(1, 0x9ee5371b5a92a072)
|--|--     Dynamical RAM for          <psi|beta>:       £ MB
|--|--
|--(1, 0x2626f22dffdec8f6)
|--|--     Dynamical RAM for                 psi:       £ MB
|--|--
|--(1, 0xc2bc3bdd4d9d0dca)
|--|--     Dynamical RAM for                hpsi:       £ MB
|--|--
|--(1, 0x10aea6321d259d57)
|--|--     Dynamical RAM for                spsi:       £ MB
|--|--
|--(1, 0xb1e3f241872cdf8f)
|--|--     Dynamical RAM for      wfcinit/wfcrot:       £ MB
|--|--
|--(1, 0x6fbdae302c864050)
|--|--     Dynamical RAM for           addusdens:       £ MB
|--|--
|--(1, 0xa509f3442d6bed03)
|--|--     Dynamical RAM for          addusforce:       £ MB
|--|--
|--(1, 0x3a4dff7dd7d434ee)
|--|--     Dynamical RAM for         addusstress:       £ MB
|--|--
|--(1, 0x4d3f3b1962028cd6)
|--|--     Estimated static dynamical RAM per process >      £ MB
|--|--
|--(1, 0xe88dc8b062209ec2)
|--|--     Estimated max dynamical RAM per process >      £ MB
|--|--
|--(1, 0x9b7443efdc6cb0f7)
|--|--     Estimated total dynamical RAM >       £ GB
|--|--
|--(1, 0xabf4ff5072e13ce2)
|--|--     Initial potential from superposition of free atoms
|--|--
|--(1, 0x58cda64f3f80b96b)
|--|--     starting charge   £, renormalised to   £
|--|--     Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--|--
|--(1, 0x7956f500af0b3e8c)
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is        £ secs
|--|--|--
|--|--(1, 0x6e6bb45c7a732840)
|--|--|--      __SYMBOL__  Calculation
|--|--|--
|--(1, 0x6ad14c7ec9ee25bd)
|--|--(1, 0x6de01c51d83961c6)
|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--     Davidson diagonalization with overlap
|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is        £ secs
|--|--|--
|--(8, 0xc88bfbd52b2589f7)
|--|--(1, 0xda6075591a22f14f)
|--|--|--     total energy              =    £ Ry
|--|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--|--     estimated scf accuracy    <       £ Ry
|--|--|--
|--|--(1, 0x6ad14c7ec9ee25bd)
|--|--|--(1, 0x6de01c51d83961c6)
|--|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--|--     Davidson diagonalization with overlap
|--|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--|--
|--|--|--(1, 0x2664a96b32e8643c)
|--|--|--|--     total cpu time spent up to now is        £ secs
|--|--|--|--
|--(1, 0xbccaa0cfd1e1cbd6)
|--|--     End of  __SYMBOL__  calculation
|--|--
|--(56, 0x6715488602cbf25c)
|--|--(1, 0xfd9ecb18e49d9870)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £  £
             £  £  £  £  £  £  £  £
              £   £   £   £   £   £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--|--(1, 0x2cfb47735f1cddc1)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--(1, 0xcde07d6407269c4b)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x6004865d359b7e4d)
|--|--!    total energy              =    £ Ry
|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--     estimated scf accuracy    <          £ Ry
|--|--
|--(1, 0x25d21669abaf6f63)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0xef8f9ab65885f020)
|--|--      __SYMBOL__  contribution =    £ Ry
|--|--     hartree contribution      =      £ Ry
|--|--     xc contribution           =     £ Ry
|--|--     ewald contribution        =    £ Ry
|--|--     smearing contrib.  __SYMBOL__    =       £ Ry
|--|--
|--(1, 0x13be9c247775a1d2)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xd1dc9df3355d9ec3)
|--|--     Forces acting on atoms (cartesian axes, Ry/au):
|--|--
|--(1, 0x3f41d1042b579149)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __SYMBOL__  contrib.  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The ionic contribution  to forces
|--|--     atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £   £
|--|--     The local contribution  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £    £   £
|--|--     The core correction contribution to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £    £   £
|--|--     The Hubbard contrib.    to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The SCF correction term to forces
|--|--     atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £    £
|--|--
|--(1, 0x143bb0f0a6fdaef2)
|--|--     Total force =     £     Total SCF correction =     £
|--|--
|--
|--(1, 0x3f84da82a75b05b3)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--(1, 0x1e8099bf0bdfa49a)
|--|--          total   stress  (Ry/bohr**£ )                   (kbar)      __CHEMELEM__ =    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(1, 0x595b664a3935d31b)
|--|--     kinetic stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x1f6cb148a673f341)
|--|--     local   stress (kbar)  £     £      £
|--|--                               £  £      £
                                      £      £  £
|--|--
|--(1, 0xe0402eace7a54784)
|--|--     nonloc. stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x5588567e8282bf1e)
|--|--     hartree stress (kbar)  £      £     £
|--|--                                £  £     £
                                     £     £  £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__  stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x967d8a1a400ae808)
|--|--     corecor stress (kbar)   £     £      £
|--|--                               £   £      £
                                      £      £   £
|--|--
|--(1, 0x125604fa3ce471a8)
|--|--     ewald   stress (kbar) £     £     £
|--|--                               £ £     £
                                     £     £ £
|--|--
|--(1, 0xbe2b9b5c66d07a9c)
|--|--     hubbard stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe037d8acba74a9b8)
|--|--     london  stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe88d271f8a8ae2f2)
|--|--     XDM     stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(2, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--
   
|--(1, 0x4e4e3f5fc96be2fe)
|--|--     BFGS Geometry Optimization
|--|--
|--(1, 0xea53330614a349b3)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0x23eb64e8316209ed)
|--|--     enthalpy new            =    £ Ry
|--|--
|--(1, 0xe848b1d7c46ff790)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOL__             =       £ Ry
|--|--
|--(1, 0xa5ec9a2bc93270ae)
|--|--     new  __SYMBOL__  volume =    £ a.u.^£ (    £ Ang^£ )
|--|--     density =      £ g/cm^£
|--|--
|--(1, 0x390e6889549c3e71)
|--|-- __SYMBOL__  (bohr)
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x15617e14875f90d4)
|--|-- __SYMBOL__  (crystal)
|--|-- __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__        £   £   £
|--|--
|--
|--(1, 0xf066c24ca0b08b29)
|--|--      __SYMBOL__  atomic charge density approx. for the potential
|--|--     extrapolated charge   £, renormalised to   £
|--|--
|--(1, 0x7956f500af0b3e8c)
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is        £ secs
|--|--|--
|--|--(1, 0x6e6bb45c7a732840)
|--|--|--      __SYMBOL__  Calculation
|--|--|--
|--(1, 0x6de01c51d83961c6)
|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x0df338e9a60c948d)
|--|--     Threshold (ethr) on eigenvalues was too large:
|--|--     Diagonalizing with lowered threshold
|--|--
|--(1, 0x10d2f071f8ab5722)
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x2664a96b32e8643c)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(6, 0xc88bfbd52b2589f7)
|--|--(1, 0xda6075591a22f14f)
|--|--|--     total energy              =    £ Ry
|--|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--|--     estimated scf accuracy    <       £ Ry
|--|--|--
|--|--(1, 0x6ad14c7ec9ee25bd)
|--|--|--(1, 0x6de01c51d83961c6)
|--|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--|--     Davidson diagonalization with overlap
|--|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--|--
|--|--|--(1, 0x2664a96b32e8643c)
|--|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--|--
|--(1, 0xbccaa0cfd1e1cbd6)
|--|--     End of  __SYMBOL__  calculation
|--|--
|--(56, 0x6715488602cbf25c)
|--|--(1, 0xfd9ecb18e49d9870)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £  £
             £  £  £  £  £  £  £  £
              £   £   £   £   £   £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--|--(1, 0x2cfb47735f1cddc1)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--(1, 0xcde07d6407269c4b)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x6004865d359b7e4d)
|--|--!    total energy              =    £ Ry
|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--     estimated scf accuracy    <          £ Ry
|--|--
|--(1, 0x25d21669abaf6f63)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0xef8f9ab65885f020)
|--|--      __SYMBOL__  contribution =    £ Ry
|--|--     hartree contribution      =      £ Ry
|--|--     xc contribution           =     £ Ry
|--|--     ewald contribution        =    £ Ry
|--|--     smearing contrib.  __SYMBOL__    =       £ Ry
|--|--
|--(1, 0x13be9c247775a1d2)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xd1dc9df3355d9ec3)
|--|--     Forces acting on atoms (cartesian axes, Ry/au):
|--|--
|--(1, 0x3f41d1042b579149)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __SYMBOL__  contrib.  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The ionic contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The local contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =    £   £   £
|--|--     The core correction contribution to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The Hubbard contrib.    to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The SCF correction term to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--
|--(1, 0x143bb0f0a6fdaef2)
|--|--     Total force =     £     Total SCF correction =     £
|--|--
|--
|--(1, 0x3f84da82a75b05b3)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--(1, 0x1e8099bf0bdfa49a)
|--|--          total   stress  (Ry/bohr**£ )                   (kbar)      __CHEMELEM__ =    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(1, 0x595b664a3935d31b)
|--|--     kinetic stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x1f6cb148a673f341)
|--|--     local   stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0xe0402eace7a54784)
|--|--     nonloc. stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x5588567e8282bf1e)
|--|--     hartree stress (kbar)  £      £     £
|--|--                                £  £     £
                                     £     £  £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__  stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x967d8a1a400ae808)
|--|--     corecor stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x125604fa3ce471a8)
|--|--     ewald   stress (kbar) £      £     £
|--|--                                £ £     £
                                     £     £ £
|--|--
|--(1, 0xbe2b9b5c66d07a9c)
|--|--     hubbard stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe037d8acba74a9b8)
|--|--     london  stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe88d271f8a8ae2f2)
|--|--     XDM     stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(2, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--
   
|--(1, 0xea53330614a349b3)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0xe58f3b73acab3721)
|--|--     enthalpy old            =    £ Ry
|--|--     enthalpy new            =    £ Ry
|--|--
|--(1, 0x8a80df7f8027d08f)
|--|--     CASE:  __SYMBOL__  <  __SYMBOL__ 
|--|--
|--(1, 0x4cfceef0c7349aee)
|--|--     small  __SYMBOL__  resetting bfgs history
|--|--
|--(1, 0xe848b1d7c46ff790)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOL__             =            £ Ry
|--|--
|--(1, 0xa5ec9a2bc93270ae)
|--|--     new  __SYMBOL__  volume =    £ a.u.^£ (    £ Ang^£ )
|--|--     density =      £ g/cm^£
|--|--
|--(1, 0x390e6889549c3e71)
|--|-- __SYMBOL__  (bohr)
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x15617e14875f90d4)
|--|-- __SYMBOL__  (crystal)
|--|-- __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__        £   £   £
|--|--
|--
|--(1, 0xf066c24ca0b08b29)
|--|--      __SYMBOL__  atomic charge density approx. for the potential
|--|--     extrapolated charge   £, renormalised to   £
|--|--
|--(1, 0x7956f500af0b3e8c)
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--
|--|--(1, 0x6e6bb45c7a732840)
|--|--|--      __SYMBOL__  Calculation
|--|--|--
|--(1, 0x6de01c51d83961c6)
|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x0df338e9a60c948d)
|--|--     Threshold (ethr) on eigenvalues was too large:
|--|--     Diagonalizing with lowered threshold
|--|--
|--(1, 0x10d2f071f8ab5722)
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x2664a96b32e8643c)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(6, 0xc88bfbd52b2589f7)
|--|--(1, 0xda6075591a22f14f)
|--|--|--     total energy              =    £ Ry
|--|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--|--     estimated scf accuracy    <       £ Ry
|--|--|--
|--|--(1, 0x6ad14c7ec9ee25bd)
|--|--|--(1, 0x6de01c51d83961c6)
|--|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--|--     Davidson diagonalization with overlap
|--|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--|--
|--|--|--(1, 0x2664a96b32e8643c)
|--|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--|--
|--(1, 0xbccaa0cfd1e1cbd6)
|--|--     End of  __SYMBOL__  calculation
|--|--
|--(56, 0x6715488602cbf25c)
|--|--(1, 0xfd9ecb18e49d9870)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £  £
             £  £  £  £  £  £  £  £
              £   £   £   £   £   £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--|--(1, 0x2cfb47735f1cddc1)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--(1, 0xcde07d6407269c4b)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x6004865d359b7e4d)
|--|--!    total energy              =    £ Ry
|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--     estimated scf accuracy    <          £ Ry
|--|--
|--(1, 0x25d21669abaf6f63)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0xef8f9ab65885f020)
|--|--      __SYMBOL__  contribution =    £ Ry
|--|--     hartree contribution      =      £ Ry
|--|--     xc contribution           =     £ Ry
|--|--     ewald contribution        =    £ Ry
|--|--     smearing contrib.  __SYMBOL__    =       £ Ry
|--|--
|--(1, 0x13be9c247775a1d2)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xd1dc9df3355d9ec3)
|--|--     Forces acting on atoms (cartesian axes, Ry/au):
|--|--
|--(1, 0x3f41d1042b579149)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __SYMBOL__  contrib.  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The ionic contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The local contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The core correction contribution to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £    £    £
|--|--     The Hubbard contrib.    to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The SCF correction term to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £    £    £
|--|--
|--(1, 0x143bb0f0a6fdaef2)
|--|--     Total force =     £     Total SCF correction =     £
|--|--
|--
|--(1, 0x3f84da82a75b05b3)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--(1, 0x1e8099bf0bdfa49a)
|--|--          total   stress  (Ry/bohr**£ )                   (kbar)      __CHEMELEM__ =    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(1, 0x595b664a3935d31b)
|--|--     kinetic stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x1f6cb148a673f341)
|--|--     local   stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0xe0402eace7a54784)
|--|--     nonloc. stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x5588567e8282bf1e)
|--|--     hartree stress (kbar)  £      £     £
|--|--                                £  £     £
                                     £     £  £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__  stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x967d8a1a400ae808)
|--|--     corecor stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x125604fa3ce471a8)
|--|--     ewald   stress (kbar) £     £     £
|--|--                               £ £     £
                                     £     £ £
|--|--
|--(1, 0xbe2b9b5c66d07a9c)
|--|--     hubbard stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe037d8acba74a9b8)
|--|--     london  stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe88d271f8a8ae2f2)
|--|--     XDM     stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(2, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--
   
|--(1, 0xea53330614a349b3)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0xe58f3b73acab3721)
|--|--     enthalpy old            =    £ Ry
|--|--     enthalpy new            =    £ Ry
|--|--
|--(1, 0x8a80df7f8027d08f)
|--|--     CASE:  __SYMBOL__  <  __SYMBOL__ 
|--|--
|--
|--(1, 0x49b2b10cca250871)
|--|--     WARNING: bfgs curvature condition failed, Theta= £
|--|--     Message from routine bfgs:
|--|--     history already reset at previous step: stopping
|--|--     small  __SYMBOL__  resetting bfgs history
|--|--
|--(1, 0xe848b1d7c46ff790)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOL__             =            £ Ry
|--|--
|--(1, 0xa5ec9a2bc93270ae)
|--|--     new  __SYMBOL__  volume =    £ a.u.^£ (    £ Ang^£ )
|--|--     density =      £ g/cm^£
|--|--
|--(1, 0x390e6889549c3e71)
|--|-- __SYMBOL__  (bohr)
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x15617e14875f90d4)
|--|-- __SYMBOL__  (crystal)
|--|-- __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__        £   £   £
|--|--
|--
|--(1, 0xf066c24ca0b08b29)
|--|--      __SYMBOL__  atomic charge density approx. for the potential
|--|--     extrapolated charge   £, renormalised to   £
|--|--
|--(1, 0x7956f500af0b3e8c)
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--
|--|--(1, 0x6e6bb45c7a732840)
|--|--|--      __SYMBOL__  Calculation
|--|--|--
|--(1, 0x6de01c51d83961c6)
|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x0df338e9a60c948d)
|--|--     Threshold (ethr) on eigenvalues was too large:
|--|--     Diagonalizing with lowered threshold
|--|--
|--(1, 0x10d2f071f8ab5722)
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £,  avg # of iterations =  £
|--|--
|--(1, 0x2664a96b32e8643c)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(8, 0xc88bfbd52b2589f7)
|--|--(1, 0xda6075591a22f14f)
|--|--|--     total energy              =    £ Ry
|--|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--|--     estimated scf accuracy    <       £ Ry
|--|--|--
|--|--(1, 0x6ad14c7ec9ee25bd)
|--|--|--(1, 0x6de01c51d83961c6)
|--|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--|--     Davidson diagonalization with overlap
|--|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--|--
|--|--|--(1, 0x2664a96b32e8643c)
|--|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--|--
|--(1, 0xbccaa0cfd1e1cbd6)
|--|--     End of  __SYMBOL__  calculation
|--|--
|--(56, 0x6715488602cbf25c)
|--|--(1, 0xfd9ecb18e49d9870)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £  £
             £  £  £  £  £  £  £  £
              £   £   £   £   £   £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--|--(1, 0x2cfb47735f1cddc1)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--(1, 0xcde07d6407269c4b)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x6004865d359b7e4d)
|--|--!    total energy              =    £ Ry
|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--     estimated scf accuracy    <          £ Ry
|--|--
|--(1, 0x25d21669abaf6f63)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0xef8f9ab65885f020)
|--|--      __SYMBOL__  contribution =    £ Ry
|--|--     hartree contribution      =      £ Ry
|--|--     xc contribution           =     £ Ry
|--|--     ewald contribution        =    £ Ry
|--|--     smearing contrib.  __SYMBOL__    =       £ Ry
|--|--
|--(1, 0x13be9c247775a1d2)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xd1dc9df3355d9ec3)
|--|--     Forces acting on atoms (cartesian axes, Ry/au):
|--|--
|--(1, 0x3f41d1042b579149)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __SYMBOL__  contrib.  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The ionic contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The local contribution  to forces
|--|--     atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £    £
|--|--     The core correction contribution to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The Hubbard contrib.    to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The SCF correction term to forces
|--|--     atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £   £   £
|--|--
|--(1, 0x143bb0f0a6fdaef2)
|--|--     Total force =     £     Total SCF correction =     £
|--|--
|--
|--(1, 0x3f84da82a75b05b3)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--(1, 0x1e8099bf0bdfa49a)
|--|--          total   stress  (Ry/bohr**£ )                   (kbar)      __CHEMELEM__ =    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(1, 0x595b664a3935d31b)
|--|--     kinetic stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x1f6cb148a673f341)
|--|--     local   stress (kbar)  £     £      £
|--|--                               £  £      £
                                      £      £  £
|--|--
|--(1, 0xe0402eace7a54784)
|--|--     nonloc. stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x5588567e8282bf1e)
|--|--     hartree stress (kbar)  £      £     £
|--|--                                £  £     £
                                     £     £  £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__  stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x967d8a1a400ae808)
|--|--     corecor stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x125604fa3ce471a8)
|--|--     ewald   stress (kbar) £     £     £
|--|--                               £ £     £
                                     £     £ £
|--|--
|--(1, 0xbe2b9b5c66d07a9c)
|--|--     hubbard stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe037d8acba74a9b8)
|--|--     london  stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe88d271f8a8ae2f2)
|--|--     XDM     stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(2, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--
|--(1, 0x0e06e042fe691feb)
|--|--     Message from routine bfgs:
|--|--     history already reset at previous step: stopping
|--|--
|--(1, 0x304b2de0d47ff57b)
|--|--     bfgs converged in   £ scf cycles and   £ bfgs steps
|--|--     (criteria: energy <  £ Ry, force <  £Ry/Bohr, cell <  £kbar)
|--|--
|--(1, 0xc4be00424acb797e)
|--|--     End of BFGS Geometry Optimization
|--|--
|--(1, 0x5b2ab69c1d3762be)
|--|--     Final enthalpy =    £ Ry
|--|--Begin final coordinates
|--|--     new  __SYMBOL__  volume =    £ a.u.^£ (    £ Ang^£ )
|--|--     density =      £ g/cm^£
|--|--
|--(1, 0x390e6889549c3e71)
|--|-- __SYMBOL__  (bohr)
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x21fd754465888cbb)
|--|-- __SYMBOL__  (crystal)
|--|-- __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__         £   £   £
       __CHEMELEM__        £   £   £
|--|--End final coordinates
|--|--
|--
   
|--(1, 0x6266be4024cd6652)
|--|--     A final scf calculation at the relaxed structure.
|--|--     The  __SYMBOL__  are recalculated for the final unit cell
|--|--     Results may differ from those at the preceding step.
|--|--
|--(1, 0x87d93efd52feb557)
|--|--(1, 0x7ef9091328db476a)
|--|--|--     Parallelization info
|--|--|--     --------------------
|--|--|--     sticks:   dense  smooth     PW      __SYMBOL__     dense   smooth      PW
|--|--|--     Min         £     £     £                 £     £    £
|--|--|--     Max         £     £     £                 £     £    £
|--|--|--     Sum        £    £    £                £    £   £
|--|--|--
|--|--
|--|--(1, 0xa4495702b1804fff)
|--|--|--     Title: 
|--|--|--      __SYMBOL__                                                               
|--|--|--
|--|--
|--(1, 0xf46c9f4923042c70)
|--|--      __SYMBOL__  index     =            £
|--|--     lattice parameter (alat)  =       £  a.u.
|--|--      __SYMBOL__  volume          =     £ (a.u.)^£
|--|--     number of atoms/cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of  __SYMBOL__  states=           £
|--|--      __SYMBOL__  cutoff     =     £  Ry
|--|--     charge density cutoff     =     £  Ry
|--|--     convergence threshold     =      £
|--|--     mixing beta               =       £
|--|--     number of iterations used =            £  plain     mixing
|--|--      __SYMBOL__       =  SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--|--
|--(1, 0x3c03f95b18375bb2)
|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
           celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--
|--(1, 0x097a0bb2f4cbf024)
|--|--     crystal axes: (cart. coord. in units of alat)
|--|--               a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
|--|--
|--(1, 0xf21420ad5b680ac7)
|--|--     reciprocal axes: (cart. coord. in units £ pi/alat)
|--|--               b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
|--|--
|--
|--(1, 0x555ad5de27c8e15f)
|--|--     PseudoPot. # £ for  __CHEMELEM__  read from file:
|--|--      __FULLPATH__ 
|--|--     MD£ check sum: £ad£b£dd£ee£b£c£ded£da£f£fe
|--|--     Pseudo is Ultrasoft + core correction, Zval = £
|--|--     Generated by new atomic code, or converted to UPF format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--                                                       £   £
|--|--
|--(1, 0x4e9b9714282b68fb)
|--|--     PseudoPot. # £ for  __CHEMELEM__   read from file:
|--|--      __FULLPATH__ 
|--|--     MD£ check sum: b£d£ece£c£a£eaa£b£
|--|--     Pseudo is Ultrasoft, Zval =  £
|--|--     Generated by new atomic code, or converted to UPF format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--
|--
|--(1, 0x310596f6530d6b30)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEMELEM__             £    £      __CHEMELEM__ ( £ )
               __CHEMELEM__               £    £      __CHEMELEM__  ( £ )
|--|--
|--(1, 0xa551310a70f6e4e1)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x463687ca7231fd92)
|--|--                                    s                        frac. trans.
|--|--
|--(1, 0x624f674f29809e96)
|--|--      isym =  £     identity                                     
|--|--
|--(1, 0xb30d2659b764a99e)
|--|--(1, 0x47d10f58adb04d3d)
|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--                  (     £          £          £      )
                           (     £          £          £      )
|--|--|--
|--|--(1, 0xa3a3c7d9c610d500)
|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--                  (  £  £  £ )
                           (  £  £  £ )
|--|--|--
|--|--
|--(23, 0xcb1526582e35d421)
|--|--(1, 0xb356c6075de4827c)
|--|--|--      isym =  £     £ deg rotation - cart. axis [£,£,£]        
|--|--|--
|--|--(1, 0xb30d2659b764a99e)
|--|--|--(1, 0x47d10f58adb04d3d)
|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--                  (     £         £          £      )
                              (     £          £          £      )
|--|--|--|--
|--|--|--(1, 0xa3a3c7d9c610d500)
|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--                  (  £ £  £ )
                              (  £  £  £ )
|--|--|--|--
|--|--|--
|--(1, 0x4a3e8e3455a706ee)
|--|--      isym = £     inversion                                    
|--|--
|--(1, 0xb30d2659b764a99e)
|--|--(1, 0x47d10f58adb04d3d)
|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--                  (     £         £          £      )
                           (     £          £         £      )
|--|--|--
|--|--(1, 0xa3a3c7d9c610d500)
|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--                  (  £ £  £ )
                           (  £  £ £ )
|--|--|--
|--|--
|--(23, 0x6c7db729e2aaccc9)
|--|--(1, 0xbd7b0f3e989e780d)
|--|--|--      isym = £     inv. £ deg rotation - cart. axis [£,£,£]   
|--|--|--
|--|--(1, 0xb30d2659b764a99e)
|--|--|--(1, 0x47d10f58adb04d3d)
|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--                  (     £          £          £      )
                              (     £          £         £      )
|--|--|--|--
|--|--|--(1, 0xa3a3c7d9c610d500)
|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--                  (  £  £  £ )
                              (  £  £ £ )
|--|--|--|--
|--|--|--
|--(1, 0x4e43046484ba34a7)
|--|--   Cartesian axes
|--|--
|--(1, 0xe44f0fffae7460cf)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEMELEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0xeb1c2f5f98a28e9a)
|--|--   Crystallographic axes
|--|--
|--(1, 0x13aaf1652522597f)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEMELEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0x4ac7fa5ce02ed3eb)
|--|--     number of k points=    £   __SYMBOL__  smearing, width (Ry)=  £
|--|--                       cart. coord. in units £pi/alat
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x3d1eb23b8d6f9ca7)
|--|--                       cryst. coord.
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x247ff6788795cb3a)
|--|--     Dense  grid:    £  __SYMBOL__      FFT dimensions: (  £,  £,  £ )
|--|--
|--(1, 0x23747463b4ae377d)
|--|--     Dynamical RAM for                 wfc:       £ MB
|--|--
|--(1, 0x0dac462f9a7fe626)
|--|--     Dynamical RAM for     wfc (w. buffer):       £ MB
|--|--
|--(1, 0x5a922b128eb43a2e)
|--|--     Dynamical RAM for           str. fact:       £ MB
|--|--
|--(1, 0xeedb127658485381)
|--|--     Dynamical RAM for           local pot:       £ MB
|--|--
|--(1, 0x1acff9e35d032c5f)
|--|--     Dynamical RAM for          nlocal pot:       £ MB
|--|--
|--(1, 0x1c5ec1c733aa413c)
|--|--     Dynamical RAM for                qrad:       £ MB
|--|--
|--(1, 0xd2a0f3b821f233db)
|--|--     Dynamical RAM for          rho,v,vnew:       £ MB
|--|--
|--(1, 0xc2f6693e308eb859)
|--|--     Dynamical RAM for               rhoin:       £ MB
|--|--
|--(1, 0x5a4a06e213875f2d)
|--|--     Dynamical RAM for            rho*nmix:       £ MB
|--|--
|--(1, 0xb39e2a1a85f89aac)
|--|--     Dynamical RAM for            __SYMBOL__        £ MB
|--|--
|--(1, 0xd48322acaef53128)
|--|--     Dynamical RAM for          h,s,v(r/c):       £ MB
|--|--
|--(1, 0x9ee5371b5a92a072)
|--|--     Dynamical RAM for          <psi|beta>:       £ MB
|--|--
|--(1, 0x2626f22dffdec8f6)
|--|--     Dynamical RAM for                 psi:       £ MB
|--|--
|--(1, 0xc2bc3bdd4d9d0dca)
|--|--     Dynamical RAM for                hpsi:       £ MB
|--|--
|--(1, 0x10aea6321d259d57)
|--|--     Dynamical RAM for                spsi:       £ MB
|--|--
|--(1, 0xb1e3f241872cdf8f)
|--|--     Dynamical RAM for      wfcinit/wfcrot:       £ MB
|--|--
|--(1, 0x6fbdae302c864050)
|--|--     Dynamical RAM for           addusdens:       £ MB
|--|--
|--(1, 0xa509f3442d6bed03)
|--|--     Dynamical RAM for          addusforce:       £ MB
|--|--
|--(1, 0x3a4dff7dd7d434ee)
|--|--     Dynamical RAM for         addusstress:       £ MB
|--|--
|--(1, 0x4d3f3b1962028cd6)
|--|--     Estimated static dynamical RAM per process >      £ MB
|--|--
|--(1, 0xe88dc8b062209ec2)
|--|--     Estimated max dynamical RAM per process >      £ MB
|--|--
|--(1, 0x9b7443efdc6cb0f7)
|--|--     Estimated total dynamical RAM >       £ GB
|--|--
|--(1, 0xabf4ff5072e13ce2)
|--|--     Initial potential from superposition of free atoms
|--|--
|--(1, 0x58cda64f3f80b96b)
|--|--     starting charge   £, renormalised to   £
|--|--     Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--|--
|--(1, 0x7956f500af0b3e8c)
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--
|--|--(1, 0x6e6bb45c7a732840)
|--|--|--      __SYMBOL__  Calculation
|--|--|--
|--(1, 0x6ad14c7ec9ee25bd)
|--|--(1, 0x6de01c51d83961c6)
|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--     Davidson diagonalization with overlap
|--|--|--     ethr =  £,  avg # of iterations = £
|--|--|--
|--|--(1, 0x2664a96b32e8643c)
|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--
|--(8, 0xc88bfbd52b2589f7)
|--|--(1, 0xda6075591a22f14f)
|--|--|--     total energy              =    £ Ry
|--|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--|--     estimated scf accuracy    <       £ Ry
|--|--|--
|--|--(1, 0x6ad14c7ec9ee25bd)
|--|--|--(1, 0x6de01c51d83961c6)
|--|--|--|--     iteration #  £     ecut=   £ Ry     beta= £
|--|--|--|--     Davidson diagonalization with overlap
|--|--|--|--     ethr =  £,  avg # of iterations =  £
|--|--|--|--
|--|--|--(1, 0x2664a96b32e8643c)
|--|--|--|--     total cpu time spent up to now is       £ secs
|--|--|--|--
|--(1, 0xbccaa0cfd1e1cbd6)
|--|--     End of  __SYMBOL__  calculation
|--|--
|--(56, 0x6715488602cbf25c)
|--|--(1, 0xfd9ecb18e49d9870)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £  £
             £  £  £  £  £  £  £  £
              £   £   £   £   £   £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--|--(1, 0x2cfb47735f1cddc1)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £
|--|--|--
|--(1, 0xcde07d6407269c4b)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x6004865d359b7e4d)
|--|--!    total energy              =    £ Ry
|--|--      __SYMBOL__  estimate   =    £ Ry
|--|--     estimated scf accuracy    <          £ Ry
|--|--
|--(1, 0x25d21669abaf6f63)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0xef8f9ab65885f020)
|--|--      __SYMBOL__  contribution =    £ Ry
|--|--     hartree contribution      =      £ Ry
|--|--     xc contribution           =     £ Ry
|--|--     ewald contribution        =    £ Ry
|--|--     smearing contrib.  __SYMBOL__    =       £ Ry
|--|--
|--(1, 0x13be9c247775a1d2)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xd1dc9df3355d9ec3)
|--|--     Forces acting on atoms (cartesian axes, Ry/au):
|--|--
|--(1, 0x3f41d1042b579149)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __SYMBOL__  contrib.  to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The ionic contribution  to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The local contribution  to forces
|--|--     atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £    £
|--|--     The core correction contribution to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £    £   £
|--|--     The Hubbard contrib.    to forces
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The SCF correction term to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £    £   £
|--|--
|--(1, 0x143bb0f0a6fdaef2)
|--|--     Total force =     £     Total SCF correction =     £
|--|--
|--
|--(1, 0x3f84da82a75b05b3)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--(1, 0x1e8099bf0bdfa49a)
|--|--          total   stress  (Ry/bohr**£ )                   (kbar)      __CHEMELEM__ =    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(1, 0x595b664a3935d31b)
|--|--     kinetic stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x1f6cb148a673f341)
|--|--     local   stress (kbar)  £     £      £
|--|--                               £  £      £
                                      £      £  £
|--|--
|--(1, 0xe0402eace7a54784)
|--|--     nonloc. stress (kbar)   £      £      £
|--|--                                £   £      £
                                      £      £   £
|--|--
|--(1, 0x5588567e8282bf1e)
|--|--     hartree stress (kbar)  £      £     £
|--|--                                £  £     £
                                     £     £  £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__  stress (kbar)  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--(1, 0x967d8a1a400ae808)
|--|--     corecor stress (kbar)   £     £      £
|--|--                               £   £     £
                                      £     £   £
|--|--
|--(1, 0x125604fa3ce471a8)
|--|--     ewald   stress (kbar) £     £     £
|--|--                               £ £     £
                                     £     £ £
|--|--
|--(1, 0xbe2b9b5c66d07a9c)
|--|--     hubbard stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe037d8acba74a9b8)
|--|--     london  stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(1, 0xe88d271f8a8ae2f2)
|--|--     XDM     stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--(2, 0x7b83c3cf906acbb8)
|--|--      __SYMBOL__   stress (kbar)      £      £      £
|--|--                                £      £      £
                                      £      £      £
|--|--
|--
   
|--(1, 0xe918fb2e0f528709)
|--|--      __SYMBOL__      :      £s CPU      £s WALL (       £ calls)
|--|--     electrons    :     £s CPU     £s WALL (       £ calls)
|--|--      __SYMBOL__    :      £s CPU      £s WALL (       £ calls)
|--|--     forces       :      £s CPU      £s WALL (       £ calls)
|--|--     stress       :      £s CPU      £s WALL (       £ calls)
|--|--
|--(1, 0x538212cdb4d6e855)
|--|--     Called by  __SYMBOL__ 
|--|--     wfcinit      :      £s CPU      £s WALL (       £ calls)
|--|--     wfcinit:atom :      £s CPU      £s WALL (      £ calls)
|--|--     wfcinit:wfcr :      £s CPU      £s WALL (      £ calls)
|--|--     potinit      :      £s CPU      £s WALL (       £ calls)
|--|--     hinit£       :      £s CPU      £s WALL (       £ calls)
|--|--
|--(1, 0x067ee33ece42da5d)
|--|--     Called by electrons:
|--|--      __SYMBOL__       :     £s CPU     £s WALL (      £ calls)
            __SYMBOL__      :      £s CPU      £s WALL (      £ calls)
            __SYMBOL__      :      £s CPU      £s WALL (      £ calls)
            __SYMBOL__           :      £s CPU      £s WALL (      £ calls)
            __SYMBOL__          :      £s CPU      £s WALL (      £ calls)
|--|--     newd         :      £s CPU      £s WALL (      £ calls)
|--|--      __SYMBOL__       :      £s CPU      £s WALL (      £ calls)
|--|--
|--(1, 0x826dd1dc9427a8dc)
|--|--     Called by  __SYMBOL__ 
|--|--      __SYMBOL__     :      £s CPU      £s WALL (     £ calls)
|--|--     cegterg      :     £s CPU     £s WALL (     £ calls)
|--|--
|--(1, 0xde859197dec0c6a1)
|--|--     Called by  __SYMBOL__ 
|--|--      __SYMBOL__  :      £s CPU      £s WALL (     £ calls)
|--|--     addusdens    :      £s CPU      £s WALL (      £ calls)
|--|--
|--(1, 0x7129144737c67cb5)
|--|--     Called by *egterg:
|--|--      __SYMBOL__         :     £s CPU     £s WALL (     £ calls)
            __SYMBOL__         :      £s CPU      £s WALL (     £ calls)
            __SYMBOL__         :      £s CPU      £s WALL (     £ calls)
|--|--     cdiaghg      :      £s CPU      £s WALL (     £ calls)
|--|--     cegterg:over :      £s CPU      £s WALL (     £ calls)
|--|--     cegterg:upda :      £s CPU      £s WALL (     £ calls)
|--|--     cegterg:last :      £s CPU      £s WALL (     £ calls)
|--|--     cdiaghg:chol :      £s CPU      £s WALL (     £ calls)
|--|--     cdiaghg:inve :      £s CPU      £s WALL (     £ calls)
|--|--     cdiaghg:para :      £s CPU      £s WALL (    £ calls)
|--|--
|--(1, 0x53e13d2c888c3548)
|--|--     Called by  __SYMBOL__ 
|--|--      __SYMBOL__     :     £s CPU     £s WALL (     £ calls)
            __SYMBOL__  :      £s CPU      £s WALL (     £ calls)
            __SYMBOL__      :     £s CPU     £s WALL (     £ calls)
            __SYMBOL__    :      £s CPU      £s WALL (     £ calls)
|--|--
|--(1, 0xd645f88143ad0e99)
|--|--     General routines
|--|--     calbec       :      £s CPU      £s WALL (    £ calls)
|--|--     fft          :      £s CPU      £s WALL (     £ calls)
|--|--     ffts         :      £s CPU      £s WALL (      £ calls)
|--|--     fftw         :     £s CPU     £s WALL (   £ calls)
|--|--
|--(1, 0x1906f664c7c21294)
|--|--     Parallel routines
|--|--      __SYMBOL__  :      £s CPU      £s WALL (   £ calls)
            __SYMBOL__  :      £s CPU      £s WALL (   £ calls)
|--|--
|--(1, 0x9faa7a0a032285d9)
|--|--     PWSCF        :     £s CPU     £s WALL
|--|--
|--
|--(1, 0x52b9e562850b437a)
|--|--   This run was terminated on:   £:£:£  £Jan£            
|--|--
|--(1, 0xcf086600c11eca09)
|--|--=------------------------------------------------------------------------------=
|--|--   JOB DONE.
|--|--=------------------------------------------------------------------------------=
|--|--