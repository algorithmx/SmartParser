(1, (0x6449a7b93b84fe82, [Int64[], [1, 2, 3, 4, 5, 6, 7, 8], Int64[], [-1], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 13, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 0, 35, 0, 36], [37, 38], [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 7], [38], Int64[], [-1], [49, 50, 51, 52, 5, 0, 53], Int64[], [-1], [54, 55, 56, 5, 0, 57], [58, 59, 60, 61, 0], [62, 63, 64, 65, 59, 66, 61, 0], [67, 19, 68], [69, 70, 44, 71, 70], Int64[], [-1], [72, 73, 13, 10, 2, 74], [75, 76, 13, 77, 78, 79, 80, 61, 0], [75, 76, 13, 81, 82, 61, 0], [75, 83, 84, 39, 85, 86, 61, 0], [87, 78, 88, 89, 0, 19, 90, 91, 0, 92, 93, 94], Int64[], [-1], [95, 96, 39, 97, 98, 13, 14, 99, 100], [101, 102, 103, 104, 105, 106, 107, 108], [109, 110, 111, 112, 13, 113, 0, 114, 0, 115], Int64[], [-1], Int64[], [116, 117], [118], [119, 120, 121, 122, 123, 120, 121, 124], [125, 0, 0, 0, 0, 0, 0], [75, 0, 0, 0, 0, 0, 0], [126, 0, 0, 0, 0, 0, 0], Int64[], [-1], Int64[], [127], [128], Int64[], [-1], Int64[], [129, 130, 61, 0], [131, 132, 133, 61, 0, 134], [135, 136, 61, 0, 137], [76, 13, 138, 61, 0], [76, 13, 78, 139, 61, 0], [76, 13, 140, 61, 0], [76, 13, 141, 142, 0], [143, 144, 61, 0, 145], [146, 147, 144, 61, 0, 145], [148, 149, 61, 0], [150, 151, 61, 0], [76, 13, 152, 108, 61, 0, 153, 150], [154, 61, 155, 35, 0, 0, 0, 0, 0, 0, 156], Int64[], [-1], [157, 0, 158, 0, 157, 0, 158, 0, 157, 0, 158, 0], Int64[], [-1], [159, 160, 161, 162, 39, 163, 13, 164], [165, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1], [166, 160, 161, 162, 39, 163, 167, 156], [168, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1], Int64[], [169, 89, 0, 19, 26, 170, 44, 171], [172], [173], [174, 11, 175, 176, 61, 0], [177, 39, 178, 179, 180], [181, 182, 183, 13, 0, 184, 0, 151, 185, 186], [187, 0, 156, 61, 0], Int64[], [-1], [78, 79, 188, 189, 190], [26, 0, 0, 26, 35, 0, 156], Int64[], [-1], [0, 191, 192, 193, 194, 195], Int64[], [-1], Int64[], [196, 197, 198], Int64[], [-1], [199, 61, 0, 200], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1], [199, 61, 0, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1], [199, 61, 0, 209], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1], [199, 61, 0, 210, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1], [211], [212, 213, 0, 214], [14, 215, 216], Int64[], [-1], [217, 217, 217, 217, 217, 217, 217, 217, 217, 217], [218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Int64[], [-1], [14, 219, 220, 39, 221, 222, 223, 14, 224, 13, 14, 225, 226], Int64[], [-1], [217, 0], [200], [217, 0, 0, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0], [209], [217, 0, 0, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1], [227, 228], Int64[], [-1], [229, 230, 90, 231, 232, 233], [0, 26, 234, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1], [235, 228], Int64[], [-1], [229, 230, 90, 231, 236, 237], [0, 26, 234, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1], [76, 13, 238, 239, 0, 240, 241, 242, 35, 145, 158, 0], [203, 162, 39, 163, 167], [243, 0, 156, 61, 35, 0, 0, 0, 244, 245, 61, 0], Int64[], [-1], [201, 162], [243, 0, 156, 61, 35, 0, 0, 0, 244, 245, 61, 0], Int64[], [-1], [246, 247, 0, 248, 249, 250, 251], Int64[], [-1], [252, 253, 0, 254], Int64[], [-1], [252, 255, 256, 0, 254], Int64[], [-1], [252, 253, 0, 254], Int64[], [-1], [252, 257, 0, 254], Int64[], [-1], [258, 259, 260, 261, 103, 262, 263, 0, 254], Int64[], [-1], [258, 264, 260, 261, 103, 262, 263, 0, 254], Int64[], [-1], [258, 265, 260, 261, 263, 0, 266], Int64[], [-1], [-1]]))
|--
|--(1, (0x7e00ca7bda37f4db, [[1, 2, 3, 4, 5, 6, 7, 8], Int64[], [-1]]))
|--|--     Program  __KWPWSCF__   __VERSIONa__  starts on  __DATEa__  at  __HHMMSS__  
|--|--
|--(1, (0x68f918b830e4034b, [[9, 10, 11, 12, 13, 14, 15, 16, 17, 18], [19, 20, 21, 13, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32, 33, 0, 0, 35, 0, 36], [37, 38], [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 7], [38], Int64[], [-1]]))
|--|--     This program is part of the open-source Quantum ESPRESSO suite
|--|--     for quantum simulation of materials; please cite
|--|--         " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
               " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
|--|--          URL  __URL__  
|--|--     in publications or presentations arising from this work. More details at
|--|--      __URL__ 
|--|--
|--(1, (0x6fbf7773363bce3a, [[49, 50, 51, 52, 5, 0, 53], Int64[], [-1]]))
|--|--     Parallel version (MPI), running on    £ processors
|--|--
|--(1, (0xfd3b00449fa3f6a0, [[54, 55, 56, 5, 0, 57], [58, 59, 60, 61, 0], [62, 63, 64, 65, 59, 66, 61, 0], [67, 19, 68], [69, 70, 44, 71, 70], Int64[], [-1]]))
|--|--     MPI processes distributed on     £ nodes
|--|--     K-points division:     npool     =       £
|--|--     R & G space division:  proc/nbgrp/npool/nimage =       £
|--|--     Waiting for input...
|--|--     Reading input from standard input
|--|--
|--(1, (0xb37a7860401be706, [[72, 73, 13, 10, 2, 74], [75, 76, 13, 77, 78, 79, 80, 61, 0], [75, 76, 13, 81, 82, 61, 0], [75, 83, 84, 39, 85, 86, 61, 0], [87, 78, 88, 89, 0, 19, 90, 91, 0, 92, 93, 94], Int64[], [-1]]))
|--|--     Current dimensions of program  __KWPWSCF__  are:
|--|--     Max number of different atomic species (ntypx) = £
|--|--     Max number of k-points (npk) =  £
|--|--     Max angular momentum in pseudopotentials (lmaxx) =  £
|--|--     WARNING: atomic wfc #  £ for atom type £ has zero norm
|--|--
|--(1, (0xe8c955def708b388, [[95, 96, 39, 97, 98, 13, 14, 99, 100], [101, 102, 103, 104, 105, 106, 107, 108], [109, 110, 111, 112, 13, 113, 0, 114, 0, 115], Int64[], [-1]]))
|--|--     Subspace diagonalization in iterative solution of the eigenvalue problem:
|--|--     one sub-group per band group will be used
|--|--     scalapack distributed-memory algorithm (size of sub-group:  £ *   £ procs)
|--|--
|--
|--(1, (0x284f1fd5b31b5ffc, [[116, 117], [118], [119, 120, 121, 122, 123, 120, 121, 124], [125, 0, 0, 0, 0, 0, 0], [75, 0, 0, 0, 0, 0, 0], [126, 0, 0, 0, 0, 0, 0], Int64[], [-1]]))
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __KWPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £    £
|--|--
|--
|--(1, (0x7fced78edbe09b3e, [[127], [128], Int64[], [-1]]))
|--|--     Title: 
|--|--      __SYMBOLtypeA__                                                                    
|--|--
|--
|--(1, (0x809e1d56e1b387a4, [[129, 130, 61, 0], [131, 132, 133, 61, 0, 134], [135, 136, 61, 0, 137], [76, 13, 138, 61, 0], [76, 13, 78, 139, 61, 0], [76, 13, 140, 61, 0], [76, 13, 141, 142, 0], [143, 144, 61, 0, 145], [146, 147, 144, 61, 0, 145], [148, 149, 61, 0], [150, 151, 61, 0], [76, 13, 152, 108, 61, 0, 153, 150], [154, 61, 155, 35, 0, 0, 0, 0, 0, 0, 156], Int64[], [-1]]))
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms/cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     convergence threshold     =      £
|--|--     mixing beta               =       £
|--|--     number of iterations used =            £  plain     mixing
|--|--     Exchange-correlation      = SLA-PW-PBX-PBC ( £  £  £  £ £ £ )
|--|--
|--(1, (0x92f012a999c07d0e, [[157, 0, 158, 0, 157, 0, 158, 0, 157, 0, 158, 0], Int64[], [-1]]))
|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
           celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--
|--(1, (0x39858b55821fc07f, [[159, 160, 161, 162, 39, 163, 13, 164], [165, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--     crystal axes: (cart. coord. in units of alat)
|--|--               a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
|--|--
|--(1, (0x3a4440effb7ccda7, [[166, 160, 161, 162, 39, 163, 167, 156], [168, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--               b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
|--|--
|--
|--(2, (0x511f7eb95bad85d0, [[169, 89, 0, 19, 26, 170, 44, 171], [172], [173], [174, 11, 175, 176, 61, 0], [177, 39, 178, 179, 180], [181, 182, 183, 13, 0, 184, 0, 151, 185, 186], [187, 0, 156, 61, 0], Int64[], [-1]]))
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--     Generated in analytical, separable form
|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--
|--(1, (0x0af39523d7815f68, [[78, 79, 188, 189, 190], [26, 0, 0, 26, 35, 0, 156], Int64[], [-1]]))
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__              £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, (0x7f4a4090416b0686, [[0, 191, 192, 193, 194, 195], Int64[], [-1]]))
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, (0xc6e48e78cf0832d4, [[196, 197, 198], Int64[], [-1]]))
|--|--                                    s                        frac. trans.
|--|--
|--(1, (0x6d53d2ed6ba4dcba, [[199, 61, 0, 200], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1]]))
|--|--(1, (0x5693595dc9b7c299, [[199, 61, 0, 200], Int64[], [-1]]))
|--|--|--      isym =  £     identity                                     
|--|--|--
|--|--(1, (0x46318eaccd4fa38a, [[201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--                  (     £          £          £      )
                           (     £          £          £      )
|--|--|--
|--|--(1, (0x1b76d709d0da6217, [[203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--                  (  £  £  £ )
                           (  £  £  £ )
|--|--|--
|--|--
|--(23, (0xf14decfa7bf7fc4e, [[199, 61, 0, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1]]))
|--|--(1, (0x10f3513f6f065d45, [[199, 61, 0, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1]]))
|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--
|--|--(1, (0x46318eaccd4fa38a, [[201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--                  (     £         £          £      )
                           (     £          £          £      )
|--|--|--
|--|--(1, (0x1b76d709d0da6217, [[203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--                  (  £ £  £ )
                           (  £  £  £ )
|--|--|--
|--|--
|--(1, (0x12cdfbd8b0a589f6, [[199, 61, 0, 209], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1]]))
|--|--(1, (0xef4c7b26ce831053, [[199, 61, 0, 209], Int64[], [-1]]))
|--|--|--      isym = £     inversion                                    
|--|--|--
|--|--(1, (0x46318eaccd4fa38a, [[201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--                  (     £         £          £      )
                           (     £          £         £      )
|--|--|--
|--|--(1, (0x1b76d709d0da6217, [[203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--                  (  £ £  £ )
                           (  £  £ £ )
|--|--|--
|--|--
|--(23, (0x904fce4b9e7df7eb, [[199, 61, 0, 210, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1], [201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], [203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1], Int64[], [-1]]))
|--|--(1, (0x534af34d9749a483, [[199, 61, 0, 210, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1]]))
|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--
|--|--(1, (0x46318eaccd4fa38a, [[201, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--                  (     £          £          £      )
                           (     £          £         £      )
|--|--|--
|--|--(1, (0x1b76d709d0da6217, [[203, 202, 0, 156, 61, 35, 0, 0, 0, 156], [35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--                  (  £  £  £ )
                           (  £  £ £ )
|--|--|--
|--|--
|--(1, (0x192200993680bbce, [[211], [212, 213, 0, 214], [14, 215, 216], Int64[], [-1]]))
|--|--      __POINTGROUP__  
|--|--     there are £ classes
|--|--     the character table:
|--|--
|--(1, (0xb1ecc2ebe04a95c3, [[217, 217, 217, 217, 217, 217, 217, 217, 217, 217], [218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Int64[], [-1]]))
|--|--        __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__     __GRPSYMBOL__  
|--|-- __REPSYMBOL__    £  £  £  £  £  £  £  £  £  £
       __REPSYMBOL__    £  £  £ £ £  £  £  £ £ £
       __REPSYMBOL__     £ £  £  £  £  £ £  £  £  £
       __REPSYMBOL__    £  £ £  £ £  £  £ £  £ £
       __REPSYMBOL__    £  £ £ £  £  £  £ £ £  £
       __REPSYMBOL__    £  £  £  £  £ £ £ £ £ £
       __REPSYMBOL__    £  £  £ £ £ £ £ £  £  £
       __REPSYMBOL__     £ £  £  £  £ £  £ £  £  £
       __REPSYMBOL__    £  £ £  £ £ £  £  £ £  £
       __REPSYMBOL__    £  £ £ £  £ £  £  £  £ £
|--|--
|--(1, (0xe9acc96e3217e667, [[14, 219, 220, 39, 221, 222, 223, 14, 224, 13, 14, 225, 226], Int64[], [-1]]))
|--|--     the symmetry operations in each class and the name of the first element:
|--|--
|--(1, (0x264d8c062e331a32, [[217, 0], [200], [217, 0, 0, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [0, 204, 205, 206, 203, 207, 208], [217, 0], [209], [217, 0, 0, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], [217, 0, 0, 0, 0, 0, 0], [210, 0, 204, 205, 206, 203, 207, 208], Int64[], [-1]]))
|--|--      __GRPSYMBOL__         £
|--|--          identity                                               
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          £ deg rotation - cart. axis  __MILLER__                
|--|--      __GRPSYMBOL__       £    £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__       £    £   £   £   £   £
|--|--           £ deg rotation - cart. axis  __MILLER__                  
|--|--      __GRPSYMBOL__      £    £   £   £   £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__        £
|--|--          inversion                                              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__           
|--|--      __GRPSYMBOL__     £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £
|--|--          inv.  £ deg rotation - cart. axis  __MILLER__             
|--|--      __GRPSYMBOL__     £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--
|--(1, (0x809215cc9e455e4f, [[227, 228], Int64[], [-1]]))
|--|--   Cartesian axes
|--|--
|--(1, (0x58cbfb54e880f21b, [[229, 230, 90, 231, 232, 233], [0, 26, 234, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, (0x5dc503db753f983c, [[235, 228], Int64[], [-1]]))
|--|--   Crystallographic axes
|--|--
|--(1, (0xcc2b8704c1cea3d0, [[229, 230, 90, 231, 236, 237], [0, 26, 234, 0, 156, 61, 35, 0, 0, 0, 156], Int64[], [-1]]))
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, (0x5ce3bdf0d1f162f2, [[76, 13, 238, 239, 0, 240, 241, 242, 35, 145, 158, 0], [203, 162, 39, 163, 167], [243, 0, 156, 61, 35, 0, 0, 0, 244, 245, 61, 0], Int64[], [-1]]))
|--|--     number of k points=    £  Methfessel-Paxton smearing, width ( __Ry__ )=  £
|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, (0xa3be660acddf7fc5, [[201, 162], [243, 0, 156, 61, 35, 0, 0, 0, 244, 245, 61, 0], Int64[], [-1]]))
|--|--                       cryst. coord.
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, (0x915ceb59910a99cc, [[246, 247, 0, 248, 249, 250, 251], Int64[], [-1]]))
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, (0x44fb4407fb2e761e, [[252, 253, 0, 254], Int64[], [-1]]))
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, (0xadc8506fbeb34d53, [[252, 255, 256, 0, 254], Int64[], [-1]]))
|--|--      __QEDynRAMfor__  (w. buffer):       £ MB
|--|--
|--(12, (0x44fb4407fb2e761e, [[252, 253, 0, 254], Int64[], [-1]]))
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, (0xef6b5d2bf4734286, [[252, 257, 0, 254], Int64[], [-1]]))
|--|--      __QEDynRAMfor__ init/wfcrot:       £ MB
|--|--
|--(1, (0xd71073034d21f738, [[258, 259, 260, 261, 103, 262, 263, 0, 254], Int64[], [-1]]))
|--|--     Estimated static dynamical RAM per process >      £ MB
|--|--
|--(1, (0xe1f8a416eb43deed, [[258, 264, 260, 261, 103, 262, 263, 0, 254], Int64[], [-1]]))
|--|--     Estimated max dynamical RAM per process >      £ MB
|--|--
|--(1, (0xe436c0b609c4718a, [[258, 265, 260, 261, 263, 0, 266], Int64[], [-1]]))
|--|--     Estimated total dynamical RAM >       £ GB
|--|--