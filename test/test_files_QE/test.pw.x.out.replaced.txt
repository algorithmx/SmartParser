(1, (0x4e6e344bc58812ba, [[380, 313, 162, 363, 111, 283, 183, 284], [211, 303, 33, 350, 31, 71, 367, 391, 352, 358], [85, 393, 389, 31, 361, 378, 390], [568, 274, 276, 569, 570, 571, 270, 0, 0, 2, 0, 273], [373, 271], [76, 366, 266, 374, 377, 96, 329, 572, 353, 349, 183], [271], [282, 360, 376, 354, 111, 0, 382], [388, 394, 369, 111, 0, 278], [365, 275, 385, 3, 0], [356, 351, 264, 384, 275, 371, 3, 0], [445, 85, 573], [395, 272, 96, 448, 272], [441, 444, 31, 303, 313, 439], [163, 74, 31, 447, 98, 238, 449, 3, 0], [163, 74, 31, 446, 442, 3, 0], [163, 450, 443, 76, 440, 451, 3, 0], [359, 53, 76, 368, 364, 31, 71, 370, 386], [372, 355, 157, 307, 383, 328, 116, 170], [379, 381, 357, 375, 31, 362, 0, 392, 0, 387], [259, 258], [574], [261, 167, 165, 237, 260, 167, 165, 256], [257, 0, 0, 0, 0, 0, 0], [163, 0, 0, 0, 0, 0, 0], [263, 0, 0, 0, 0, 0, 0], [285], [24], [231, 224, 3, 0], [214, 225, 212, 3, 0, 226], [152, 153, 3, 0, 213], [74, 31, 218, 3, 0], [74, 31, 98, 222, 3, 0], [74, 31, 296, 3, 0], [74, 31, 287, 289, 0], [217, 156, 3, 0, 15], [115, 118, 156, 3, 0, 15], [154, 182, 3, 0], [248, 117, 3, 0], [74, 31, 49, 170, 3, 0, 332, 248], [197, 3, 477, 471, 538, 537, 2, 0, 0, 0, 0, 0, 0, 1], [486, 3, 0], [81, 0, 75, 0, 81, 0, 75, 0, 81, 0, 75, 0], [221, 144, 575, 576, 76, 113, 31, 223], [114, 0, 1, 3, 2, 0, 0, 0, 1], [219, 144, 575, 576, 76, 113, 146, 1], [112, 0, 1, 3, 2, 0, 0, 0, 1], [577, 16, 0, 85, 38, 147, 96, 141], [119], [136], [148, 33, 269, 158, 134, 255, 142, 3, 0], [145, 102, 100, 98, 346, 266, 300, 35, 345, 343], [138, 137, 139, 31, 0, 135, 0, 117, 140, 143], [68, 0, 1, 3, 0], [176, 177, 44, 0, 344, 342, 3, 0, 0, 0], [999999999], [577, 16, 0, 85, 38, 147, 96, 141], [119], [136], [148, 33, 269, 158, 134, 255, 142, 3, 0], [145, 102, 100, 98, 346, 266, 300, 35, 345, 343], [138, 137, 139, 31, 0, 135, 0, 117, 140, 143], [68, 0, 1, 3, 0], [176, 177, 44, 0, 344, 342, 3, 0, 0, 0], [999999999], [98, 238, 286, 229, 299], [38, 0, 0, 38, 2, 0, 1], [0, 578, 579, 44, 291, 288], [228, 580, 581], [19, 3, 0, 164], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 185], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [468], [470, 72, 0, 463], [71, 465, 466], [90, 90, 90, 90, 90, 90, 90, 90, 90, 90], [128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [71, 464, 469, 76, 460, 459, 175, 71, 462, 31, 71, 467, 461], [90, 0], [164], [90, 0, 0, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0], [185], [90, 0, 0, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [215, 161], [160, 585, 26, 159, 227, 232], [0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1], [294, 161], [160, 585, 26, 159, 586, 587], [0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1], [74, 31, 10, 216, 0, 333, 220, 230, 2, 15, 75, 0], [583, 576, 76, 113, 146], [6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0], [582, 576], [6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0], [292, 195, 0, 184, 198, 265, 194], [63, 7, 0, 52], [63, 588, 295, 1, 7, 0, 52], [63, 7, 0, 52], [262, 121, 85, 297, 1, 7, 0, 52], [63, 7, 0, 52], [63, 293, 0, 52], [63, 7, 0, 52], [149, 298, 120, 121, 157, 178, 125, 0, 52], [149, 290, 120, 121, 157, 178, 125, 0, 52], [149, 18, 120, 121, 125, 0, 327], [338, 174, 96, 340, 31, 339, 171], [341, 115, 0, 51, 196, 35, 0], [133, 181, 179, 180, 1, 7, 0, 0], [301, 168, 72, 0, 348, 98, 168, 158, 0, 331, 168], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [431, 429, 430], [74, 31, 54, 241, 3, 0], [74, 31, 172, 243, 3, 0], [166, 100, 3, 0, 15], [100, 253, 254, 3, 0, 252], [100, 24, 3, 0, 15], [100, 152, 153, 3, 0, 245, 2, 0, 240, 1], [118, 3, 0, 244], [24, 306, 0, 1], [999999999], [24, 242], [38, 0, 0, 0], [251, 98, 115, 118, 590, 85, 71, 174], [133, 181, 179, 180, 1, 7, 0, 0], [277, 115, 0, 51, 196, 35, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [74, 31, 54, 241, 3, 0], [74, 31, 172, 243, 3, 0], [166, 305, 3, 0, 15], [166, 100, 3, 0, 15], [304, 24, 55, 24], [100, 253, 254, 3, 0, 252], [100, 24, 3, 0, 15], [100, 152, 153, 3, 0, 245, 2, 0, 240, 1], [118, 3, 0, 244], [24, 306, 0, 1], [999999999], [24, 242], [38, 0, 0, 0], [251, 98, 115, 118, 590, 85, 71, 174], [133, 181, 179, 180, 1, 7, 0, 0], [277, 115, 0, 51, 196, 35, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [74, 31, 54, 241, 3, 0], [74, 31, 172, 243, 3, 0], [166, 305, 3, 0, 15], [166, 100, 3, 0, 15], [304, 24, 55, 24], [458, 24, 398, 172, 302], [100, 253, 254, 3, 0, 252], [100, 24, 3, 0, 15], [100, 152, 153, 3, 0, 245, 2, 0, 240, 1], [118, 3, 0, 244], [24, 306, 0, 1], [999999999], [24, 242], [38, 0, 0, 0], [251, 98, 115, 118, 590, 85, 71, 174], [133, 181, 179, 180, 1, 7, 0, 0], [277, 115, 0, 51, 196, 35, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [314, 317, 111, 311, 247, 315, 318], [246, 44, 316, 182], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [74, 31, 54, 241, 3, 0], [74, 31, 172, 243, 3, 0], [166, 305, 3, 0, 15], [166, 100, 3, 0, 15], [304, 24, 55, 24], [428, 96, 427, 436], [302, 432, 433, 183, 434, 426, 435], [458, 24, 398, 172, 302], [100, 253, 254, 3, 0, 252], [100, 24, 3, 0, 15], [100, 152, 153, 3, 0, 245, 2, 0, 240, 1], [118, 3, 0, 244], [24, 306, 0, 1], [999999999], [24, 242], [38, 0, 0, 0], [251, 98, 115, 118, 590, 85, 71, 174], [133, 181, 179, 180, 1, 7, 0, 0], [277, 115, 0, 51, 196, 35, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [314, 317, 111, 311, 247, 315, 318], [246, 44, 316, 182], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [428, 96, 427, 436], [302, 432, 433, 183, 434, 426, 435], [172, 478, 76, 0, 54, 241, 175, 0, 172, 243], [494, 34, 55, 0, 15, 51, 27, 55, 0, 488, 51, 437, 55, 0, 43, 1], [97, 31, 431, 429, 430], [493, 166, 3, 0, 15], [497, 312, 438], [100, 152, 153, 3, 0, 245, 2, 0, 240, 1], [118, 3, 0, 244], [24, 306, 0, 1], [999999999], [24, 242], [38, 0, 0, 0], [97, 312, 438], [489, 312, 54, 99, 183, 71, 496, 591], [70, 184, 72, 337, 85, 71, 312, 326, 437], [491, 490, 487, 96, 495, 183, 71, 492, 592], [259, 258], [574], [261, 167, 165, 237, 260, 167, 165, 256], [257, 0, 0, 0, 0, 0, 0], [163, 0, 0, 0, 0, 0, 0], [263, 0, 0, 0, 0, 0, 0], [285], [24], [231, 224, 3, 0], [214, 225, 212, 3, 0, 226], [152, 153, 3, 0, 213], [74, 31, 218, 3, 0], [74, 31, 98, 222, 3, 0], [74, 31, 296, 3, 0], [74, 31, 287, 289, 0], [217, 156, 3, 0, 15], [115, 118, 156, 3, 0, 15], [154, 182, 3, 0], [248, 117, 3, 0], [74, 31, 49, 170, 3, 0, 332, 248], [197, 3, 477, 471, 538, 537, 2, 0, 0, 0, 0, 0, 0, 1], [81, 0, 75, 0, 81, 0, 75, 0, 81, 0, 75, 0], [221, 144, 575, 576, 76, 113, 31, 223], [114, 0, 1, 3, 2, 0, 0, 0, 1], [219, 144, 575, 576, 76, 113, 146, 1], [112, 0, 1, 3, 2, 0, 0, 0, 1], [577, 16, 0, 85, 38, 147, 96, 141], [119], [136], [148, 33, 269, 158, 134, 255, 142, 3, 0], [145, 102, 100, 98, 346, 266, 300, 35, 345, 343], [138, 137, 139, 31, 0, 135, 0, 117, 140, 143], [68, 0, 1, 3, 0], [176, 177, 44, 0, 344, 342, 3, 0, 0, 0], [999999999], [577, 16, 0, 85, 38, 147, 96, 141], [119], [136], [148, 33, 269, 158, 134, 255, 142, 3, 0], [145, 102, 100, 98, 346, 266, 300, 35, 345, 343], [138, 137, 139, 31, 0, 135, 0, 117, 140, 143], [68, 0, 1, 3, 0], [176, 177, 44, 0, 344, 342, 3, 0, 0, 0], [999999999], [98, 238, 286, 229, 299], [38, 0, 0, 38, 2, 0, 1], [0, 578, 579, 44, 291, 288], [228, 580, 581], [19, 3, 0, 164], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 185], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1], [468], [470, 72, 0, 463], [71, 465, 466], [90, 90, 90, 90, 90, 90, 90, 90, 90, 90], [128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [71, 464, 469, 76, 460, 459, 175, 71, 462, 31, 71, 467, 461], [90, 0], [164], [90, 0, 0, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [0, 23, 21, 17, 583, 20, 22], [90, 0], [185], [90, 0, 0, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [90, 0, 0, 0, 0, 0, 0], [584, 0, 23, 21, 17, 583, 20, 22], [215, 161], [160, 585, 26, 159, 227, 232], [0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1], [294, 161], [160, 585, 26, 159, 586, 587], [0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1], [74, 31, 10, 216, 0, 333, 220, 230, 2, 15, 75, 0], [583, 576, 76, 113, 146], [6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0], [582, 576], [6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0], [292, 195, 0, 184, 198, 265, 194], [63, 7, 0, 52], [63, 588, 295, 1, 7, 0, 52], [63, 7, 0, 52], [262, 121, 85, 297, 1, 7, 0, 52], [63, 7, 0, 52], [63, 293, 0, 52], [63, 7, 0, 52], [149, 298, 120, 121, 157, 178, 125, 0, 52], [149, 290, 120, 121, 157, 178, 125, 0, 52], [149, 18, 120, 121, 125, 0, 327], [338, 174, 96, 340, 31, 339, 171], [341, 115, 0, 51, 196, 35, 0], [133, 181, 179, 180, 1, 7, 0, 0], [301, 168, 72, 0, 348, 98, 168, 158, 0, 331, 168], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [103, 95], [60, 16, 0, 62, 0, 15, 61, 0], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1], [56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [97, 31, 105, 99], [10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1], [71, 73, 34, 33, 0, 9], [191, 18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [70, 18, 34, 33, 71, 169, 31, 71, 189, 190], [188, 86, 3, 0, 15], [150, 86, 3, 0, 15], [151, 86, 3, 0, 15], [187, 86, 3, 0, 15], [192, 589, 193, 3, 0, 15], [154, 104, 106, 107, 76, 0, 49], [133, 181, 179, 180, 1, 7, 0, 0], [210, 209, 111, 171, 205, 200, 204, 1, 7], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1], [131, 27, 3, 0, 131, 130, 129, 3, 0], [83, 132, 202, 207, 175, 201], [133, 181, 179, 180, 1, 7, 0, 0], [18, 132, 2, 208, 1, 2, 43, 1, 206, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [155, 102, 50], [50, 25, 36, 25, 37, 2, 0, 39], [336, 250], [122, 25, 36, 25, 37, 2, 0, 39], [282, 250], [122, 25, 36, 25, 37, 2, 0, 39], [50, 25, 36, 25, 37], [211, 423, 247, 424, 421, 284, 283], [593], [422, 594], [593], [-1]]))
|--(1, (0xe8bf9e62048a27aa, [[380, 313, 162, 363, 111, 283, 183, 284]]))
        Program  __KWPWSCF__   __VERSIONa__  starts on  __DATEa__  at  __HHMMSS__  
|--(1, (0x578405074ccc015a, [[211, 303, 33, 350, 31, 71, 367, 391, 352, 358]]))
        This program is part of the open-source Quantum ESPRESSO suite
|--(1, (0xa4326edcc37ac1c4, [[85, 393, 389, 31, 361, 378, 390]]))
        for quantum simulation of materials; please cite
|--(2, (0x25273969f4b7d26a, [[568, 274, 276, 569, 570, 571, 270, 0, 0, 2, 0, 273]]))
            "P. Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
            "P. Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
|--(1, (0x240ec5db1cae7802, [[373, 271]]))
             URL  __URL__  
|--(1, (0x6959a98b7e84d860, [[76, 366, 266, 374, 377, 96, 329, 572, 353, 349, 183]]))
        in publications or presentations arising from this work. More details at
|--(1, (0x8eb10c0eac6aa57d, [[271]]))
         __URL__ 
|--(1, (0x77baf472faa91c60, [[282, 360, 376, 354, 111, 0, 382]]))
        Parallel version (MPI), running on    £ processors
|--(1, (0x8c9ff9cdc213d179, [[388, 394, 369, 111, 0, 278]]))
        MPI processes distributed on     £ nodes
|--(1, (0x6cd10444f44a7e6a, [[365, 275, 385, 3, 0]]))
        K-points division:     npool     =       £
|--(1, (0x29587c5d2d8a78b4, [[356, 351, 264, 384, 275, 371, 3, 0]]))
        R & G space division:  proc/nbgrp/npool/nimage =       £
|--(1, (0xaab920cc8564fe1e, [[445, 85, 573]]))
        Waiting for input...
|--(1, (0xcc54e04ff3368bf2, [[395, 272, 96, 448, 272]]))
        Reading input from standard input
|--(1, (0x9784b347a80b5246, [[441, 444, 31, 303, 313, 439]]))
        Current dimensions of program  __KWPWSCF__  are:
|--(1, (0xeb0482fa864b391e, [[163, 74, 31, 447, 98, 238, 449, 3, 0]]))
        Max number of different atomic species (ntypx) = £
|--(1, (0x2e16e7392476fa0b, [[163, 74, 31, 446, 442, 3, 0]]))
        Max number of k-points (npk) =  £
|--(1, (0x80b4e05b03c540e4, [[163, 450, 443, 76, 440, 451, 3, 0]]))
        Max angular momentum in pseudopotentials (lmaxx) =  £
|--(1, (0x29beaa9b47580f94, [[359, 53, 76, 368, 364, 31, 71, 370, 386]]))
        Subspace diagonalization in iterative solution of the eigenvalue problem:
|--(1, (0x115b4c9dc57ca625, [[372, 355, 157, 307, 383, 328, 116, 170]]))
        one sub-group per band group will be used
|--(1, (0xc1d7dd6d15e29858, [[379, 381, 357, 375, 31, 362, 0, 392, 0, 387]]))
        scalapack distributed-memory algorithm (size of sub-group:  £ *   £ procs)
|--(1, (0xb90c52b354aebd04, [[259, 258]]))
        Parallelization info
|--(1, (0xf374175dd9bb6f5c, [[574]]))
        --------------------
|--(1, (0x7956652488857874, [[261, 167, 165, 237, 260, 167, 165, 256]]))
        sticks:   dense  smooth      __KWPW__      G-vecs:    dense   smooth      PW
|--(1, (0xc37af5848751587b, [[257, 0, 0, 0, 0, 0, 0]]))
        Min         £     £     £                 £     £    £
|--(1, (0x52390d5428b3b77c, [[163, 0, 0, 0, 0, 0, 0]]))
        Max         £     £     £                 £     £    £
|--(1, (0xeb16ced3e6ad3379, [[263, 0, 0, 0, 0, 0, 0]]))
        Sum        £    £    £                £    £    £
|--(1, (0xb6313f28a1729f04, [[285]]))
        Title: 
|--(1, (0x707e1d22c472a871, [[24]]))
         __SYMBOLtypeA__                                                               
|--(1, (0xc35cc93be2ab52d3, [[231, 224, 3, 0]]))
        bravais-lattice index     =            £
|--(1, (0x1de366526fa60406, [[214, 225, 212, 3, 0, 226]]))
        lattice parameter  __ALAT__   =       £   __au__ 
|--(1, (0xeb1bf1b533a68ce1, [[152, 153, 3, 0, 213]]))
        unit-cell volume          =     £  __UNITVOLa__ 
|--(1, (0x2a1bd79b21e6f8a4, [[74, 31, 218, 3, 0]]))
        number of atoms/cell      =            £
|--(1, (0xc43d8584c3530949, [[74, 31, 98, 222, 3, 0]]))
        number of atomic types    =            £
|--(1, (0xa20743242ea08961, [[74, 31, 296, 3, 0]]))
        number of electrons       =        £
|--(1, (0x6e3312308e984d6e, [[74, 31, 287, 289, 0]]))
        number of Kohn-Sham states=           £
|--(1, (0x8209fa07e0f56e55, [[217, 156, 3, 0, 15]]))
        kinetic-energy cutoff     =     £   __Ry__ 
|--(1, (0xc19f956322179849, [[115, 118, 156, 3, 0, 15]]))
        charge density cutoff     =     £   __Ry__ 
|--(1, (0xbf3e83dcb4c5a04b, [[154, 182, 3, 0]]))
        convergence threshold     =      £
|--(1, (0x5ae00ab905baaaa3, [[248, 117, 3, 0]]))
        mixing beta               =       £
|--(1, (0xc753fbbab6c81e17, [[74, 31, 49, 170, 3, 0, 332, 248]]))
        number of iterations used =            £  plain     mixing
|--(1, (0xd03d8df5d3cfcda8, [[197, 3, 477, 471, 538, 537, 2, 0, 0, 0, 0, 0, 0, 1]]))
        Exchange-correlation      = SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--(1, (0x75c07853850d30a4, [[486, 3, 0]]))
        nstep                     =           £
|--(2, (0x97d1774a170e5aff, [[81, 0, 75, 0, 81, 0, 75, 0, 81, 0, 75, 0]]))
        celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
        celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--(1, (0x6af33693a8b470fd, [[221, 144, 575, 576, 76, 113, 31, 223]]))
        crystal axes: (cart. coord. in units of alat)
|--(3, (0xf9320b54b64402ed, [[114, 0, 1, 3, 2, 0, 0, 0, 1]]))
                  a( £ ) = (   £   £   £ )  
                  a( £ ) = (   £   £   £ )  
                  a( £ ) = (   £   £   £ )  
|--(1, (0x7f16c7e25334350a, [[219, 144, 575, 576, 76, 113, 146, 1]]))
        reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--(3, (0x9ca0058d678d68a0, [[112, 0, 1, 3, 2, 0, 0, 0, 1]]))
                  b( £ ) = (  £  £  £ )  
                  b( £ ) = (  £  £  £ )  
                  b( £ ) = (  £  £  £ )  
|--(1, (0xdfb4ffe0cbc16a54, [[577, 16, 0, 85, 38, 147, 96, 141]]))
        PseudoPot. # £ for  __CHEM__  read from file:
|--(1, (0xba9a08d4c23f4b87, [[119]]))
         __FULLPATH__ 
|--(1, (0x0bef8daa72c1bdf4, [[136]]))
         __CHKSUM__ 
|--(1, (0xfd5b4a2561d05060, [[148, 33, 269, 158, 134, 255, 142, 3, 0]]))
        Pseudo is Ultrasoft + core correction, Zval = £
|--(1, (0x57765c4326001bde, [[145, 102, 100, 98, 346, 266, 300, 35, 345, 343]]))
        Generated by new atomic code, or converted to  __KWUPF__  format
|--(1, (0x0a3af19d586c1e9d, [[138, 137, 139, 31, 0, 135, 0, 117, 140, 143]]))
        Using radial grid of  £ points,  £ beta functions with: 
|--(8, (0x54fd18df0d7504df, [[68, 0, 1, 3, 0]]))
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
|--(1, (0x31760706d5fe044c, [[176, 177, 44, 0, 344, 342, 3, 0, 0, 0]]))
        Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                                          £   £   £
                                                          £
|--(1, (0xdfb4ffe0cbc16a54, [[577, 16, 0, 85, 38, 147, 96, 141]]))
        PseudoPot. # £ for  __CHEM__   read from file:
|--(1, (0xba9a08d4c23f4b87, [[119]]))
         __FULLPATH__ 
|--(1, (0x0bef8daa72c1bdf4, [[136]]))
         __CHKSUM__ 
|--(1, (0xfd5b4a2561d05060, [[148, 33, 269, 158, 134, 255, 142, 3, 0]]))
        Pseudo is Ultrasoft + core correction, Zval =  £
|--(1, (0x57765c4326001bde, [[145, 102, 100, 98, 346, 266, 300, 35, 345, 343]]))
        Generated by new atomic code, or converted to  __KWUPF__  format
|--(1, (0x0a3af19d586c1e9d, [[138, 137, 139, 31, 0, 135, 0, 117, 140, 143]]))
        Using radial grid of  £ points,  £ beta functions with: 
|--(5, (0xc56141a28210698e, [[68, 0, 1, 3, 0]]))
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
|--(1, (0x31760706d5fe044c, [[176, 177, 44, 0, 344, 342, 3, 0, 0, 0]]))
        Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--(1, (0x58777f4a929200b5, [[999999999]]))
                                                          £   £
|--(1, (0x21131b2d62dc44dd, [[98, 238, 286, 229, 299]]))
        atomic species   valence    mass     pseudopotential
|--(2, (0x840f004e9e359cb0, [[38, 0, 0, 38, 2, 0, 1]]))
            __CHEM__             £   £      __CHEM__ ( £ )
            __CHEM__               £    £      __CHEM__  ( £ )
|--(1, (0xa7e4f7b307d82fec, [[0, 578, 579, 44, 291, 288]]))
        £ Sym. Ops., with inversion, found
|--(1, (0x24c17c5563cf6c84, [[228, 580, 581]]))
                                       s                        frac. trans.
|--(1, (0xce3cf85c63c634b4, [[19, 3, 0, 164], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x6042c9cae7a79210, [[19, 3, 0, 164]]))
            isym =  £     identity                                     
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (     £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £          £          £      )
                        (     £          £          £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = (  £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £  £  £ )
                        (  £  £  £ )
|--(23, (0x1b2d4d95c9d42252, [[19, 3, 0, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x3671f39b827a4f90, [[19, 3, 0, 0, 23, 21, 17, 583, 20, 22]]))
            isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (    £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £         £          £      )
                        (     £          £          £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = ( £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £ £  £ )
                        (  £  £  £ )
|--(1, (0xf5dc366d02fa4f34, [[19, 3, 0, 185], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0xec27fa5f2a34e283, [[19, 3, 0, 185]]))
            isym = £     inversion                                    
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (    £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £         £          £      )
                        (     £          £         £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = ( £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £ £  £ )
                        (  £  £ £ )
|--(23, (0x25155082f06937a2, [[19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x931ad5f21780f596, [[19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22]]))
            isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (     £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £          £          £      )
                        (     £          £         £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = (  £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £  £  £ )
                        (  £  £ £ )
|--(1, (0x1547581c50ff0eba, [[468]]))
         __POINTGROUP__  
|--(1, (0xff99748481cfba5c, [[470, 72, 0, 463]]))
        there are £ classes
|--(1, (0xbdabacb355885341, [[71, 465, 466]]))
        the character table:
|--(1, (0x2ad818e6db6447c2, [[90, 90, 90, 90, 90, 90, 90, 90, 90, 90]]))
           __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__     __GRPSYMBOL__  
|--(10, (0x19097934c0462ea9, [[128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]))
    __REPSYMBOL__    £  £  £  £  £  £  £  £  £  £
    __REPSYMBOL__    £  £  £ £ £  £  £  £ £ £
    __REPSYMBOL__     £ £  £  £  £  £ £  £  £  £
    __REPSYMBOL__    £  £ £  £ £  £  £ £  £ £
    __REPSYMBOL__    £  £ £ £  £  £  £ £ £  £
    __REPSYMBOL__    £  £  £  £  £ £ £ £ £ £
    __REPSYMBOL__    £  £  £ £ £ £ £ £  £  £
    __REPSYMBOL__     £ £  £  £  £ £  £ £  £  £
    __REPSYMBOL__    £  £ £  £ £ £  £  £ £  £
    __REPSYMBOL__    £  £ £ £  £ £  £  £  £ £
|--(1, (0x1ceb27aec87d4353, [[71, 464, 469, 76, 460, 459, 175, 71, 462, 31, 71, 467, 461]]))
        the symmetry operations in each class and the name of the first element:
|--(1, (0xd6fce4e1c41d3b0c, [[90, 0]]))
         __GRPSYMBOL__         £
|--(1, (0xe8d46c1c43e80067, [[164]]))
             identity                                               
|--(1, (0xa908f24b5fedf902, [[90, 0, 0, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                
|--(1, (0x2227f0845a4775a7, [[90, 0, 0, 0]]))
         __GRPSYMBOL__       £    £    £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                   
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__       £    £   £   £   £   £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
              £ deg rotation - cart. axis  __MILLER__                  
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £    £   £   £   £    £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                   
|--(1, (0xd6fce4e1c41d3b0c, [[90, 0]]))
         __GRPSYMBOL__        £
|--(1, (0x9b39b3911afd4a9d, [[185]]))
             inversion                                              
|--(1, (0xa908f24b5fedf902, [[90, 0, 0, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__           
|--(1, (0x2227f0845a4775a7, [[90, 0, 0, 0]]))
         __GRPSYMBOL__     £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__              
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv.  £ deg rotation - cart. axis  __MILLER__             
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__     £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__              
|--(1, (0x97671e8208dcfbb2, [[215, 161]]))
      Cartesian axes
|--(1, (0xdd16ee41b9627290, [[160, 585, 26, 159, 227, 232]]))
        site n.     atom                  positions (alat units)
|--(4, (0xa6c3c7623559d8ab, [[0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1]]))
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--(1, (0x2fa24fbb7f6b7764, [[294, 161]]))
      Crystallographic axes
|--(1, (0x04a067888a2aef9b, [[160, 585, 26, 159, 586, 587]]))
        site n.     atom                  positions (cryst. coord.)
|--(4, (0xa6c3c7623559d8ab, [[0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1]]))
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--(1, (0xfba909757c282c43, [[74, 31, 10, 216, 0, 333, 220, 230, 2, 15, 75, 0]]))
        number of k points=    £  Methfessel-Paxton smearing, width ( __Ry__ )=  £
|--(1, (0x36338c6c94c1faaa, [[583, 576, 76, 113, 146]]))
                          cart. coord. in units  __UNITTWOPIALAT__ 
|--(56, (0x23db1f6938172a48, [[6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0]]))
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
|--(1, (0x06919ba8bf668387, [[582, 576]]))
                          cryst. coord.
|--(56, (0x23db1f6938172a48, [[6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0]]))
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
|--(1, (0xbb51400802f82136, [[292, 195, 0, 184, 198, 265, 194]]))
        Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--(1, (0x53cdf445c97fe095, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
|--(1, (0xf471a652d12886cd, [[63, 588, 295, 1, 7, 0, 52]]))
         __QEDynRAMfor__  (w. buffer ) :       £ MB
|--(8, (0x88627f20c5c1dc95, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :      £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0xc6001fd090e5aed5, [[262, 121, 85, 297, 1, 7, 0, 52]]))
        Dynamical RAM for          h,s,v(r/c ) :       £ MB
|--(4, (0x3c1042eb68d5d8d3, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0x3a58899afc20fc5c, [[63, 293, 0, 52]]))
         __QEDynRAMfor__ init/wfcrot:       £ MB
|--(3, (0x2639a77984018dd4, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0x93c2772cc1e48b57, [[149, 298, 120, 121, 157, 178, 125, 0, 52]]))
        Estimated static dynamical RAM per process >      £ MB
|--(1, (0xb58477ab5d89db98, [[149, 290, 120, 121, 157, 178, 125, 0, 52]]))
        Estimated max dynamical RAM per process >      £ MB
|--(1, (0xa996d5ccc7be99ed, [[149, 18, 120, 121, 125, 0, 327]]))
        Estimated total dynamical RAM >       £ GB
|--(1, (0xc2bb19f6572cfd70, [[338, 174, 96, 340, 31, 339, 171]]))
        Initial potential from superposition of free atoms
|--(1, (0x31755efc0419392d, [[341, 115, 0, 51, 196, 35, 0]]))
        starting charge   £ , renormalised to   £
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x55d09808eda141dc, [[301, 168, 72, 0, 348, 98, 168, 158, 0, 331, 168]]))
        Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is        £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(6, (0x6a810b940ddcf0b2, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations =  £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is        £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <       £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is        £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <       £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in   £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £   £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £    £   £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__  £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
     £   £   £        £      £      £
      £  £   £          £    £      £
      £   £  £          £      £    £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £     £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                     £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(1, (0x5da002e040c57d6c, [[431, 429, 430]]))
        BFGS Geometry Optimization
|--(1, (0xc69c4a7c368381b6, [[74, 31, 54, 241, 3, 0]]))
        number of scf cycles    =   £
|--(1, (0x85d6c17a3e3f6ba4, [[74, 31, 172, 243, 3, 0]]))
        number of bfgs steps    =   £
|--(1, (0x28fb5d11dcc7b725, [[166, 100, 3, 0, 15]]))
        enthalpy new            =    £  __Ry__ 
|--(1, (0x8789e095a0d48eef, [[100, 253, 254, 3, 0, 252]]))
        new trust radius        =       £ bohr
|--(1, (0x336d35fadac26055, [[100, 24, 3, 0, 15]]))
        new  __SYMBOLtypeA__             =       £  __Ry__ 
|--(1, (0xf65e33cdb047379d, [[100, 152, 153, 3, 0, 245, 2, 0, 240, 1]]))
        new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--(1, (0xcdbd597a94a9af16, [[118, 3, 0, 244]]))
        density =      £  __UNITDENSITY__ 
|--(1, (0x50aaf52a07a9bb59, [[24, 306, 0, 1]]))
    __SYMBOLtypeA__  (alat=  £ )
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £
      £   £   £
      £   £   £
|--(1, (0xeacb6009e3b179bc, [[24, 242]]))
    __SYMBOLtypeA__  (crystal)
|--(4, (0x55ebc1dd172b677b, [[38, 0, 0, 0]]))
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__        £   £   £
|--(1, (0xdd715ea31f8896f9, [[251, 98, 115, 118, 590, 85, 71, 174]]))
        NEW-OLD atomic charge density approx. for the potential
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0xe1646c35360765b2, [[277, 115, 0, 51, 196, 35, 0]]))
        extrapolated charge   £ , renormalised to   £
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is       £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(7, (0x4cb842caccff97ef, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations =  £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is       £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <       £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is       £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <       £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in   £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £   £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__   £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £         £      £      £
      £   £   £          £     £      £
      £   £   £          £      £     £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(1, (0xc69c4a7c368381b6, [[74, 31, 54, 241, 3, 0]]))
        number of scf cycles    =   £
|--(1, (0x85d6c17a3e3f6ba4, [[74, 31, 172, 243, 3, 0]]))
        number of bfgs steps    =   £
|--(1, (0xafe4734065885b65, [[166, 305, 3, 0, 15]]))
        enthalpy old            =    £  __Ry__ 
|--(1, (0x28fb5d11dcc7b725, [[166, 100, 3, 0, 15]]))
        enthalpy new            =    £  __Ry__ 
|--(1, (0x4685a3ed5ee22b4e, [[304, 24, 55, 24]]))
        CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--(1, (0x8789e095a0d48eef, [[100, 253, 254, 3, 0, 252]]))
        new trust radius        =       £ bohr
|--(1, (0x336d35fadac26055, [[100, 24, 3, 0, 15]]))
        new  __SYMBOLtypeA__             =       £  __Ry__ 
|--(1, (0xf65e33cdb047379d, [[100, 152, 153, 3, 0, 245, 2, 0, 240, 1]]))
        new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--(1, (0xcdbd597a94a9af16, [[118, 3, 0, 244]]))
        density =      £  __UNITDENSITY__ 
|--(1, (0x50aaf52a07a9bb59, [[24, 306, 0, 1]]))
    __SYMBOLtypeA__  (alat=  £ )
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £
      £   £   £
      £   £   £
|--(1, (0xeacb6009e3b179bc, [[24, 242]]))
    __SYMBOLtypeA__  (crystal)
|--(4, (0x55ebc1dd172b677b, [[38, 0, 0, 0]]))
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__        £   £   £
|--(1, (0xdd715ea31f8896f9, [[251, 98, 115, 118, 590, 85, 71, 174]]))
        NEW-OLD atomic charge density approx. for the potential
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0xe1646c35360765b2, [[277, 115, 0, 51, 196, 35, 0]]))
        extrapolated charge   £ , renormalised to   £
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is       £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(11, (0x108fa1dd3529a197, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations =  £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is       £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <       £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is       £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <          £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in  £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__   £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
     £   £   £         £      £      £
      £  £   £          £     £      £
      £   £  £          £      £     £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £     £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                     £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(1, (0xc69c4a7c368381b6, [[74, 31, 54, 241, 3, 0]]))
        number of scf cycles    =   £
|--(1, (0x85d6c17a3e3f6ba4, [[74, 31, 172, 243, 3, 0]]))
        number of bfgs steps    =   £
|--(1, (0xafe4734065885b65, [[166, 305, 3, 0, 15]]))
        enthalpy old            =    £  __Ry__ 
|--(1, (0x28fb5d11dcc7b725, [[166, 100, 3, 0, 15]]))
        enthalpy new            =    £  __Ry__ 
|--(1, (0x4685a3ed5ee22b4e, [[304, 24, 55, 24]]))
        CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--(1, (0x3acae7d722f4d2f9, [[458, 24, 398, 172, 302]]))
        small  __SYMBOLtypeA__  resetting bfgs history
|--(1, (0x8789e095a0d48eef, [[100, 253, 254, 3, 0, 252]]))
        new trust radius        =       £ bohr
|--(1, (0x336d35fadac26055, [[100, 24, 3, 0, 15]]))
        new  __SYMBOLtypeA__             =       £  __Ry__ 
|--(1, (0xf65e33cdb047379d, [[100, 152, 153, 3, 0, 245, 2, 0, 240, 1]]))
        new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--(1, (0xcdbd597a94a9af16, [[118, 3, 0, 244]]))
        density =      £  __UNITDENSITY__ 
|--(1, (0x50aaf52a07a9bb59, [[24, 306, 0, 1]]))
    __SYMBOLtypeA__  (alat=  £ )
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £
      £   £   £
      £   £   £
|--(1, (0xeacb6009e3b179bc, [[24, 242]]))
    __SYMBOLtypeA__  (crystal)
|--(4, (0x55ebc1dd172b677b, [[38, 0, 0, 0]]))
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__        £   £   £
|--(1, (0xdd715ea31f8896f9, [[251, 98, 115, 118, 590, 85, 71, 174]]))
        NEW-OLD atomic charge density approx. for the potential
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0xe1646c35360765b2, [[277, 115, 0, 51, 196, 35, 0]]))
        extrapolated charge   £ , renormalised to   £
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is       £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
        Davidson diagonalization with overlap
|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
        ethr =  £ ,  avg # of iterations =  £
|--(1, (0xd5fffb72d1f27224, [[314, 317, 111, 311, 247, 315, 318]]))
        Threshold (ethr) on eigenvalues was too large:
|--(1, (0x52e10a709c0af178, [[246, 44, 316, 182]]))
        Diagonalizing with lowered threshold
|--(6, (0x6a810b940ddcf0b2, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations =  £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is       £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <       £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is       £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <          £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in   £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =    £    £   £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £          £      £      £
      £   £   £          £      £      £
      £   £   £          £      £      £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £     £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                     £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(1, (0xc69c4a7c368381b6, [[74, 31, 54, 241, 3, 0]]))
        number of scf cycles    =   £
|--(1, (0x85d6c17a3e3f6ba4, [[74, 31, 172, 243, 3, 0]]))
        number of bfgs steps    =   £
|--(1, (0xafe4734065885b65, [[166, 305, 3, 0, 15]]))
        enthalpy old            =    £  __Ry__ 
|--(1, (0x28fb5d11dcc7b725, [[166, 100, 3, 0, 15]]))
        enthalpy new            =    £  __Ry__ 
|--(1, (0x4685a3ed5ee22b4e, [[304, 24, 55, 24]]))
        CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--(1, (0xdd1359e6225027b5, [[428, 96, 427, 436]]))
        Message from routine bfgs:
|--(1, (0xe6185ea822d8a610, [[302, 432, 433, 183, 434, 426, 435]]))
        history already reset at previous step: stopping
|--(1, (0x3acae7d722f4d2f9, [[458, 24, 398, 172, 302]]))
        small  __SYMBOLtypeA__  resetting bfgs history
|--(1, (0x8789e095a0d48eef, [[100, 253, 254, 3, 0, 252]]))
        new trust radius        =       £ bohr
|--(1, (0x336d35fadac26055, [[100, 24, 3, 0, 15]]))
        new  __SYMBOLtypeA__             =       £  __Ry__ 
|--(1, (0xf65e33cdb047379d, [[100, 152, 153, 3, 0, 245, 2, 0, 240, 1]]))
        new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--(1, (0xcdbd597a94a9af16, [[118, 3, 0, 244]]))
        density =      £  __UNITDENSITY__ 
|--(1, (0x50aaf52a07a9bb59, [[24, 306, 0, 1]]))
    __SYMBOLtypeA__  (alat=  £ )
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £
      £   £   £
      £   £   £
|--(1, (0xeacb6009e3b179bc, [[24, 242]]))
    __SYMBOLtypeA__  (crystal)
|--(4, (0x55ebc1dd172b677b, [[38, 0, 0, 0]]))
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__        £   £   £
|--(1, (0xdd715ea31f8896f9, [[251, 98, 115, 118, 590, 85, 71, 174]]))
        NEW-OLD atomic charge density approx. for the potential
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0xe1646c35360765b2, [[277, 115, 0, 51, 196, 35, 0]]))
        extrapolated charge   £ , renormalised to   £
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is       £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
        Davidson diagonalization with overlap
|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
        ethr =  £ ,  avg # of iterations =  £
|--(1, (0xd5fffb72d1f27224, [[314, 317, 111, 311, 247, 315, 318]]))
        Threshold (ethr) on eigenvalues was too large:
|--(1, (0x52e10a709c0af178, [[246, 44, 316, 182]]))
        Diagonalizing with lowered threshold
|--(3, (0x29092180588d454a, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations =  £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is       £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <          £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is       £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <          £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in   £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £          £      £      £
      £   £   £          £      £      £
      £   £   £          £      £      £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(1, (0xdd1359e6225027b5, [[428, 96, 427, 436]]))
        Message from routine bfgs:
|--(1, (0xe6185ea822d8a610, [[302, 432, 433, 183, 434, 426, 435]]))
        history already reset at previous step: stopping
|--(1, (0xfa32a3795a9d9206, [[172, 478, 76, 0, 54, 241, 175, 0, 172, 243]]))
        bfgs converged in   £ scf cycles and   £ bfgs steps
|--(1, (0x574aa8bde3b89528, [[494, 34, 55, 0, 15, 51, 27, 55, 0, 488, 51, 437, 55, 0, 43, 1]]))
        (criteria: energy <  £  __Ry__ , force <  £ __UNITFORCEa__ , cell <  £ __UNITkbar__ )
|--(1, (0x996da9b3a42e92fc, [[97, 31, 431, 429, 430]]))
        End of BFGS Geometry Optimization
|--(1, (0x018ebc7437301d2b, [[493, 166, 3, 0, 15]]))
        Final enthalpy =    £  __Ry__ 
|--(1, (0x8afd120dec942e29, [[497, 312, 438]]))
   Begin final coordinates
|--(1, (0xf65e33cdb047379d, [[100, 152, 153, 3, 0, 245, 2, 0, 240, 1]]))
        new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--(1, (0xcdbd597a94a9af16, [[118, 3, 0, 244]]))
        density =      £  __UNITDENSITY__ 
|--(1, (0x50aaf52a07a9bb59, [[24, 306, 0, 1]]))
    __SYMBOLtypeA__  (alat=  £ )
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £
      £   £   £
      £   £   £
|--(1, (0xeacb6009e3b179bc, [[24, 242]]))
    __SYMBOLtypeA__  (crystal)
|--(4, (0x55ebc1dd172b677b, [[38, 0, 0, 0]]))
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__         £   £   £
    __CHEM__        £   £   £
|--(1, (0x81869f8642806ecb, [[97, 312, 438]]))
   End final coordinates
|--(1, (0x41495805689d0b57, [[489, 312, 54, 99, 183, 71, 496, 591]]))
        A final scf calculation at the relaxed structure.
|--(1, (0xa8b259d1dbd75a34, [[70, 184, 72, 337, 85, 71, 312, 326, 437]]))
        The G-vectors are recalculated for the final unit cell
|--(1, (0x578f86592dac6d23, [[491, 490, 487, 96, 495, 183, 71, 492, 592]]))
        Results may differ from those at the preceding step.
|--(1, (0xb90c52b354aebd04, [[259, 258]]))
        Parallelization info
|--(1, (0xf374175dd9bb6f5c, [[574]]))
        --------------------
|--(1, (0x7956652488857874, [[261, 167, 165, 237, 260, 167, 165, 256]]))
        sticks:   dense  smooth      __KWPW__      G-vecs:    dense   smooth      PW
|--(1, (0xc37af5848751587b, [[257, 0, 0, 0, 0, 0, 0]]))
        Min         £     £     £                 £     £    £
|--(1, (0x52390d5428b3b77c, [[163, 0, 0, 0, 0, 0, 0]]))
        Max         £     £     £                 £     £    £
|--(1, (0xeb16ced3e6ad3379, [[263, 0, 0, 0, 0, 0, 0]]))
        Sum        £    £    £                £    £    £
|--(1, (0xb6313f28a1729f04, [[285]]))
        Title: 
|--(1, (0x707e1d22c472a871, [[24]]))
         __SYMBOLtypeA__                                                               
|--(1, (0xc35cc93be2ab52d3, [[231, 224, 3, 0]]))
        bravais-lattice index     =            £
|--(1, (0x1de366526fa60406, [[214, 225, 212, 3, 0, 226]]))
        lattice parameter  __ALAT__   =       £   __au__ 
|--(1, (0xeb1bf1b533a68ce1, [[152, 153, 3, 0, 213]]))
        unit-cell volume          =     £  __UNITVOLa__ 
|--(1, (0x2a1bd79b21e6f8a4, [[74, 31, 218, 3, 0]]))
        number of atoms/cell      =            £
|--(1, (0xc43d8584c3530949, [[74, 31, 98, 222, 3, 0]]))
        number of atomic types    =            £
|--(1, (0xa20743242ea08961, [[74, 31, 296, 3, 0]]))
        number of electrons       =        £
|--(1, (0x6e3312308e984d6e, [[74, 31, 287, 289, 0]]))
        number of Kohn-Sham states=           £
|--(1, (0x8209fa07e0f56e55, [[217, 156, 3, 0, 15]]))
        kinetic-energy cutoff     =     £   __Ry__ 
|--(1, (0xc19f956322179849, [[115, 118, 156, 3, 0, 15]]))
        charge density cutoff     =     £   __Ry__ 
|--(1, (0xbf3e83dcb4c5a04b, [[154, 182, 3, 0]]))
        convergence threshold     =      £
|--(1, (0x5ae00ab905baaaa3, [[248, 117, 3, 0]]))
        mixing beta               =       £
|--(1, (0xc753fbbab6c81e17, [[74, 31, 49, 170, 3, 0, 332, 248]]))
        number of iterations used =            £  plain     mixing
|--(1, (0xd03d8df5d3cfcda8, [[197, 3, 477, 471, 538, 537, 2, 0, 0, 0, 0, 0, 0, 1]]))
        Exchange-correlation      = SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--(2, (0x97d1774a170e5aff, [[81, 0, 75, 0, 81, 0, 75, 0, 81, 0, 75, 0]]))
        celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
        celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--(1, (0x6af33693a8b470fd, [[221, 144, 575, 576, 76, 113, 31, 223]]))
        crystal axes: (cart. coord. in units of alat)
|--(3, (0xf9320b54b64402ed, [[114, 0, 1, 3, 2, 0, 0, 0, 1]]))
                  a( £ ) = (   £   £   £ )  
                  a( £ ) = (   £   £   £ )  
                  a( £ ) = (   £   £   £ )  
|--(1, (0x7f16c7e25334350a, [[219, 144, 575, 576, 76, 113, 146, 1]]))
        reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--(3, (0x9ca0058d678d68a0, [[112, 0, 1, 3, 2, 0, 0, 0, 1]]))
                  b( £ ) = (  £  £  £ )  
                  b( £ ) = (  £  £  £ )  
                  b( £ ) = (  £  £  £ )  
|--(1, (0xdfb4ffe0cbc16a54, [[577, 16, 0, 85, 38, 147, 96, 141]]))
        PseudoPot. # £ for  __CHEM__  read from file:
|--(1, (0xba9a08d4c23f4b87, [[119]]))
         __FULLPATH__ 
|--(1, (0x0bef8daa72c1bdf4, [[136]]))
         __CHKSUM__ 
|--(1, (0xfd5b4a2561d05060, [[148, 33, 269, 158, 134, 255, 142, 3, 0]]))
        Pseudo is Ultrasoft + core correction, Zval = £
|--(1, (0x57765c4326001bde, [[145, 102, 100, 98, 346, 266, 300, 35, 345, 343]]))
        Generated by new atomic code, or converted to  __KWUPF__  format
|--(1, (0x0a3af19d586c1e9d, [[138, 137, 139, 31, 0, 135, 0, 117, 140, 143]]))
        Using radial grid of  £ points,  £ beta functions with: 
|--(8, (0x54fd18df0d7504df, [[68, 0, 1, 3, 0]]))
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
|--(1, (0x31760706d5fe044c, [[176, 177, 44, 0, 344, 342, 3, 0, 0, 0]]))
        Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                                          £   £   £
                                                          £
|--(1, (0xdfb4ffe0cbc16a54, [[577, 16, 0, 85, 38, 147, 96, 141]]))
        PseudoPot. # £ for  __CHEM__   read from file:
|--(1, (0xba9a08d4c23f4b87, [[119]]))
         __FULLPATH__ 
|--(1, (0x0bef8daa72c1bdf4, [[136]]))
         __CHKSUM__ 
|--(1, (0xfd5b4a2561d05060, [[148, 33, 269, 158, 134, 255, 142, 3, 0]]))
        Pseudo is Ultrasoft + core correction, Zval =  £
|--(1, (0x57765c4326001bde, [[145, 102, 100, 98, 346, 266, 300, 35, 345, 343]]))
        Generated by new atomic code, or converted to  __KWUPF__  format
|--(1, (0x0a3af19d586c1e9d, [[138, 137, 139, 31, 0, 135, 0, 117, 140, 143]]))
        Using radial grid of  £ points,  £ beta functions with: 
|--(5, (0xc56141a28210698e, [[68, 0, 1, 3, 0]]))
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
                   l( £ ) =   £
|--(1, (0x31760706d5fe044c, [[176, 177, 44, 0, 344, 342, 3, 0, 0, 0]]))
        Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--(1, (0x58777f4a929200b5, [[999999999]]))
                                                          £   £
|--(1, (0x21131b2d62dc44dd, [[98, 238, 286, 229, 299]]))
        atomic species   valence    mass     pseudopotential
|--(2, (0x840f004e9e359cb0, [[38, 0, 0, 38, 2, 0, 1]]))
            __CHEM__             £   £      __CHEM__ ( £ )
            __CHEM__               £    £      __CHEM__  ( £ )
|--(1, (0xa7e4f7b307d82fec, [[0, 578, 579, 44, 291, 288]]))
        £ Sym. Ops., with inversion, found
|--(1, (0x24c17c5563cf6c84, [[228, 580, 581]]))
                                       s                        frac. trans.
|--(1, (0xce3cf85c63c634b4, [[19, 3, 0, 164], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x6042c9cae7a79210, [[19, 3, 0, 164]]))
            isym =  £     identity                                     
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (     £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £          £          £      )
                        (     £          £          £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = (  £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £  £  £ )
                        (  £  £  £ )
|--(23, (0x1b2d4d95c9d42252, [[19, 3, 0, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x3671f39b827a4f90, [[19, 3, 0, 0, 23, 21, 17, 583, 20, 22]]))
            isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (    £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £         £          £      )
                        (     £          £          £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = ( £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £ £  £ )
                        (  £  £  £ )
|--(1, (0xf5dc366d02fa4f34, [[19, 3, 0, 185], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0xec27fa5f2a34e283, [[19, 3, 0, 185]]))
            isym = £     inversion                                    
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (    £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £         £          £      )
                        (     £          £         £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = ( £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £ £  £ )
                        (  £  £ £ )
|--(23, (0x25155082f06937a2, [[19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22], [582, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [583, 8, 0, 1, 3, 2, 0, 0, 0, 1], [2, 0, 0, 0, 1], [-1]]))
|--|--(1, (0x931ad5f21780f596, [[19, 3, 0, 584, 0, 23, 21, 17, 583, 20, 22]]))
            isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--(1, (0xd8bec6852a053441, [[582, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cryst.   s( £ ) = (     £          £          £      )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (     £          £          £      )
                        (     £          £         £      )
|--|--(1, (0xb85cf385eacc9c9b, [[583, 8, 0, 1, 3, 2, 0, 0, 0, 1]]))
       cart.    s( £ ) = (  £  £  £ )
|--|--(2, (0xdd8815a91c596de9, [[2, 0, 0, 0, 1]]))
                        (  £  £  £ )
                        (  £  £ £ )
|--(1, (0x1547581c50ff0eba, [[468]]))
         __POINTGROUP__  
|--(1, (0xff99748481cfba5c, [[470, 72, 0, 463]]))
        there are £ classes
|--(1, (0xbdabacb355885341, [[71, 465, 466]]))
        the character table:
|--(1, (0x2ad818e6db6447c2, [[90, 90, 90, 90, 90, 90, 90, 90, 90, 90]]))
           __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__     __GRPSYMBOL__  
|--(10, (0x19097934c0462ea9, [[128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]))
    __REPSYMBOL__    £  £  £  £  £  £  £  £  £  £
    __REPSYMBOL__    £  £  £ £ £  £  £  £ £ £
    __REPSYMBOL__     £ £  £  £  £  £ £  £  £  £
    __REPSYMBOL__    £  £ £  £ £  £  £ £  £ £
    __REPSYMBOL__    £  £ £ £  £  £  £ £ £  £
    __REPSYMBOL__    £  £  £  £  £ £ £ £ £ £
    __REPSYMBOL__    £  £  £ £ £ £ £ £  £  £
    __REPSYMBOL__     £ £  £  £  £ £  £ £  £  £
    __REPSYMBOL__    £  £ £  £ £ £  £  £ £  £
    __REPSYMBOL__    £  £ £ £  £ £  £  £  £ £
|--(1, (0x1ceb27aec87d4353, [[71, 464, 469, 76, 460, 459, 175, 71, 462, 31, 71, 467, 461]]))
        the symmetry operations in each class and the name of the first element:
|--(1, (0xd6fce4e1c41d3b0c, [[90, 0]]))
         __GRPSYMBOL__         £
|--(1, (0xe8d46c1c43e80067, [[164]]))
             identity                                               
|--(1, (0xa908f24b5fedf902, [[90, 0, 0, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                
|--(1, (0x2227f0845a4775a7, [[90, 0, 0, 0]]))
         __GRPSYMBOL__       £    £    £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                   
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__       £    £   £   £   £   £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
              £ deg rotation - cart. axis  __MILLER__                  
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £    £   £   £   £    £
|--(1, (0x094c132554b6c420, [[0, 23, 21, 17, 583, 20, 22]]))
             £ deg rotation - cart. axis  __MILLER__                   
|--(1, (0xd6fce4e1c41d3b0c, [[90, 0]]))
         __GRPSYMBOL__        £
|--(1, (0x9b39b3911afd4a9d, [[185]]))
             inversion                                              
|--(1, (0xa908f24b5fedf902, [[90, 0, 0, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__           
|--(1, (0x2227f0845a4775a7, [[90, 0, 0, 0]]))
         __GRPSYMBOL__     £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__              
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__      £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv.  £ deg rotation - cart. axis  __MILLER__             
|--(1, (0xd3013cae4f086753, [[90, 0, 0, 0, 0, 0, 0]]))
         __GRPSYMBOL__     £   £   £   £   £   £
|--(1, (0x85430114e201ec84, [[584, 0, 23, 21, 17, 583, 20, 22]]))
             inv. £ deg rotation - cart. axis  __MILLER__              
|--(1, (0x97671e8208dcfbb2, [[215, 161]]))
      Cartesian axes
|--(1, (0xdd16ee41b9627290, [[160, 585, 26, 159, 227, 232]]))
        site n.     atom                  positions (alat units)
|--(4, (0xa6c3c7623559d8ab, [[0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1]]))
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__    tau(   £ ) = (   £   £   £  )
            £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--(1, (0x2fa24fbb7f6b7764, [[294, 161]]))
      Crystallographic axes
|--(1, (0x04a067888a2aef9b, [[160, 585, 26, 159, 586, 587]]))
        site n.     atom                  positions (cryst. coord.)
|--(4, (0xa6c3c7623559d8ab, [[0, 38, 77, 0, 1, 3, 2, 0, 0, 0, 1]]))
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__    tau(   £ ) = (  £  £  £  )
            £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--(1, (0xfba909757c282c43, [[74, 31, 10, 216, 0, 333, 220, 230, 2, 15, 75, 0]]))
        number of k points=    £  Methfessel-Paxton smearing, width ( __Ry__ )=  £
|--(1, (0x36338c6c94c1faaa, [[583, 576, 76, 113, 146]]))
                          cart. coord. in units  __UNITTWOPIALAT__ 
|--(56, (0x23db1f6938172a48, [[6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0]]))
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
|--(1, (0x06919ba8bf668387, [[582, 576]]))
                          cryst. coord.
|--(56, (0x23db1f6938172a48, [[6, 0, 1, 3, 2, 0, 0, 0, 4, 5, 3, 0]]))
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(    £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
           k(   £ ) = (   £   £   £ ), wk =   £
|--(1, (0xbb51400802f82136, [[292, 195, 0, 184, 198, 265, 194]]))
        Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--(1, (0x53cdf445c97fe095, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
|--(1, (0xf471a652d12886cd, [[63, 588, 295, 1, 7, 0, 52]]))
         __QEDynRAMfor__  (w. buffer ) :       £ MB
|--(8, (0x88627f20c5c1dc95, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :      £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0xc6001fd090e5aed5, [[262, 121, 85, 297, 1, 7, 0, 52]]))
        Dynamical RAM for          h,s,v(r/c ) :       £ MB
|--(4, (0x3c1042eb68d5d8d3, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0x3a58899afc20fc5c, [[63, 293, 0, 52]]))
         __QEDynRAMfor__ init/wfcrot:       £ MB
|--(3, (0x2639a77984018dd4, [[63, 7, 0, 52]]))
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
         __QEDynRAMfor__ :       £ MB
|--(1, (0x93c2772cc1e48b57, [[149, 298, 120, 121, 157, 178, 125, 0, 52]]))
        Estimated static dynamical RAM per process >      £ MB
|--(1, (0xb58477ab5d89db98, [[149, 290, 120, 121, 157, 178, 125, 0, 52]]))
        Estimated max dynamical RAM per process >      £ MB
|--(1, (0xa996d5ccc7be99ed, [[149, 18, 120, 121, 125, 0, 327]]))
        Estimated total dynamical RAM >       £ GB
|--(1, (0xc2bb19f6572cfd70, [[338, 174, 96, 340, 31, 339, 171]]))
        Initial potential from superposition of free atoms
|--(1, (0x31755efc0419392d, [[341, 115, 0, 51, 196, 35, 0]]))
        starting charge   £ , renormalised to   £
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x55d09808eda141dc, [[301, 168, 72, 0, 348, 98, 168, 158, 0, 331, 168]]))
        Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
        total cpu time spent up to now is       £ secs
|--(1, (0x91e9e058cc0c348d, [[103, 95]]))
        Self-consistent Calculation
|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
        iteration #  £     ecut=   £  __Ry__      beta= £
|--(8, (0xf97a2a1c9a888796, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1], [18, 34, 3, 0, 15], [65, 64, 3, 0, 15], [66, 54, 67, 55, 0, 15], [60, 16, 0, 62, 0, 15, 61, 0], [-1]]))
|--|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
              Davidson diagonalization with overlap
|--|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
              ethr =  £ ,  avg # of iterations = £
|--|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
              negative rho (up, down ) :  £ £
|--|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
              total cpu time spent up to now is       £ secs
|--|--(1, (0x41822852c4880851, [[18, 34, 3, 0, 15]]))
           total energy              =    £  __Ry__ 
|--|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
           Harris-Foulkes estimate   =    £  __Ry__ 
|--|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
           estimated scf accuracy    <       £  __Ry__ 
|--|--(1, (0x6cd0c445da54412d, [[60, 16, 0, 62, 0, 15, 61, 0]]))
           iteration #  £     ecut=   £  __Ry__      beta= £
|--(1, (0xa0a2242f60949c74, [[56, 53, 44, 57], [58, 3, 0, 51, 59, 16, 31, 49, 3, 0], [133, 181, 179, 180, 1, 7, 0, 0], [18, 28, 30, 42, 41, 35, 40, 33, 0, 29], [-1]]))
|--|--(1, (0xdf9537b00d38784d, [[56, 53, 44, 57]]))
           Davidson diagonalization with overlap
|--|--(1, (0x92fad9dc37a184e0, [[58, 3, 0, 51, 59, 16, 31, 49, 3, 0]]))
           ethr =  £ ,  avg # of iterations =  £
|--|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
           negative rho (up, down ) :  £ £
|--|--(1, (0x3d86b7e78b8b8323, [[18, 28, 30, 42, 41, 35, 40, 33, 0, 29]]))
           total cpu time spent up to now is       £ secs
|--(1, (0xe6d7f42acb4d92db, [[97, 31, 105, 99]]))
        End of self-consistent calculation
|--(56, (0x911551df91e83ef4, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7], [999999999], [14, 13], [999999999], [-1]]))
|--|--(1, (0x057163690ff656bb, [[10, 3, 0, 0, 0, 2, 0, 12, 11, 2, 9, 1, 7]]))
                k = £ £ £ (  £ PWs)   bands  (  __EV__  )  :
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
         £ £ £ £ £ £ £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--|--(1, (0x61b4e7acf34b39da, [[14, 13]]))
           occupation numbers 
|--|--(8, (0x06780adf52fdccb2, [[999999999]]))
           £   £   £   £   £   £   £   £
           £   £   £   £   £   £   £   £
           £   £   £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £  £  £  £  £  £  £
          £  £
|--(1, (0x8bc3d4df1534c759, [[71, 73, 34, 33, 0, 9]]))
        the Fermi energy is     £  __EV__ 
|--(1, (0xfe710e541a679c42, [[191, 18, 34, 3, 0, 15]]))
   !    total energy              =    £  __Ry__ 
|--(1, (0x64802cf4e2810192, [[65, 64, 3, 0, 15]]))
        Harris-Foulkes estimate   =    £  __Ry__ 
|--(1, (0x772408a1c9ea1590, [[66, 54, 67, 55, 0, 15]]))
        estimated scf accuracy    <          £  __Ry__ 
|--(1, (0xd3178894edd3ef92, [[70, 18, 34, 33, 71, 169, 31, 71, 189, 190]]))
        The total energy is the sum of the following terms:
|--(1, (0xb1d0df957da37ebc, [[188, 86, 3, 0, 15]]))
        one-electron contribution =    £  __Ry__ 
|--(1, (0x3b995577426eb9b7, [[150, 86, 3, 0, 15]]))
        hartree contribution      =      £  __Ry__ 
|--(1, (0x86c5e3b95e8083b2, [[151, 86, 3, 0, 15]]))
        xc contribution           =     £  __Ry__ 
|--(1, (0xb1c41b0f77c69840, [[187, 86, 3, 0, 15]]))
        ewald contribution        =    £  __Ry__ 
|--(1, (0xc06e604be5df7216, [[192, 589, 193, 3, 0, 15]]))
        smearing contrib. (-TS)   =      £  __Ry__ 
|--(1, (0xa09deab0d7e90ce4, [[154, 104, 106, 107, 76, 0, 49]]))
        convergence has been achieved in   £ iterations
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x4adf0aa821ab1fc7, [[210, 209, 111, 171, 205, 200, 204, 1, 7]]))
        Forces acting on atoms (cartesian axes,  __UNITFORCEb__  ) :
|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
        atom    £ type  £   force =     £    £    £
|--(2, (0xf9b4d93327407709, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xc645f8838f7869a4, [[70, 84], [26, 0, 32, 0, 27, 3, 0, 0, 0], [70, 130, 129, 203, 35, 199], [26, 0, 32, 0, 27, 3, 0, 0, 0], [-1]]))
|--|--(1, (0xb5957ca615a48763, [[70, 84]]))
           The  __QEforceKW__ 
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--(1, (0x0b495073b23613d5, [[70, 130, 129, 203, 35, 199]]))
           The  __KWSCF__  correction term to forces
|--|--(4, (0xe33c6d575b718944, [[26, 0, 32, 0, 27, 3, 0, 0, 0]]))
           atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--(1, (0xeaa8a99de460b214, [[131, 27, 3, 0, 131, 130, 129, 3, 0]]))
        Total force =     £     Total  __KWSCF__  correction =     £
|--(1, (0x66ca69f420445821, [[83, 132, 202, 207, 175, 201]]))
        Computing stress (Cartesian axis) and pressure
|--(1, (0xeabe927bbad316b0, [[133, 181, 179, 180, 1, 7, 0, 0]]))
        negative rho (up, down ) :  £ £
|--(1, (0x411543a00de5bae8, [[18, 132, 2, 208, 1, 2, 43, 1, 206, 0]]))
             total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--(3, (0xcb3e341309ff2801, [[999999999]]))
      £   £   £          £      £      £
      £   £   £          £      £      £
      £   £   £          £      £      £
|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
         __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                   £  £      £
                                   £      £  £
|--(6, (0xfa26ec83ac61aa39, [[48, 2, 43, 1, 0, 0, 0], [999999999], [48, 2, 43, 1, 0, 0, 0], [999999999], [-1]]))
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--|--(1, (0x8441337476952a13, [[48, 2, 43, 1, 0, 0, 0]]))
            __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--(2, (0xdba5e40740e05a37, [[999999999]]))
                                      £  £      £
                                      £      £  £
|--(5, (0x2c818c016688a0ad, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (       £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(5, (0x2c818c016688a0ad, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(7, (0x5ab635b80f3611f3, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(2, (0x85e230276fa118d7, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (     £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(2, (0x85e230276fa118d7, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(10, (0xf7f32bb4ff776eef, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
|--(1, (0x985c9ab3dd7d9964, [[155, 102, 50]]))
        Called by  __QEelROUTINES__ 
|--(4, (0xae4bab630b504b4a, [[50, 25, 36, 25, 37, 2, 0, 39]]))
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (    £ calls)
         __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
|--(1, (0x344ffdf1cd0f231a, [[336, 250]]))
        General routines
|--(4, (0xeaba0a42ab0f50a9, [[122, 25, 36, 25, 37, 2, 0, 39]]))
         __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
         __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
         __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
         __QEgenROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (  £ calls)
|--(1, (0x70b5ef59b316462e, [[282, 250]]))
        Parallel routines
|--(2, (0x1e846f05c7d83a5e, [[122, 25, 36, 25, 37, 2, 0, 39]]))
         __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (  £ calls)
         __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (  £ calls)
|--(1, (0xd5c2f2836a32d0e4, [[50, 25, 36, 25, 37]]))
         __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL
|--(1, (0x5487e62693121a56, [[211, 423, 247, 424, 421, 284, 283]]))
      This run was terminated on:   __HHMMSS__    __DATEa__             
|--(1, (0x7a6fed7c80ee51af, [[593]]))
   =------------------------------------------------------------------------------=
|--(1, (0x4078be3729c77455, [[422, 594]]))
      JOB DONE.
|--(1, (0x7a6fed7c80ee51af, [[593]]))
   =------------------------------------------------------------------------------=