(1, 0x66fcf406f6438c6a)
|--
|--(1, 0x7e00ca7bda37f4db)
|--|--     Program  __KWPWSCF__   __VERSIONa__  starts on  __DATEa__  at  __HHMMSS__  
|--|--
|--(1, 0x68f918b830e4034b)
|--|--     This program is part of the open-source Quantum ESPRESSO suite
|--|--     for quantum simulation of materials; please cite
|--|--         " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
               " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
|--|--          URL  __URL__  
|--|--     in publications or presentations arising from this work. More details at
|--|--      __URL__ 
|--|--
|--(1, 0x6fbf7773363bce3a)
|--|--     Parallel version (MPI), running on    £ processors
|--|--
|--(1, 0xfd3b00449fa3f6a0)
|--|--     MPI processes distributed on     £ nodes
|--|--     K-points division:     npool     =       £
|--|--     R & G space division:  proc/nbgrp/npool/nimage =       £
|--|--     Waiting for input...
|--|--     Reading input from standard input
|--|--
|--(1, 0xe64f033202f47196)
|--|--     Current dimensions of program  __KWPWSCF__  are:
|--|--     Max number of different atomic species (ntypx) = £
|--|--     Max number of k-points (npk) =  £
|--|--     Max angular momentum in pseudopotentials (lmaxx) =  £
|--|--
|--(1, 0xf440fca0c7875b34)
|--|--     Subspace diagonalization in iterative solution of the eigenvalue problem:
|--|--     one sub-group per band group will be used
|--|--     scalapack distributed-memory algorithm (size of sub-group:  £ *   £ procs)
|--|--
|--
|--(1, 0x8a66644b8a7f59b3)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __KWPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £    £
|--|--
|--
|--(1, 0x747cbfd56eb64919)
|--|--     Title: 
|--|--      __SYMBOLtypeA__                                                               
|--|--
|--
|--(1, 0xb6ddabfe889139f3)
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms/cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     convergence threshold     =      £
|--|--     mixing beta               =       £
|--|--     number of iterations used =            £  plain     mixing
|--|--     Exchange-correlation      = SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--|--     nstep                     =           £
|--|--
|--
|--(1, 0x48c7d7c781b427ff)
|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
           celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--
|--(1, 0x90a8ca16018fa8bf)
|--|--     crystal axes: (cart. coord. in units of alat)
|--|--               a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
|--|--
|--(1, 0x81fc08ded1e4d47a)
|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--               b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
|--|--
|--
|--(2, 0x631169b297920f92)
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Ultrasoft + core correction, Zval = £
|--|--     Generated by new atomic code, or converted to  __CHEM__  format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--                                                       £   £   £
                                                             £
|--|--
|--(1, 0xb38a9de5f1a46215)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__             £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, 0xefb416ddf52ba0da)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x42806707c9550a1c)
|--|--                                    s                        frac. trans.
|--|--
|--(1, 0x9ba4bb04ec28a9e1)
|--|--      isym =  £     identity                                     
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (    £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  ( £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £         £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £ £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £         £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £ £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__      
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0xb9893857922cb980)
|--|--      isym = £     inversion                                    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__ 
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (    £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £ £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £         £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  ( £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0xb1dc8bf0439dc282)
|--|--      __POINTGROUP__  
|--|--     there are £ classes
|--|--     the character table:
|--|--
|--(1, 0x59b8e8bc8b7dc2c7)
|--|--        __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__     __GRPSYMBOL__  
|--|-- __REPSYMBOL__    £  £  £  £  £  £  £  £  £  £
       __REPSYMBOL__    £  £  £ £ £  £  £  £ £ £
       __REPSYMBOL__     £ £  £  £  £  £ £  £  £  £
       __REPSYMBOL__    £  £ £  £ £  £  £ £  £ £
       __REPSYMBOL__    £  £ £ £  £  £  £ £ £  £
       __REPSYMBOL__    £  £  £  £  £ £ £ £ £ £
       __REPSYMBOL__    £  £  £ £ £ £ £ £  £  £
       __REPSYMBOL__     £ £  £  £  £ £  £ £  £  £
       __REPSYMBOL__    £  £ £  £ £ £  £  £ £  £
       __REPSYMBOL__    £  £ £ £  £ £  £  £  £ £
|--|--
|--(1, 0x90658de57531737c)
|--|--     the symmetry operations in each class and the name of the first element:
|--|--
|--(1, 0x0ca651c7a8e987a1)
|--|--      __GRPSYMBOL__         £
|--|--          identity                                               
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          £ deg rotation - cart. axis  __MILLER__                
|--|--      __GRPSYMBOL__       £    £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__       £    £   £   £   £   £
|--|--           £ deg rotation - cart. axis  __MILLER__                  
|--|--      __GRPSYMBOL__      £    £   £   £   £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__        £
|--|--          inversion                                              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__           
|--|--      __GRPSYMBOL__     £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £
|--|--          inv.  £ deg rotation - cart. axis  __MILLER__             
|--|--      __GRPSYMBOL__     £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--
|--(1, 0x76ff8a0c55f7225b)
|--|--   Cartesian axes
|--|--
|--(1, 0xdda1a33b4283d014)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0x2bbd3deefa2b9abe)
|--|--   Crystallographic axes
|--|--
|--(1, 0x692c625584864114)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0x721895ac665abd59)
|--|--     number of k points=    £  Methfessel-Paxton smearing, width ( __Ry__ )=  £
|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0xf5004fa53fcfcce8)
|--|--                       cryst. coord.
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x59ebb3e12c57b64f)
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0xab38e653c91ac4c5)
|--|--      __QEDynRAMfor__  (w. buffer):       £ MB
|--|--
|--(13, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0x7bba360f749bbfaf)
|--|--      __QEDynRAMfor__ init/wfcrot:       £ MB
|--|--
|--(3, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0x57428eb9fb8cb368)
|--|--     Estimated static dynamical RAM per process >      £ MB
|--|--
|--(1, 0x67c01b1c28318efe)
|--|--     Estimated max dynamical RAM per process >      £ MB
|--|--
|--(1, 0x942f4a8a50ad5af4)
|--|--     Estimated total dynamical RAM >       £ GB
|--|--
|--(1, 0xf21686903afb58aa)
|--|--     Initial potential from superposition of free atoms
|--|--
|--(1, 0x144a8c3240ab80ec)
|--|--     starting charge   £ , renormalised to   £
|--|--
|--(1, 0x2638ee1891bc99dd)
|--|--     negative rho (up, down):  £ £
|--|--     Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £    £   £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__  £
|--|--  £   £   £        £      £      £
         £  £   £          £    £      £
         £   £  £          £      £    £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
   
|--(1, 0xf28b1c9974e4316e)
|--|--     BFGS Geometry Optimization
|--|--
|--(1, 0x1a72ba5b8913ca87)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0xabd3acae6e9574db)
|--|--     enthalpy new            =    £  __Ry__ 
|--|--
|--(1, 0x1a78be4893fb426f)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOLtypeA__             =       £  __Ry__ 
|--|--
|--(1, 0x16bcf952dbb164b1)
|--|--     new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--|--     density =      £  __UNITDENSITY__ 
|--|--
|--(1, 0x3229aacaf9b61271)
|--|-- __SYMBOLtypeA__  (alat=  £ )
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x4d1268b09a42963a)
|--|-- __SYMBOLtypeA__  (crystal)
|--|-- __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__        £   £   £
|--|--
|--
|--(1, 0xd43692a57db28b25)
|--|--     NEW-OLD atomic charge density approx. for the potential
|--|--
|--(1, 0x2678182e128c4aad)
|--|--     negative rho (up, down):  £ £
|--|--     extrapolated charge   £ , renormalised to   £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =    £   £    £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £   £   £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__   £
|--|--   £   £   £         £      £      £
         £   £   £          £     £      £
         £   £   £          £      £     £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
   
|--(1, 0x1a72ba5b8913ca87)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0x3d99c1e6023ec240)
|--|--     enthalpy old            =    £  __Ry__ 
|--|--     enthalpy new            =    £  __Ry__ 
|--|--
|--(1, 0x41722abd06d02769)
|--|--     CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--|--
|--(1, 0x1a78be4893fb426f)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOLtypeA__             =       £  __Ry__ 
|--|--
|--(1, 0x16bcf952dbb164b1)
|--|--     new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--|--     density =      £  __UNITDENSITY__ 
|--|--
|--(1, 0x3229aacaf9b61271)
|--|-- __SYMBOLtypeA__  (alat=  £ )
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x4d1268b09a42963a)
|--|-- __SYMBOLtypeA__  (crystal)
|--|-- __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__        £   £   £
|--|--
|--
|--(1, 0xd43692a57db28b25)
|--|--     NEW-OLD atomic charge density approx. for the potential
|--|--
|--(1, 0x2678182e128c4aad)
|--|--     negative rho (up, down):  £ £
|--|--     extrapolated charge   £ , renormalised to   £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration # £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration # £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration # £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in  £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__   £
|--|--  £   £   £         £      £      £
         £  £   £          £     £      £
         £   £  £          £      £     £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
   
|--(1, 0x1a72ba5b8913ca87)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0x3d99c1e6023ec240)
|--|--     enthalpy old            =    £  __Ry__ 
|--|--     enthalpy new            =    £  __Ry__ 
|--|--
|--(1, 0x41722abd06d02769)
|--|--     CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--|--
|--(1, 0xf8046185a34384f7)
|--|--     small  __SYMBOLtypeA__  resetting bfgs history
|--|--
|--(1, 0x1a78be4893fb426f)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOLtypeA__             =       £  __Ry__ 
|--|--
|--(1, 0x16bcf952dbb164b1)
|--|--     new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--|--     density =      £  __UNITDENSITY__ 
|--|--
|--(1, 0x3229aacaf9b61271)
|--|-- __SYMBOLtypeA__  (alat=  £ )
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x4d1268b09a42963a)
|--|-- __SYMBOLtypeA__  (crystal)
|--|-- __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__        £   £   £
|--|--
|--
|--(1, 0xd43692a57db28b25)
|--|--     NEW-OLD atomic charge density approx. for the potential
|--|--
|--(1, 0x2678182e128c4aad)
|--|--     negative rho (up, down):  £ £
|--|--     extrapolated charge   £ , renormalised to   £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0x43fb43f76c65cdbc)
|--|--     Threshold (ethr) on eigenvalues was too large:
|--|--     Diagonalizing with lowered threshold
|--|--
|--(1, 0xb73fa4dd6e947591)
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =    £    £   £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
   
|--(1, 0x1a72ba5b8913ca87)
|--|--     number of scf cycles    =   £
|--|--     number of bfgs steps    =   £
|--|--
|--(1, 0x3d99c1e6023ec240)
|--|--     enthalpy old            =    £  __Ry__ 
|--|--     enthalpy new            =    £  __Ry__ 
|--|--
|--(1, 0x41722abd06d02769)
|--|--     CASE:  __SYMBOLtypeA__  <  __SYMBOLtypeA__ 
|--|--
|--(1, 0xfa0dcb3a41b63557)
|--|--     Message from routine bfgs:
|--|--     history already reset at previous step: stopping
|--|--     small  __SYMBOLtypeA__  resetting bfgs history
|--|--
|--(1, 0x1a78be4893fb426f)
|--|--     new trust radius        =       £ bohr
|--|--     new  __SYMBOLtypeA__             =       £  __Ry__ 
|--|--
|--(1, 0x16bcf952dbb164b1)
|--|--     new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--|--     density =      £  __UNITDENSITY__ 
|--|--
|--(1, 0x3229aacaf9b61271)
|--|-- __SYMBOLtypeA__  (alat=  £ )
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x4d1268b09a42963a)
|--|-- __SYMBOLtypeA__  (crystal)
|--|-- __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__        £   £   £
|--|--
|--
|--(1, 0xd43692a57db28b25)
|--|--     NEW-OLD atomic charge density approx. for the potential
|--|--
|--(1, 0x2678182e128c4aad)
|--|--     negative rho (up, down):  £ £
|--|--     extrapolated charge   £ , renormalised to   £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0x43fb43f76c65cdbc)
|--|--     Threshold (ethr) on eigenvalues was too large:
|--|--     Diagonalizing with lowered threshold
|--|--
|--(1, 0xb73fa4dd6e947591)
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =    £   £   £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
           atom    £ type  £   force =    £   £   £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
|--(1, 0xa813b77c0f72867c)
|--|--     Message from routine bfgs:
|--|--     history already reset at previous step: stopping
|--|--
|--(1, 0x3f7f4107f1bc4962)
|--|--     bfgs converged in   £ scf cycles and   £ bfgs steps
|--|--     (criteria: energy <  £  __Ry__ , force <  £ __UNITFORCEa__ , cell <  £ __UNITkbar__ )
|--|--
|--(1, 0x3b746444a0f3b076)
|--|--     End of BFGS Geometry Optimization
|--|--
|--(1, 0x9df7031583392266)
|--|--     Final enthalpy =    £  __Ry__ 
|--|--Begin final coordinates
|--|--     new unit-cell volume =    £  __UNITVOLb__  (    £  __UNITVOLc__  )
|--|--     density =      £  __UNITDENSITY__ 
|--|--
|--(1, 0x3229aacaf9b61271)
|--|-- __SYMBOLtypeA__  (alat=  £ )
|--|--   £   £   £
         £   £   £
         £   £   £
|--|--
|--(1, 0x47a15a336fb1374c)
|--|-- __SYMBOLtypeA__  (crystal)
|--|-- __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__         £   £   £
       __CHEM__        £   £   £
|--|--End final coordinates
|--|--
|--
   
|--(1, 0xb56cbcdf233b4f97)
|--|--     A final scf calculation at the relaxed structure.
|--|--     The G-vectors are recalculated for the final unit cell
|--|--     Results may differ from those at the preceding step.
|--|--
|--(1, 0x8a66644b8a7f59b3)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __KWPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £    £
|--|--
|--
|--(1, 0x747cbfd56eb64919)
|--|--     Title: 
|--|--      __SYMBOLtypeA__                                                               
|--|--
|--
|--(1, 0x4965da6b1f24cc92)
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms/cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     convergence threshold     =      £
|--|--     mixing beta               =       £
|--|--     number of iterations used =            £  plain     mixing
|--|--     Exchange-correlation      = SLA  PZ   NOGX NOGC ( £  £  £  £ £ £ )
|--|--
|--(1, 0x48c7d7c781b427ff)
|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
           celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--
|--(1, 0x90a8ca16018fa8bf)
|--|--     crystal axes: (cart. coord. in units of alat)
|--|--               a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
                     a( £ ) = (   £   £   £ )  
|--|--
|--(1, 0x81fc08ded1e4d47a)
|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--               b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
                     b( £ ) = (  £  £  £ )  
|--|--
|--
|--(2, 0x631169b297920f92)
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Ultrasoft + core correction, Zval = £
|--|--     Generated by new atomic code, or converted to  __CHEM__  format
|--|--     Using radial grid of  £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--     Q(r) pseudized with  £ coefficients,  rinner =    £   £   £
|--|--                                                       £   £   £
                                                             £
|--|--
|--(1, 0xb38a9de5f1a46215)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__             £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, 0xefb416ddf52ba0da)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x42806707c9550a1c)
|--|--                                    s                        frac. trans.
|--|--
|--(1, 0x9ba4bb04ec28a9e1)
|--|--      isym =  £     identity                                     
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (    £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  ( £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £         £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £ £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £         £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £ £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £      £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__      
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__        
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x1c427c8ee752b000)
|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__       
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0xb9893857922cb980)
|--|--      isym = £     inversion                                    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £         £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £ £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £         £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £ £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £         £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £ £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv.  £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__ 
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (    £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £ £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (     £         £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £ £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (    £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__   
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        ( £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £         £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  ( £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £          £      )
                        (    £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--                  (  £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--                  (     £          £         £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  (  £  £  £ )
                        (  £ £  £ )
|--|--
|--
|--(1, 0x0e84c5ac4581c74c)
|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__  
|--|--
|--(1, 0xb1e4a9ad2c7f1138)
|--|-- cryst.   s( £ ) = (     £         £          £      )
|--|--                  (     £          £          £      )
                        (     £          £          £      )
|--|--
|--(1, 0xccac018af5591b49)
|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--                  ( £  £  £ )
                        (  £  £  £ )
|--|--
|--
|--(1, 0xb1dc8bf0439dc282)
|--|--      __POINTGROUP__  
|--|--     there are £ classes
|--|--     the character table:
|--|--
|--(1, 0x59b8e8bc8b7dc2c7)
|--|--        __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__       __GRPSYMBOL__     __GRPSYMBOL__    __GRPSYMBOL__     __GRPSYMBOL__  
|--|-- __REPSYMBOL__    £  £  £  £  £  £  £  £  £  £
       __REPSYMBOL__    £  £  £ £ £  £  £  £ £ £
       __REPSYMBOL__     £ £  £  £  £  £ £  £  £  £
       __REPSYMBOL__    £  £ £  £ £  £  £ £  £ £
       __REPSYMBOL__    £  £ £ £  £  £  £ £ £  £
       __REPSYMBOL__    £  £  £  £  £ £ £ £ £ £
       __REPSYMBOL__    £  £  £ £ £ £ £ £  £  £
       __REPSYMBOL__     £ £  £  £  £ £  £ £  £  £
       __REPSYMBOL__    £  £ £  £ £ £  £  £ £  £
       __REPSYMBOL__    £  £ £ £  £ £  £  £  £ £
|--|--
|--(1, 0x90658de57531737c)
|--|--     the symmetry operations in each class and the name of the first element:
|--|--
|--(1, 0x0ca651c7a8e987a1)
|--|--      __GRPSYMBOL__         £
|--|--          identity                                               
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          £ deg rotation - cart. axis  __MILLER__                
|--|--      __GRPSYMBOL__       £    £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__       £    £   £   £   £   £
|--|--           £ deg rotation - cart. axis  __MILLER__                  
|--|--      __GRPSYMBOL__      £    £   £   £   £    £
|--|--          £ deg rotation - cart. axis  __MILLER__                   
|--|--      __GRPSYMBOL__        £
|--|--          inversion                                              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__           
|--|--      __GRPSYMBOL__     £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--      __GRPSYMBOL__      £   £   £   £   £   £
|--|--          inv.  £ deg rotation - cart. axis  __MILLER__             
|--|--      __GRPSYMBOL__     £   £   £   £   £   £
|--|--          inv. £ deg rotation - cart. axis  __MILLER__              
|--|--
|--(1, 0x76ff8a0c55f7225b)
|--|--   Cartesian axes
|--|--
|--(1, 0xdda1a33b4283d014)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0x2bbd3deefa2b9abe)
|--|--   Crystallographic axes
|--|--
|--(1, 0x692c625584864114)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0x721895ac665abd59)
|--|--     number of k points=    £  Methfessel-Paxton smearing, width ( __Ry__ )=  £
|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0xf5004fa53fcfcce8)
|--|--                       cryst. coord.
|--|--        k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(    £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
              k(   £ ) = (   £   £   £ ), wk =   £
|--|--
|--(1, 0x59ebb3e12c57b64f)
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0xab38e653c91ac4c5)
|--|--      __QEDynRAMfor__  (w. buffer):       £ MB
|--|--
|--(13, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0x7bba360f749bbfaf)
|--|--      __QEDynRAMfor__ init/wfcrot:       £ MB
|--|--
|--(3, 0x7d47a687bfd31748)
|--|--      __QEDynRAMfor__ :       £ MB
|--|--
|--(1, 0x57428eb9fb8cb368)
|--|--     Estimated static dynamical RAM per process >      £ MB
|--|--
|--(1, 0x67c01b1c28318efe)
|--|--     Estimated max dynamical RAM per process >      £ MB
|--|--
|--(1, 0x942f4a8a50ad5af4)
|--|--     Estimated total dynamical RAM >       £ GB
|--|--
|--(1, 0xf21686903afb58aa)
|--|--     Initial potential from superposition of free atoms
|--|--
|--(1, 0x144a8c3240ab80ec)
|--|--     starting charge   £ , renormalised to   £
|--|--
|--(1, 0x2638ee1891bc99dd)
|--|--     negative rho (up, down):  £ £
|--|--     Starting wfcs are   £ randomized atomic wfcs +   £ random wfcs
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0x746537846ecd0011)
|--|--     Self-consistent Calculation
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations = £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe2d151a295811912)
|--|--     total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <       £  __Ry__ 
|--|--
|--(1, 0xcd7213e22e9b1aad)
|--|--     iteration #  £     ecut=   £  __Ry__      beta= £
|--|--     Davidson diagonalization with overlap
|--|--     ethr =  £ ,  avg # of iterations =  £
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0xb4edaab309d0218a)
|--|--     total cpu time spent up to now is       £ secs
|--|--
|--(1, 0xe0e8721999ffa3f1)
|--|--     End of self-consistent calculation
|--|--
|--(56, 0x8f4c3d0f198ca20c)
|--|--(1, 0x51d7c4011f69532e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £ £ £ £ £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--|--(1, 0x5bf572dc4adcbc91)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £   £
              £   £   £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £  £  £  £  £  £  £
             £  £
|--|--|--
|--(1, 0x81a64851f212ce45)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0xf53ed716ec72591a)
|--|--!    total energy              =    £  __Ry__ 
|--|--     Harris-Foulkes estimate   =    £  __Ry__ 
|--|--     estimated scf accuracy    <          £  __Ry__ 
|--|--
|--(1, 0x778859ff2121f121)
|--|--     The total energy is the sum of the following terms:
|--|--
|--(1, 0x10397f308850306f)
|--|--     one-electron contribution =    £  __Ry__ 
|--|--     hartree contribution      =      £  __Ry__ 
|--|--     xc contribution           =     £  __Ry__ 
|--|--     ewald contribution        =    £  __Ry__ 
|--|--     smearing contrib. (-TS)   =      £  __Ry__ 
|--|--
|--(1, 0x8e5a63411f161ae7)
|--|--     convergence has been achieved in   £ iterations
|--|--
|--(1, 0xa1d5d05d14e73efe)
|--|--     negative rho (up, down):  £ £
|--|--
|--(1, 0x95e7cc723a61666d)
|--|--     Forces acting on atoms (cartesian axes,  __UNITFORCEb__ ):
|--|--
|--(1, 0x16d0b6f66f1f4af6)
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £   £
           atom    £ type  £   force =    £    £   £
           atom    £ type  £   force =    £   £    £
|--|--     The  __QEforceKW__ 
|--|--     atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
           atom    £ type  £   force =     £    £    £
|--|--     The  __KWSCF__  correction term to forces
|--|--     atom    £ type  £   force =     £    £   £
           atom    £ type  £   force =     £   £    £
           atom    £ type  £   force =    £    £    £
           atom    £ type  £   force =     £    £    £
|--|--
|--(1, 0xa5df7d9c1f591445)
|--|--     Total force =     £     Total  __KWSCF__  correction =     £
|--|--
|--
|--(1, 0xefa142612d1d4e1c)
|--|--     Computing stress (Cartesian axis) and pressure
|--|--
|--
|--(1, 0xd0b1bcba488a4c00)
|--|--     negative rho (up, down):  £ £
|--|--          total   stress  ( __UNITSTRESS__ )                   ( __UNITkbar__ )     __PRESSUREEQS__    £
|--|--   £   £   £          £      £      £
         £   £   £          £      £      £
         £   £   £          £      £      £
|--|--
|--(13, 0x3aa2bae3dafabdef)
|--|--      __QEstressKW__  ( __UNITkbar__ )  £      £      £
|--|--                                £  £      £
                                      £      £  £
|--|--
|--
   
|--(1, 0xee7c66077f17efe6)
|--|--      __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(6, 0x2a556c95b1d40d2b)
|--|--     Called by  __QEelROUTINES__ 
|--|--      __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(1, 0xf3db04bf404d6d93)
|--|--     General routines
|--|--      __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (    £ calls)
            __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (     £ calls)
            __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (      £ calls)
            __QEgenROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL (  £ calls)
|--|--
|--(1, 0x2fb764dd69468073)
|--|--     Parallel routines
|--|--      __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (  £ calls)
            __QEgenROUTINES__        __DURATION__   __KWCPU__        __DURATION__  WALL (  £ calls)
|--|--
|--(1, 0xb7f979336c6df3b6)
|--|--      __QEelROUTINES__       __DURATION__   __KWCPU__       __DURATION__  WALL
|--|--
|--
|--(1, 0x0d10d4dc111a3448)
|--|--   This run was terminated on:   __HHMMSS__    __DATEa__             
|--|--
|--(1, 0x74a602af4c2972f4)
|--|--=------------------------------------------------------------------------------=
|--|--   JOB DONE.
|--|--=------------------------------------------------------------------------------=
|--|--