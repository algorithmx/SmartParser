(1, 0xa655878c37343cd3)
|--
|--(1, 0x7e00ca7bda37f4db)
|--|--     Program  __CHEM__   __VERSIONa__  starts on  __DATEa__  at   __HHMMSS__  
|--|--
|--(1, 0x082360392d1449b3)
|--|--     This program is part of the open-source Quantum ESPRESSO suite
|--|--     for quantum simulation of materials; please cite
|--|--         " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
               " __CHEM__ . Giannozzi et al., J. Phys.:Condens. Matter £ £ ( £ );
|--|--          URL  __URL__  
|--|--     in publications or presentations arising from this work. More details at
|--|--      __URL__ 
|--|--
|--(1, 0x709c0ba2a601116e)
|--|--     Parallel version (MPI), running on    £ processors
|--|--
|--(1, 0xd19f60533c1d290f)
|--|--     MPI processes distributed on     £ nodes
|--|--     K-points division:     npool     =       £
|--|--     R & G space division:   proc / nbgrp / npool / nimage  =       £
|--|--
|--
|--(1, 0xe978513e5544e4d2)
|--|--     Dynamical matrices for q-points given in input
|--|--     (   £ q-points):
|--|--        __CHEM__          xq( £ )         xq( £ )         xq( £ ) 
|--|--       £   £   £   £
             £   £   £   £
             £   £   £   £
             £   £   £   £
|--|--
|--(1, 0x842fdf449587a998)
|--|--     Reading data from directory:
|--|--      __FULLPATH__ 
|--|--
|--(1, 0xf1bfa95bff139a8c)
|--|--     IMPORTANT: XC functional enforced from input :
|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--     Any further DFT definition will be discarded
|--|--     Please, verify this is what you really want
|--|--
|--
|--(1, 0xd27131612679ec9d)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __QEPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £    £
|--|--
|--(1, 0x0ee29a30c450db13)
|--|--  autoval =  __ABSPATH__ £
|--|--     Irreps are as follows:
|--|--
|--(4, 0xb1423865ccda275c)
|--|--(5, 0x52f0124ab6729263)
|--|--|--                     mode #   £
|--|--|--                     (  £  £   ) 
                              (   £   £   ) 
                              (   £   £   ) 
                              (  £  £   ) 
                              (   £   £   ) 
                              (   £   £   ) 
                              (  £  £   ) 
                              (   £   £   ) 
                              (   £   £   ) 
                              (  £   £   ) 
                              (  £   £   ) 
                              (  £   £   ) 
|--|--|--  autoval =  __ABSPATH__ £
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(6, 0x6b8174528e121c76)
|--|--|--                     mode #   £
|--|--|--                     (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (   £  £   ) 
                              (   £  £   ) 
                              (   £  £   ) 
                              (  £  £   ) 
                              (   £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
|--|--|--  autoval = £
|--|--|--     Irreps are as follows:
|--|--|--
|--(1, 0x7f7bbad923cb406c)
|--|--                     mode #  £
|--|--                     (  £  £   ) 
                           (  £  £   ) 
                           (  £   £   ) 
                           (  £   £   ) 
                           (   £  £   ) 
                           (  £   £   ) 
                           (  £   £   ) 
                           (   £  £   ) 
                           (   £   £   ) 
                           (  £   £   ) 
                           (  £   £   ) 
                           (  £   £   ) 
|--|--
|--(1, 0x8e666e5cba5281ba)
|--|--     Calculation of q =    £   £   £
|--|--
|--(1, 0x557759402e4b7515)
|--|--(1, 0x7a56a067ca2bd79a)
|--|--|--      __CHEM__                                                                        
|--|--|--
|--|--(1, 0x85be28c38a495179)
|--|--|--     bravais-lattice index     =            £
|--|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--|--     number of atoms / cell      =            £
|--|--|--     number of atomic types    =            £
|--|--|--     kinetic-energy cut-off    =     £   __Ry__ 
|--|--|--     charge density cut-off    =     £   __Ry__ 
|--|--|--     convergence threshold     =      £
|--|--|--     beta                      =       £
|--|--|--     number of iterations used =            £
|--|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--|--
|--|--
|--|--(1, 0x1e87ab99ac8e95f8)
|--|--|--(1, 0x9a53efd2567e5d10)
|--|--|--|--     celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
                 celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
|--|--|--|--
|--|--|--(1, 0x2de070af168f1e2d)
|--|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--|--               a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--(1, 0x23b0fe4d9e399137)
|--|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--|--               b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--
|--|--(1, 0xef6c7a52d4940761)
|--|--|--     Atoms inside the unit cell: 
|--|--|--
|--|--(1, 0x709a99bcbf6d0eea)
|--|--|--     Cartesian axes
|--|--|--
|--|--(1, 0x909188d882877b0e)
|--|--|--     site n.  atom      mass           positions (alat units)
|--|--|--        £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__  £   tau(    £ ) = (    £    £    £  )
|--|--|--
|--|--(1, 0xa66028efe814913c)
|--|--|--     Computing dynamical matrix for 
|--|--|--                    q = (   £   £   £ )
|--|--|--
|--|--(1, 0x75035d8ecefd627d)
|--|--|--     £  __ABSPATH__ . (with q -> -q+G )
|--|--|--
|--(1, 0x21b93a02c7fa9f07)
|--|--(1, 0x86a1678ba416934b)
|--|--|--(1, 0xd27c2193ac38ecda)
|--|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--|--                                    s                        frac. trans.
|--|--|--|--|--
|--|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--|--                  (     £         £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--|--                  (  £ £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £         £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £ £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--|--|--(7, 0xbecc0a25b4d9baed)
|--|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £         £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £ £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--|--|--(20, 0x304e5ac6d49900f4)
|--|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £         £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £ £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--(16, 0xbecc0a25b4d9baed)
|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (    £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    ( £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--(1, 0x67c789e205efa25b)
|--|--|--(1, 0x987988f7580182d4)
|--|--|--|--     This transformation sends q -> -q+G
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym = £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2d15477af6539a29)
|--|--|--|--     G cutoff =  £  (   £ G-vectors)     FFT grid:  __THREETUPLES__ 
|--|--|--|--
|--|--|--(1, 0xf136aaf06ee3f573)
|--|--|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--|--(1, 0x96876d24833bd135)
|--|--|--|--|--                       cryst. coord.
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--(2, 0xa67e88d9afbbfb26)
|--|--|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--|--|--      __FULLPATH__ 
|--|--|--|--      __CHKSUM__ 
|--|--|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--|--|--     Generated in analytical, separable form
|--|--|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--|--|--                l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
|--|--|--|--
|--|--|--
|--|--|--(1, 0x0d83ee3fc129f07b)
|--|--|--|--     Atomic displacements:
|--|--|--|--     There are   £ irreducible representations
|--|--|--|--
|--(4, 0xb28284bf42e1aa9b)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x1d4e79bf32a69550)
|--|--|--     mode #   £              mode #   £              mode #   £
|--|--|--     (  £  £ ) (  £  £ ) (  £  £ ) 
              (   £   £ ) (  £  £ ) (   £  £ ) 
              (   £   £ ) (  £  £ ) (  £  £ ) 
              (  £  £ ) (  £  £ ) (  £  £ ) 
              (   £   £ ) (  £  £ ) (   £  £ ) 
              (   £   £ ) (  £  £ ) (  £  £ ) 
              (  £  £ ) (  £  £ ) (  £  £ ) 
              (   £   £ ) (  £  £ ) (   £  £ ) 
              (   £   £ ) (  £  £ ) (  £  £ ) 
              (  £   £ ) (  £   £ ) (  £  £ ) 
              (  £   £ ) (  £   £ ) (  £  £ ) 
              (  £   £ ) (  £   £ ) (  £  £ ) 
|--|--|--
|--(1, 0xa5fec4f06be0a671)
|--|--
      
|--|--(1, 0x2c5a51e18515ab01)
|--|--|--     Alpha used in Ewald sum =   £
|--|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL
|--|--|--
|--(4, 0x126e742a03d5c080)
|--|--
      
|--|--(1, 0x8ff5c2c8eb4eabde)
|--|--|--     Representation #  £ modes #   £  £  £
|--|--|--
|--|--(1, 0xe370a0c437c88618)
|--|--|--     Self-consistent Calculation
|--|--|--
|--|--(1, 0x07d18a7fb8cb0e22)
|--|--|--     Pert. #   £ : Fermi energy shift ( __Ry__ ) =     £    £
              Pert. #   £ : Fermi energy shift ( __Ry__ ) =     £    £
              Pert. #   £ : Fermi energy shift ( __Ry__ ) =     £     £
|--|--|--
|--|--(5, 0x1f3d34da458fccbe)
|--|--|--(1, 0x56b38d09a7e10228)
|--|--|--|--      iter #   £ total cpu time :     £ secs    __ABSPATH__ .:  £
|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--
|--|--|--(1, 0x07d18a7fb8cb0e22)
|--|--|--|--     Pert. #   £ : Fermi energy shift ( __Ry__ ) =     £    £
                 Pert. #   £ : Fermi energy shift ( __Ry__ ) =    £     £
                 Pert. #   £ : Fermi energy shift ( __Ry__ ) =     £     £
|--|--|--|--
|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--(1, 0x56b38d09a7e10228)
|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:  £
|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--
|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--     End of self-consistent calculation
|--|--|--|--
|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--     Convergence has been achieved 
|--|--|--|--
|--(1, 0x0fef06cc82c4e43a)
|--|--(1, 0xfc91e0e13f80e36b)
|--|--|--     Number of q in the star =    £
|--|--|--     List of q in the star:
|--|--|--          £   £   £   £
|--|--|--
|--|--(1, 0x9a2b9f4552b5b965)
|--|--|--     Diagonalizing the dynamical matrix
|--|--|--
|--|--(1, 0xe057d3f88ff88e60)
|--|--|--     q = (    £   £   £ ) 
|--|--|--
|--|--(1, 0xd3c8539a32d94f87)
|--|--|-- **************************************************************************
|--|--|--     freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
              freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
              freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
              freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
|--|--|-- **************************************************************************
|--|--|--
|--(1, 0x8e666e5cba5281ba)
|--|--     Calculation of q =    £   £   £
|--|--
|--(1, 0x1c51a3d769501176)
|--|--     Subspace diagonalization in iterative solution of the eigenvalue problem:
|--|--     one sub-group per band group will be used
|--|--     scalapack distributed-memory algorithm (size of sub-group:  £ *   £ procs)
|--|--
|--
|--(1, 0xd27131612679ec9d)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __QEPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £    £
|--|--
|--
|--(1, 0x761630b54cf3ab6a)
|--|--     Title: 
|--|--      __CHEM__                                                                        
|--|--
|--
|--(1, 0x2524fa37b828dfed)
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms / cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--
|--(1, 0x1e87ab99ac8e95f8)
|--|--(1, 0x9a53efd2567e5d10)
|--|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
              celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--|--
|--|--(1, 0x2de070af168f1e2d)
|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--               a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
|--|--|--
|--|--(1, 0x23b0fe4d9e399137)
|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--               b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
|--|--|--
|--|--
|--(2, 0xa67e88d9afbbfb26)
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--     Generated in analytical, separable form
|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--
|--(1, 0x03b0b0f29689f663)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__              £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, 0xbbccbdd4078237a2)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x86a1678ba416934b)
|--|--(1, 0xd27c2193ac38ecda)
|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--                                    s                        frac. trans.
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--                  (     £         £          £      )
                                 (     £          £         £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--                  (  £ £  £ )
                                 (  £  £ £ )
|--|--|--|--|--
|--|--|--|--
|--|--|--(3, 0x6b3a08cde8474ee8)
|--|--|--|--(3, 0xbecc0a25b4d9baed)
|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £         £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £ £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(4, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--(8, 0xbecc0a25b4d9baed)
|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__ 
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--|--|--|--                  (    £          £          £      )
                                 (     £         £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = (  £ £  £ )
|--|--|--|--|--                  (  £  £ £ )
                                 ( £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--(1, 0x709a99bcbf6d0eea)
|--|--   Cartesian axes
|--|--
|--(1, 0xf5002d8d4742fb27)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0xc44765cc34088f0e)
|--|--   Crystallographic axes
|--|--
|--(1, 0xa26b9fd7a063aae1)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0xf136aaf06ee3f573)
|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--|--(1, 0x96876d24833bd135)
|--|--|--                       cryst. coord.
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--(1, 0x151d1e1a47dfadf7)
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, 0x0fb49900144bf4d9)
|--|--     Dynamical RAM for                 wfc:       £ MB
|--|--
|--(1, 0x21d2509fc6f281f7)
|--|--     Dynamical RAM for     wfc (w. buffer):       £ MB
|--|--
|--(1, 0xa48d00092140496d)
|--|--     Dynamical RAM for           str. fact:       £ MB
|--|--
|--(1, 0xbc6b91c8c382eb7d)
|--|--     Dynamical RAM for           local pot:       £ MB
|--|--
|--(1, 0xd92107f5aeebdebf)
|--|--     Dynamical RAM for          nlocal pot:       £ MB
|--|--
|--(1, 0x72437ae1aec663ca)
|--|--     Dynamical RAM for                qrad:       £ MB
|--|--
|--(1, 0x3d5d83265e7ab8ec)
|--|--     Dynamical RAM for          rho,v,vnew:       £ MB
|--|--
|--(1, 0x64a9b18b48cf79fb)
|--|--     Dynamical RAM for           G-vectors:       £ MB
|--|--
|--(1, 0xd3addd7fba06c438)
|--|--     Dynamical RAM for          h,s,v( r / c ):       £ MB
|--|--
|--(1, 0xd4e26cef00465534)
|--|--     Dynamical RAM for          <psi|beta>:       £ MB
|--|--
|--(1, 0xef56ebaa947fc61c)
|--|--     Dynamical RAM for                 psi:       £ MB
|--|--
|--(1, 0x83595203b2c58e29)
|--|--     Dynamical RAM for                hpsi:       £ MB
|--|--
|--(1, 0x2435bbd1c03ab5d6)
|--|--     Dynamical RAM for      wfcinit / wfcrot:       £ MB
|--|--
|--(1, 0x7be5675fe791086a)
|--|--     Estimated static dynamical RAM per process >       £ MB
|--|--
|--(1, 0x064201341ec07ec4)
|--|--     Estimated max dynamical RAM per process >       £ MB
|--|--
|--(1, 0x91950750c2531dec)
|--|--     Estimated total dynamical RAM >     £ MB
|--|--
|--(1, 0x7bc5ae7991d79583)
|--|--     The potential is recalculated from file :
|--|--      __FULLPATH__ 
|--|--
|--(1, 0x0e094542aad90a03)
|--|--     Starting wfcs are   £ atomic wfcs
|--|--
|--(1, 0x24e2c1d6a0e4e177)
|--|--     Band Structure Calculation
|--|--     Davidson diagonalization with overlap
|--|--
|--(10, 0x7f424671c7734ae7)
|--|--     Computing kpt #:     £
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0x8339fbb97acc9268)
|--|--     ethr =  £ ,  avg # of iterations = £
|--|--
|--(1, 0x02edef9be47df10c)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xd2ffba93ffd4421b)
|--|--     End of band structure calculation
|--|--
|--(80, 0xcff9eced5984cd93)
|--|--(1, 0xd293ccb59941d17e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--|--(1, 0x703406fdff003113)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--(1, 0xcab19b214c39aa7a)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x72f73c65cc3ea305)
|--|--     Writing output data file  __FULLPATH__ 
|--|--
|--(1, 0x557759402e4b7515)
|--|--(1, 0x7a56a067ca2bd79a)
|--|--|--      __CHEM__                                                                        
|--|--|--
|--|--(1, 0x85be28c38a495179)
|--|--|--     bravais-lattice index     =            £
|--|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--|--     number of atoms / cell      =            £
|--|--|--     number of atomic types    =            £
|--|--|--     kinetic-energy cut-off    =     £   __Ry__ 
|--|--|--     charge density cut-off    =     £   __Ry__ 
|--|--|--     convergence threshold     =      £
|--|--|--     beta                      =       £
|--|--|--     number of iterations used =            £
|--|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--|--
|--|--
|--|--(1, 0x1e87ab99ac8e95f8)
|--|--|--(1, 0x9a53efd2567e5d10)
|--|--|--|--     celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
                 celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
|--|--|--|--
|--|--|--(1, 0x2de070af168f1e2d)
|--|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--|--               a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--(1, 0x23b0fe4d9e399137)
|--|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--|--               b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--
|--|--(1, 0xef6c7a52d4940761)
|--|--|--     Atoms inside the unit cell: 
|--|--|--
|--|--(1, 0x709a99bcbf6d0eea)
|--|--|--     Cartesian axes
|--|--|--
|--|--(1, 0x909188d882877b0e)
|--|--|--     site n.  atom      mass           positions (alat units)
|--|--|--        £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__  £   tau(    £ ) = (    £    £    £  )
|--|--|--
|--|--(1, 0xa66028efe814913c)
|--|--|--     Computing dynamical matrix for 
|--|--|--                    q = (   £   £   £ )
|--|--|--
|--|--(1, 0x75035d8ecefd627d)
|--|--|--     £  __ABSPATH__ . (with q -> -q+G )
|--|--|--
|--(1, 0x21b93a02c7fa9f07)
|--|--(1, 0x86a1678ba416934b)
|--|--|--(1, 0xd27c2193ac38ecda)
|--|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--|--                                    s                        frac. trans.
|--|--|--|--|--
|--|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--|--                  (     £         £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--|--                  (  £ £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £         £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £ £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--|--|--(3, 0xbecc0a25b4d9baed)
|--|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £         £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £ £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--|--|--(4, 0x304e5ac6d49900f4)
|--|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £          £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £  £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--(4, 0xbecc0a25b4d9baed)
|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £         £      )
                                    (     £         £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £ £ )
                                    (  £ £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--(1, 0x67c789e205efa25b)
|--|--|--(1, 0x987988f7580182d4)
|--|--|--|--     This transformation sends q -> -q+G
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym = £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2d15477af6539a29)
|--|--|--|--     G cutoff =  £  (   £ G-vectors)     FFT grid:  __THREETUPLES__ 
|--|--|--|--
|--|--|--(1, 0xf136aaf06ee3f573)
|--|--|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--|--(1, 0x96876d24833bd135)
|--|--|--|--|--                       cryst. coord.
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--(2, 0xa67e88d9afbbfb26)
|--|--|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--|--|--      __FULLPATH__ 
|--|--|--|--      __CHKSUM__ 
|--|--|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--|--|--     Generated in analytical, separable form
|--|--|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--|--|--                l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
|--|--|--|--
|--|--|--
|--|--|--(1, 0x0d83ee3fc129f07b)
|--|--|--|--     Atomic displacements:
|--|--|--|--     There are   £ irreducible representations
|--|--|--|--
|--(1, 0x9df93c748b00aca7)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x6ea5c610c135976d)
|--|--|--           mode #   £                           mode #   £
|--|--|--           (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £   £   ) 
                    (  £   £   )            (  £  £   ) 
                    (  £  £   )            (  £  £   ) 
                    (  £  £   )            (  £  £   ) 
                    (  £  £   )            (  £  £   ) 
                    (  £  £   )            (  £  £   ) 
|--|--|--
|--(2, 0xa6a904c14ddee3e0)
|--|--(1, 0xc48c1b57f37d78cf)
|--|--|--(1, 0x4d803436d767f3e1)
|--|--|--|--     Representation     £      £ modes -  To be done
|--|--|--|--     Irreps are as follows:
|--|--|--|--
|--|--|--(1, 0x7f7bbad923cb406c)
|--|--|--|--                     mode #   £
|--|--|--|--                     (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £   £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
|--|--|--|--
|--|--(2, 0x9df93c748b00aca7)
|--|--|--(1, 0x4d803436d767f3e1)
|--|--|--|--     Representation     £      £ modes -  To be done
|--|--|--|--     Irreps are as follows:
|--|--|--|--
|--|--|--(1, 0x6ea5c610c135976d)
|--|--|--|--           mode #   £                           mode #   £
|--|--|--|--           (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £  £   ) 
                       (  £  £   )            (  £  £   ) 
|--|--|--|--
|--(1, 0xc48c1b57f37d78cf)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x7f7bbad923cb406c)
|--|--|--                     mode #  £
|--|--|--                     (  £  £   ) 
                              (  £  £   ) 
                              (  £   £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
                              (  £  £   ) 
|--|--|--
|--(1, 0x26e25d099bd08cba)
|--|--(1, 0xa5fec4f06be0a671)
|--|--|--
         
|--|--|--(1, 0x2c5a51e18515ab01)
|--|--|--|--     Alpha used in Ewald sum =   £
|--|--|--|--      __QEphROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL
|--|--|--|--
|--|--
      
|--(1, 0xbf030e3a20d7483e)
|--|--(1, 0x4431f85cfaf02807)
|--|--|--     Representation #  £ modes #   £  £
|--|--|--
|--|--(1, 0xe11c4857e1890337)
|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--
|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--(6, 0x56b38d09a7e10228)
|--|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--
|--|--|--
|--(2, 0x63eba1a310a94e0c)
|--|--(1, 0x3b60a958372f1c37)
|--|--|--(1, 0xaff3b1060ba2a0b0)
|--|--|--|--     Representation #  £ mode #   £
|--|--|--|--
|--|--|--(1, 0xe11c4857e1890337)
|--|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--|--(8, 0x56b38d09a7e10228)
|--|--|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--|--
|--|--|--|--
|--|--(2, 0xbf030e3a20d7483e)
|--|--|--(1, 0x4431f85cfaf02807)
|--|--|--|--     Representation #  £ modes #   £  £
|--|--|--|--
|--|--|--(1, 0xe11c4857e1890337)
|--|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--|--(5, 0x56b38d09a7e10228)
|--|--|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--|--
|--|--|--|--
|--(1, 0xaff3b1060ba2a0b0)
|--|--     Representation #  £ mode #  £
|--|--
|--(1, 0xbe6c3934df8a8686)
|--|--(1, 0x5e9650813f536dc7)
|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--     Self-consistent Calculation
|--|--|--|--
|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--(8, 0x56b38d09a7e10228)
|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:  £
|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--
|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--
|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--
|--|--(1, 0x0fef06cc82c4e43a)
|--|--|--(1, 0xfc91e0e13f80e36b)
|--|--|--|--     Number of q in the star =    £
|--|--|--|--     List of q in the star:
|--|--|--|--          £   £   £   £
                      £   £   £   £
                      £   £   £   £
|--|--|--|--
|--|--|--(1, 0x9a2b9f4552b5b965)
|--|--|--|--     Diagonalizing the dynamical matrix
|--|--|--|--
|--|--|--(1, 0xe057d3f88ff88e60)
|--|--|--|--     q = (    £   £   £ ) 
|--|--|--|--
|--|--|--(1, 0xd3c8539a32d94f87)
|--|--|--|-- **************************************************************************
|--|--|--|--     freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =    £  __UNITCMINV__ 
|--|--|--|-- **************************************************************************
|--|--|--|--
|--(1, 0x8e666e5cba5281ba)
|--|--     Calculation of q =    £   £   £
|--|--
|--(1, 0xd27131612679ec9d)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __QEPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £   £
|--|--
|--
|--(1, 0x761630b54cf3ab6a)
|--|--     Title: 
|--|--      __CHEM__                                                                        
|--|--
|--
|--(1, 0x2524fa37b828dfed)
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms / cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--
|--(1, 0x1e87ab99ac8e95f8)
|--|--(1, 0x9a53efd2567e5d10)
|--|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
              celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--|--
|--|--(1, 0x2de070af168f1e2d)
|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--               a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
|--|--|--
|--|--(1, 0x23b0fe4d9e399137)
|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--               b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
|--|--|--
|--|--
|--(2, 0xa67e88d9afbbfb26)
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--     Generated in analytical, separable form
|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--
|--(1, 0x03b0b0f29689f663)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__              £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, 0xbbccbdd4078237a2)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x86a1678ba416934b)
|--|--(1, 0xd27c2193ac38ecda)
|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--                                    s                        frac. trans.
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--                  (     £         £          £      )
                                 (     £          £         £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--                  (  £ £  £ )
                                 (  £  £ £ )
|--|--|--|--|--
|--|--|--|--
|--|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--|--(7, 0xbecc0a25b4d9baed)
|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £         £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £ £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(20, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £         £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £ £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--(16, 0xbecc0a25b4d9baed)
|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--|--|--|--                  (     £          £          £      )
                                 (    £          £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--|--|--|--                  (  £  £  £ )
                                 ( £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--(1, 0x709a99bcbf6d0eea)
|--|--   Cartesian axes
|--|--
|--(1, 0xf5002d8d4742fb27)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0xc44765cc34088f0e)
|--|--   Crystallographic axes
|--|--
|--(1, 0xa26b9fd7a063aae1)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0xf136aaf06ee3f573)
|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--|--(1, 0x96876d24833bd135)
|--|--|--                       cryst. coord.
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--(1, 0x151d1e1a47dfadf7)
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, 0x0fb49900144bf4d9)
|--|--     Dynamical RAM for                 wfc:       £ MB
|--|--
|--(1, 0x21d2509fc6f281f7)
|--|--     Dynamical RAM for     wfc (w. buffer):       £ MB
|--|--
|--(1, 0xa48d00092140496d)
|--|--     Dynamical RAM for           str. fact:       £ MB
|--|--
|--(1, 0xbc6b91c8c382eb7d)
|--|--     Dynamical RAM for           local pot:       £ MB
|--|--
|--(1, 0xd92107f5aeebdebf)
|--|--     Dynamical RAM for          nlocal pot:       £ MB
|--|--
|--(1, 0x72437ae1aec663ca)
|--|--     Dynamical RAM for                qrad:       £ MB
|--|--
|--(1, 0x3d5d83265e7ab8ec)
|--|--     Dynamical RAM for          rho,v,vnew:       £ MB
|--|--
|--(1, 0x64a9b18b48cf79fb)
|--|--     Dynamical RAM for           G-vectors:       £ MB
|--|--
|--(1, 0xd3addd7fba06c438)
|--|--     Dynamical RAM for          h,s,v( r / c ):       £ MB
|--|--
|--(1, 0xd4e26cef00465534)
|--|--     Dynamical RAM for          <psi|beta>:       £ MB
|--|--
|--(1, 0xef56ebaa947fc61c)
|--|--     Dynamical RAM for                 psi:       £ MB
|--|--
|--(1, 0x83595203b2c58e29)
|--|--     Dynamical RAM for                hpsi:       £ MB
|--|--
|--(1, 0x2435bbd1c03ab5d6)
|--|--     Dynamical RAM for      wfcinit / wfcrot:       £ MB
|--|--
|--(1, 0x7be5675fe791086a)
|--|--     Estimated static dynamical RAM per process >       £ MB
|--|--
|--(1, 0x064201341ec07ec4)
|--|--     Estimated max dynamical RAM per process >       £ MB
|--|--
|--(1, 0x91950750c2531dec)
|--|--     Estimated total dynamical RAM >     £ MB
|--|--
|--(1, 0x7bc5ae7991d79583)
|--|--     The potential is recalculated from file :
|--|--      __FULLPATH__ 
|--|--
|--(1, 0x0e094542aad90a03)
|--|--     Starting wfcs are   £ atomic wfcs
|--|--
|--(1, 0x24e2c1d6a0e4e177)
|--|--     Band Structure Calculation
|--|--     Davidson diagonalization with overlap
|--|--
|--(10, 0x7f424671c7734ae7)
|--|--     Computing kpt #:     £
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0x8339fbb97acc9268)
|--|--     ethr =  £ ,  avg # of iterations = £
|--|--
|--(1, 0x02edef9be47df10c)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xd2ffba93ffd4421b)
|--|--     End of band structure calculation
|--|--
|--(80, 0xcff9eced5984cd93)
|--|--(1, 0xd293ccb59941d17e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--|--(1, 0x703406fdff003113)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--(1, 0xcab19b214c39aa7a)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x72f73c65cc3ea305)
|--|--     Writing output data file  __FULLPATH__ 
|--|--
|--(1, 0x557759402e4b7515)
|--|--(1, 0x7a56a067ca2bd79a)
|--|--|--      __CHEM__                                                                        
|--|--|--
|--|--(1, 0x85be28c38a495179)
|--|--|--     bravais-lattice index     =            £
|--|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--|--     number of atoms / cell      =            £
|--|--|--     number of atomic types    =            £
|--|--|--     kinetic-energy cut-off    =     £   __Ry__ 
|--|--|--     charge density cut-off    =     £   __Ry__ 
|--|--|--     convergence threshold     =      £
|--|--|--     beta                      =       £
|--|--|--     number of iterations used =            £
|--|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--|--
|--|--
|--|--(1, 0x1e87ab99ac8e95f8)
|--|--|--(1, 0x9a53efd2567e5d10)
|--|--|--|--     celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
                 celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
|--|--|--|--
|--|--|--(1, 0x2de070af168f1e2d)
|--|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--|--               a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--(1, 0x23b0fe4d9e399137)
|--|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--|--               b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--
|--|--(1, 0xef6c7a52d4940761)
|--|--|--     Atoms inside the unit cell: 
|--|--|--
|--|--(1, 0x709a99bcbf6d0eea)
|--|--|--     Cartesian axes
|--|--|--
|--|--(1, 0x909188d882877b0e)
|--|--|--     site n.  atom      mass           positions (alat units)
|--|--|--        £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__  £   tau(    £ ) = (    £    £    £  )
|--|--|--
|--|--(1, 0xa66028efe814913c)
|--|--|--     Computing dynamical matrix for 
|--|--|--                    q = (   £   £   £ )
|--|--|--
|--|--(1, 0x75035d8ecefd627d)
|--|--|--     £  __ABSPATH__ . (with q -> -q+G )
|--|--|--
|--(1, 0xd27c2193ac38ecda)
|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--                                    s                        frac. trans.
|--|--|--
|--|--(1, 0x2da448a38d95ae93)
|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--      isym =  £     identity                                     
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--                  (     £          £          £      )
                                 (     £          £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--                  (  £  £  £ )
                                 (  £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--|--(3, 0x304e5ac6d49900f4)
|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--                  (     £         £          £      )
                                 (     £          £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--                  (  £ £  £ )
                                 (  £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--|--(1, 0x2aade0f0070fc99c)
|--|--|--      isym =  £     inversion                                    
|--|--|--
|--|--(1, 0xddcb9f3f389f6839)
|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--                  (     £         £          £      )
                              (     £          £         £      )
|--|--|--|--
|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--                  (  £ £  £ )
                              (  £  £ £ )
|--|--|--|--
|--|--|--
|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--(7, 0xbecc0a25b4d9baed)
|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £         £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £ £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(4, 0x304e5ac6d49900f4)
|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £         £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £ £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--(1, 0x67c789e205efa25b)
|--|--(1, 0x987988f7580182d4)
|--|--|--     This transformation sends q -> -q+G
|--|--|--
|--|--(1, 0x2da448a38d95ae93)
|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--      isym = £     identity                                     
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--                  (     £          £          £      )
                                 (     £          £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--                  (  £  £  £ )
                                 (  £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--|--(1, 0x2d15477af6539a29)
|--|--|--     G cutoff =  £  (   £ G-vectors)     FFT grid:  __THREETUPLES__ 
|--|--|--
|--|--(1, 0xf136aaf06ee3f573)
|--|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--
|--|--|--(1, 0x96876d24833bd135)
|--|--|--|--                       cryst. coord.
|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(    £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
                    k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--
|--|--(2, 0xa67e88d9afbbfb26)
|--|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--|--      __FULLPATH__ 
|--|--|--      __CHKSUM__ 
|--|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--|--     Generated in analytical, separable form
|--|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--|--                l( £ ) =   £
                         l( £ ) =   £
                         l( £ ) =   £
                         l( £ ) =   £
                         l( £ ) =   £
                         l( £ ) =   £
|--|--|--
|--|--
|--|--(1, 0x0d83ee3fc129f07b)
|--|--|--     Atomic displacements:
|--|--|--     There are   £ irreducible representations
|--|--|--
|--(3, 0xa6a904c14ddee3e0)
|--|--(1, 0xc48c1b57f37d78cf)
|--|--|--(1, 0x4d803436d767f3e1)
|--|--|--|--     Representation     £      £ modes -  To be done
|--|--|--|--     Irreps are as follows:
|--|--|--|--
|--|--|--(1, 0x7f7bbad923cb406c)
|--|--|--|--                     mode #   £
|--|--|--|--                     (  £   £   ) 
                                 (  £   £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
                                 (  £  £   ) 
|--|--|--|--
|--|--(1, 0x9df93c748b00aca7)
|--|--|--(1, 0x4d803436d767f3e1)
|--|--|--|--     Representation     £      £ modes -  To be done
|--|--|--|--     Irreps are as follows:
|--|--|--|--
|--|--|--(1, 0x6ea5c610c135976d)
|--|--|--|--           mode #   £                           mode #   £
|--|--|--|--           (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £   £   )            (  £   £   ) 
                       (  £  £   )            (  £   £   ) 
                       (  £  £   )            (  £  £   ) 
                       (  £  £   )            (  £  £   ) 
|--|--|--|--
|--(1, 0x26e25d099bd08cba)
|--|--(1, 0xa5fec4f06be0a671)
|--|--|--
         
|--|--|--(1, 0x2c5a51e18515ab01)
|--|--|--|--     Alpha used in Ewald sum =   £
|--|--|--|--      __QEphROUTINES__     __DURATION__   __QECPU__     __DURATION__  WALL
|--|--|--|--
|--|--
      
|--(2, 0x63eba1a310a94e0c)
|--|--(1, 0x3b60a958372f1c37)
|--|--|--(1, 0xaff3b1060ba2a0b0)
|--|--|--|--     Representation #  £ mode #   £
|--|--|--|--
|--|--|--(1, 0xe11c4857e1890337)
|--|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--|--(6, 0x56b38d09a7e10228)
|--|--|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--|--
|--|--|--|--
|--|--(1, 0xbf030e3a20d7483e)
|--|--|--(1, 0x4431f85cfaf02807)
|--|--|--|--     Representation #  £ modes #   £  £
|--|--|--|--
|--|--|--(1, 0xe11c4857e1890337)
|--|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--|--(7, 0x56b38d09a7e10228)
|--|--|--|--|--|--|--      iter #   £ total cpu time :    £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--|--
|--|--|--|--
|--(2, 0x3b60a958372f1c37)
|--|--(1, 0xaff3b1060ba2a0b0)
|--|--|--     Representation #  £ mode #   £
|--|--|--
|--|--(1, 0xe11c4857e1890337)
|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--
|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--(6, 0x56b38d09a7e10228)
|--|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--
|--|--|--
|--(1, 0x4431f85cfaf02807)
|--|--     Representation #  £ modes #  £ £
|--|--
|--(1, 0xbe6c3934df8a8686)
|--|--(1, 0x5e9650813f536dc7)
|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--     Self-consistent Calculation
|--|--|--|--
|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--(8, 0x56b38d09a7e10228)
|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:  £
|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--
|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--
|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--
|--|--(1, 0x0fef06cc82c4e43a)
|--|--|--(1, 0xfc91e0e13f80e36b)
|--|--|--|--     Number of q in the star =    £
|--|--|--|--     List of q in the star:
|--|--|--|--          £   £   £   £
                      £   £   £   £
                      £   £   £   £
|--|--|--|--
|--|--|--(1, 0x9a2b9f4552b5b965)
|--|--|--|--     Diagonalizing the dynamical matrix
|--|--|--|--
|--|--|--(1, 0xe057d3f88ff88e60)
|--|--|--|--     q = (    £   £   £ ) 
|--|--|--|--
|--|--|--(1, 0xd3c8539a32d94f87)
|--|--|--|-- **************************************************************************
|--|--|--|--     freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =    £  __UNITCMINV__ 
|--|--|--|-- **************************************************************************
|--|--|--|--
|--(1, 0x8e666e5cba5281ba)
|--|--     Calculation of q =    £   £   £
|--|--
|--(1, 0xd27131612679ec9d)
|--|--     Parallelization info
|--|--     --------------------
|--|--     sticks:   dense  smooth      __QEPW__      G-vecs:    dense   smooth      PW
|--|--     Min         £     £     £                 £     £    £
|--|--     Max         £     £     £                 £     £    £
|--|--     Sum        £    £    £                £    £   £
|--|--
|--
|--(1, 0x761630b54cf3ab6a)
|--|--     Title: 
|--|--      __CHEM__                                                                        
|--|--
|--
|--(1, 0x2524fa37b828dfed)
|--|--     bravais-lattice index     =            £
|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--     number of atoms / cell      =            £
|--|--     number of atomic types    =            £
|--|--     number of electrons       =        £
|--|--     number of Kohn-Sham states=           £
|--|--     kinetic-energy cutoff     =     £   __Ry__ 
|--|--     charge density cutoff     =     £   __Ry__ 
|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--
|--(1, 0x1e87ab99ac8e95f8)
|--|--(1, 0x9a53efd2567e5d10)
|--|--|--     celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
              celldm( £ )=   £  celldm( £ )=   £  celldm( £ )=   £
|--|--|--
|--|--(1, 0x2de070af168f1e2d)
|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--               a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
                        a( £ ) = (   £   £   £ )  
|--|--|--
|--|--(1, 0x23b0fe4d9e399137)
|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--               b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
                        b( £ ) = (  £  £  £ )  
|--|--|--
|--|--
|--(2, 0xa67e88d9afbbfb26)
|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--      __FULLPATH__ 
|--|--      __CHKSUM__ 
|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--     Generated in analytical, separable form
|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--                l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
                      l( £ ) =   £
|--|--
|--(1, 0x03b0b0f29689f663)
|--|--     atomic species   valence    mass     pseudopotential
|--|--         __CHEM__              £   £      __CHEM__ ( £ )
               __CHEM__               £    £      __CHEM__  ( £ )
|--|--
|--(1, 0xbbccbdd4078237a2)
|--|--     £ Sym. Ops., with inversion, found
|--|--
|--
|--(1, 0x86a1678ba416934b)
|--|--(1, 0xd27c2193ac38ecda)
|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--                                    s                        frac. trans.
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--                  (     £         £          £      )
                                 (     £          £         £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--                  (  £ £  £ )
                                 (  £  £ £ )
|--|--|--|--|--
|--|--|--|--
|--|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--|--(7, 0xbecc0a25b4d9baed)
|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £         £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £ £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(20, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £         £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £ £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--(16, 0xbecc0a25b4d9baed)
|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--
|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--|--|--|--                  (     £          £          £      )
                                 (    £          £          £      )
|--|--|--|--|--
|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--|--|--|--                  (  £  £  £ )
                                 ( £  £  £ )
|--|--|--|--|--
|--|--|--|--
|--(1, 0x709a99bcbf6d0eea)
|--|--   Cartesian axes
|--|--
|--(1, 0xf5002d8d4742fb27)
|--|--     site n.     atom                  positions (alat units)
|--|--         £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__    tau(   £ ) = (   £   £   £  )
               £            __CHEM__   tau(   £ ) = (   £   £   £  )
|--|--
|--(1, 0xc44765cc34088f0e)
|--|--   Crystallographic axes
|--|--
|--(1, 0xa26b9fd7a063aae1)
|--|--     site n.     atom                  positions (cryst. coord.)
|--|--         £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__    tau(   £ ) = (  £  £  £  )
               £            __CHEM__   tau(   £ ) = (  £  £  £  )
|--|--
|--(1, 0xf136aaf06ee3f573)
|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--|--(1, 0x96876d24833bd135)
|--|--|--                       cryst. coord.
|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(    £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
                 k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--
|--(1, 0x151d1e1a47dfadf7)
|--|--     Dense  grid:    £ G-vectors     FFT dimensions:  __THREETUPLES__ 
|--|--
|--(1, 0x0fb49900144bf4d9)
|--|--     Dynamical RAM for                 wfc:       £ MB
|--|--
|--(1, 0x21d2509fc6f281f7)
|--|--     Dynamical RAM for     wfc (w. buffer):       £ MB
|--|--
|--(1, 0xa48d00092140496d)
|--|--     Dynamical RAM for           str. fact:       £ MB
|--|--
|--(1, 0xbc6b91c8c382eb7d)
|--|--     Dynamical RAM for           local pot:       £ MB
|--|--
|--(1, 0xd92107f5aeebdebf)
|--|--     Dynamical RAM for          nlocal pot:       £ MB
|--|--
|--(1, 0x72437ae1aec663ca)
|--|--     Dynamical RAM for                qrad:       £ MB
|--|--
|--(1, 0x3d5d83265e7ab8ec)
|--|--     Dynamical RAM for          rho,v,vnew:       £ MB
|--|--
|--(1, 0x64a9b18b48cf79fb)
|--|--     Dynamical RAM for           G-vectors:       £ MB
|--|--
|--(1, 0xd3addd7fba06c438)
|--|--     Dynamical RAM for          h,s,v( r / c ):       £ MB
|--|--
|--(1, 0xd4e26cef00465534)
|--|--     Dynamical RAM for          <psi|beta>:       £ MB
|--|--
|--(1, 0xef56ebaa947fc61c)
|--|--     Dynamical RAM for                 psi:       £ MB
|--|--
|--(1, 0x83595203b2c58e29)
|--|--     Dynamical RAM for                hpsi:       £ MB
|--|--
|--(1, 0x2435bbd1c03ab5d6)
|--|--     Dynamical RAM for      wfcinit / wfcrot:       £ MB
|--|--
|--(1, 0x7be5675fe791086a)
|--|--     Estimated static dynamical RAM per process >       £ MB
|--|--
|--(1, 0x064201341ec07ec4)
|--|--     Estimated max dynamical RAM per process >       £ MB
|--|--
|--(1, 0x91950750c2531dec)
|--|--     Estimated total dynamical RAM >     £ MB
|--|--
|--(1, 0x7bc5ae7991d79583)
|--|--     The potential is recalculated from file :
|--|--      __FULLPATH__ 
|--|--
|--(1, 0x0e094542aad90a03)
|--|--     Starting wfcs are   £ atomic wfcs
|--|--
|--(1, 0x24e2c1d6a0e4e177)
|--|--     Band Structure Calculation
|--|--     Davidson diagonalization with overlap
|--|--
|--(6, 0x7f424671c7734ae7)
|--|--     Computing kpt #:     £
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0x8339fbb97acc9268)
|--|--     ethr =  £ ,  avg # of iterations = £
|--|--
|--(1, 0x02edef9be47df10c)
|--|--     total cpu time spent up to now is        £ secs
|--|--
|--(1, 0xd2ffba93ffd4421b)
|--|--     End of band structure calculation
|--|--
|--(40, 0xcff9eced5984cd93)
|--|--(1, 0xd293ccb59941d17e)
|--|--|--          k = £ £ £ (  £ PWs)   bands (ev):
|--|--|--
|--|--(1, 0x6aac9f1792df2980)
|--|--|--   £ £ £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--|--(1, 0x703406fdff003113)
|--|--|--     occupation numbers 
|--|--|--     £   £   £   £   £   £   £   £
              £   £   £   £   £   £   £  £
             £
|--|--|--
|--(1, 0xcab19b214c39aa7a)
|--|--     the Fermi energy is     £ ev
|--|--
|--(1, 0x72f73c65cc3ea305)
|--|--     Writing output data file  __FULLPATH__ 
|--|--
|--(1, 0x557759402e4b7515)
|--|--(1, 0x7a56a067ca2bd79a)
|--|--|--      __CHEM__                                                                        
|--|--|--
|--|--(1, 0x85be28c38a495179)
|--|--|--     bravais-lattice index     =            £
|--|--|--     lattice parameter (alat)  =       £   __au__ 
|--|--|--     unit-cell volume          =     £  __UNITVOLa__ 
|--|--|--     number of atoms / cell      =            £
|--|--|--     number of atomic types    =            £
|--|--|--     kinetic-energy cut-off    =     £   __Ry__ 
|--|--|--     charge density cut-off    =     £   __Ry__ 
|--|--|--     convergence threshold     =      £
|--|--|--     beta                      =       £
|--|--|--     number of iterations used =            £
|--|--|--     Exchange-correlation      = PZ ( £  £  £  £ £ £ )
|--|--|--
|--|--
|--|--(1, 0x1e87ab99ac8e95f8)
|--|--|--(1, 0x9a53efd2567e5d10)
|--|--|--|--     celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
                 celldm( £ )=    £  celldm( £ )=    £  celldm( £ )=    £
|--|--|--|--
|--|--|--(1, 0x2de070af168f1e2d)
|--|--|--|--     crystal axes: (cart. coord. in units of alat)
|--|--|--|--               a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
                           a( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--(1, 0x23b0fe4d9e399137)
|--|--|--|--     reciprocal axes: (cart. coord. in units  __UNITTWOPIALAT__ )
|--|--|--|--               b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
                           b( £ ) = (  £  £  £ )  
|--|--|--|--
|--|--|--
|--|--(1, 0xef6c7a52d4940761)
|--|--|--     Atoms inside the unit cell: 
|--|--|--
|--|--(1, 0x709a99bcbf6d0eea)
|--|--|--     Cartesian axes
|--|--|--
|--|--(1, 0x909188d882877b0e)
|--|--|--     site n.  atom      mass           positions (alat units)
|--|--|--        £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__    £   tau(    £ ) = (    £    £    £  )
                 £      __CHEM__  £   tau(    £ ) = (    £    £    £  )
|--|--|--
|--|--(1, 0xa66028efe814913c)
|--|--|--     Computing dynamical matrix for 
|--|--|--                    q = (   £   £   £ )
|--|--|--
|--|--(1, 0x75035d8ecefd627d)
|--|--|--     £  __ABSPATH__ . (with q -> -q+G )
|--|--|--
|--(1, 0x21b93a02c7fa9f07)
|--|--(1, 0x86a1678ba416934b)
|--|--|--(1, 0xd27c2193ac38ecda)
|--|--|--|--(1, 0xc87eb5bed8a5dcbd)
|--|--|--|--|--                                    s                        frac. trans.
|--|--|--|--|--
|--|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--|--      isym =  £     identity                                     
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--                  (     £          £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--                  (  £  £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(3, 0x304e5ac6d49900f4)
|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--      isym =  £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--|--                  (     £         £          £      )
                                       (     £          £          £      )
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--|--                  (  £ £  £ )
                                       (  £  £  £ )
|--|--|--|--|--|--|--
|--|--|--|--|--|--
|--|--|--|--(1, 0x2aade0f0070fc99c)
|--|--|--|--|--      isym =  £     inversion                                    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (    £          £          £      )
|--|--|--|--|--|--                  (     £         £          £      )
                                    (     £          £         £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = ( £  £  £ )
|--|--|--|--|--|--                  (  £ £  £ )
                                    (  £  £ £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--|--(1, 0x6b3a08cde8474ee8)
|--|--|--|--|--(7, 0xbecc0a25b4d9baed)
|--|--|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--|--|--      isym =  £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £         £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £ £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--|--|--(20, 0x304e5ac6d49900f4)
|--|--|--|--|--|--(1, 0x8134de2d3157a1a3)
|--|--|--|--|--|--|--      isym = £     £ deg rotation - cart. axis  __MILLER__         
|--|--|--|--|--|--|--
|--|--|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--|--|--                  (     £          £          £      )
                                          (     £          £         £      )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--|--|--                  (  £  £  £ )
                                          (  £  £ £ )
|--|--|--|--|--|--|--|--
|--|--|--|--|--|--|--
|--|--|--(16, 0xbecc0a25b4d9baed)
|--|--|--|--(1, 0x74cb6a236536746d)
|--|--|--|--|--      isym = £     inv. £ deg rotation - cart. axis  __MILLER__    
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £         £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (    £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £ £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    ( £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--(1, 0x67c789e205efa25b)
|--|--|--(1, 0x987988f7580182d4)
|--|--|--|--     This transformation sends q -> -q+G
|--|--|--|--
|--|--|--(1, 0x2da448a38d95ae93)
|--|--|--|--(1, 0x30ffc9b7c9df334f)
|--|--|--|--|--      isym = £     identity                                     
|--|--|--|--|--
|--|--|--|--(1, 0xddcb9f3f389f6839)
|--|--|--|--|--(1, 0xf845fe6e43369a4b)
|--|--|--|--|--|-- cryst.   s( £ ) = (     £          £          £      )
|--|--|--|--|--|--                  (     £          £          £      )
                                    (     £          £          £      )
|--|--|--|--|--|--
|--|--|--|--|--(1, 0xbb70bdf3c9e338f2)
|--|--|--|--|--|-- cart.    s( £ ) = (  £  £  £ )
|--|--|--|--|--|--                  (  £  £  £ )
                                    (  £  £  £ )
|--|--|--|--|--|--
|--|--|--|--|--
|--|--|--(1, 0x2d15477af6539a29)
|--|--|--|--     G cutoff =  £  (   £ G-vectors)     FFT grid:  __THREETUPLES__ 
|--|--|--|--
|--|--|--(1, 0xf136aaf06ee3f573)
|--|--|--|--(1, 0xa9b9bf3f94c10778)
|--|--|--|--|--     number of k points=    £  mp smearing, width ( __Ry__ )=  £
|--|--|--|--|--                       cart. coord. in units  __UNITTWOPIALAT__ 
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--|--(1, 0x96876d24833bd135)
|--|--|--|--|--                       cryst. coord.
|--|--|--|--|--        k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(    £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
                       k(   £ ) = (   £   £   £ ), wk =   £
|--|--|--|--|--
|--|--|--(2, 0xa67e88d9afbbfb26)
|--|--|--|--     PseudoPot. # £ for  __CHEM__  read from file:
|--|--|--|--      __FULLPATH__ 
|--|--|--|--      __CHKSUM__ 
|--|--|--|--     Pseudo is Norm-conserving, Zval =  £
|--|--|--|--     Generated in analytical, separable form
|--|--|--|--     Using radial grid of £ points,  £ beta functions with: 
|--|--|--|--                l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
                            l( £ ) =   £
|--|--|--|--
|--|--|--
|--|--|--(1, 0x0d83ee3fc129f07b)
|--|--|--|--     Atomic displacements:
|--|--|--|--     There are   £ irreducible representations
|--|--|--|--
|--(1, 0xc48c1b57f37d78cf)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x7f7bbad923cb406c)
|--|--|--                     mode #   £
|--|--|--                     (   £   £   ) 
                              (  £   £   ) 
                              (  £  £   ) 
                              (   £  £   ) 
                              (  £  £   ) 
                              (  £   £   ) 
                              (  £  £   ) 
                              (   £  £   ) 
                              (  £   £   ) 
                              (  £   £   ) 
                              (  £   £   ) 
                              (  £   £   ) 
|--|--|--
|--(2, 0xb28284bf42e1aa9b)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x1d4e79bf32a69550)
|--|--|--     mode #   £              mode #   £              mode #   £
|--|--|--     (   £  £ ) (  £  £ ) (  £   £ ) 
              (  £  £ ) (  £  £ ) (  £  £ ) 
              (  £  £ ) (  £  £ ) (   £   £ ) 
              (  £  £ ) (  £   £ ) (   £   £ ) 
              (  £  £ ) (   £  £ ) (   £   £ ) 
              (  £  £ ) (  £  £ ) (  £  £ ) 
              (   £   £ ) (  £  £ ) (   £   £ ) 
              (  £  £ ) (  £  £ ) (   £   £ ) 
              (   £  £ ) (  £  £ ) (  £  £ ) 
              (   £  £ ) (  £  £ ) (  £  £ ) 
              (   £  £ ) (  £  £ ) (  £  £ ) 
              (   £  £ ) (  £  £ ) (  £  £ ) 
|--|--|--
|--(1, 0x9df93c748b00aca7)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x6ea5c610c135976d)
|--|--|--           mode #   £                           mode #   £
|--|--|--           (  £   £   )            (   £   £   ) 
                    (   £  £   )            (   £  £   ) 
                    (  £  £   )            (  £  £   ) 
                    (   £   £   )            (  £   £   ) 
                    (   £   £   )            (   £  £   ) 
                    (   £   £   )            (  £   £   ) 
                    (   £  £   )            (   £   £   ) 
                    (  £  £   )            (  £   £   ) 
                    (  £  £   )            (  £   £   ) 
                    (  £  £   )            (  £   £   ) 
                    (  £  £   )            (  £   £   ) 
                    (  £  £   )            (  £   £   ) 
|--|--|--
|--(1, 0xb28284bf42e1aa9b)
|--|--(1, 0x4d803436d767f3e1)
|--|--|--     Representation     £      £ modes -  To be done
|--|--|--     Irreps are as follows:
|--|--|--
|--|--(1, 0x1d4e79bf32a69550)
|--|--|--     mode #  £              mode #  £              mode #  £
|--|--|--     (   £  £ ) (  £   £ ) (  £  £ ) 
              (  £  £ ) (  £  £ ) (  £  £ ) 
              (  £  £ ) (  £  £ ) (  £   £ ) 
              (   £   £ ) (  £  £ ) (  £   £ ) 
              (   £   £ ) (   £   £ ) (   £  £ ) 
              (   £   £ ) (   £   £ ) (  £   £ ) 
              (   £   £ ) (   £  £ ) (  £   £ ) 
              (  £  £ ) (   £   £ ) (   £  £ ) 
              (  £  £ ) (  £  £ ) (   £   £ ) 
              (  £  £ ) (  £  £ ) (  £   £ ) 
              (  £  £ ) (  £  £ ) (  £   £ ) 
              (  £  £ ) (  £  £ ) (  £   £ ) 
|--|--|--
|--(1, 0x26e25d099bd08cba)
|--|--(1, 0xa5fec4f06be0a671)
|--|--|--
         
|--|--|--(1, 0x2c5a51e18515ab01)
|--|--|--|--     Alpha used in Ewald sum =   £
|--|--|--|--      __QEphROUTINES__     __DURATION__   __QECPU__     __DURATION__  WALL
|--|--|--|--
|--|--
      
|--(1, 0x3b60a958372f1c37)
|--|--(1, 0xaff3b1060ba2a0b0)
|--|--|--     Representation #  £ mode #   £
|--|--|--
|--|--(1, 0xe11c4857e1890337)
|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--
|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--(6, 0x56b38d09a7e10228)
|--|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:  £
|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--
|--|--|--
|--(2, 0x1f306755531d0aea)
|--|--(1, 0x8ff5c2c8eb4eabde)
|--|--|--     Representation #  £ modes #   £  £  £
|--|--|--
|--|--(1, 0xe11c4857e1890337)
|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--
|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--(6, 0x56b38d09a7e10228)
|--|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:  £
|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--
|--|--|--
|--(1, 0xbf030e3a20d7483e)
|--|--(1, 0x4431f85cfaf02807)
|--|--|--     Representation #  £ modes #   £  £
|--|--|--
|--|--(1, 0xe11c4857e1890337)
|--|--|--(1, 0x5e9650813f536dc7)
|--|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--|--     Self-consistent Calculation
|--|--|--|--|--
|--|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--|--(5, 0x56b38d09a7e10228)
|--|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:   £
|--|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--|--
|--|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--|--
|--|--|--
|--(1, 0x8ff5c2c8eb4eabde)
|--|--     Representation #  £ modes #  £ £ £
|--|--
|--(1, 0xbe6c3934df8a8686)
|--|--(1, 0x5e9650813f536dc7)
|--|--|--(1, 0xe370a0c437c88618)
|--|--|--|--     Self-consistent Calculation
|--|--|--|--
|--|--|--(1, 0x5404c4c9733c6d2e)
|--|--|--|--(5, 0x56b38d09a7e10228)
|--|--|--|--|--      iter #   £ total cpu time :   £ secs    __ABSPATH__ .:   £
|--|--|--|--|--      thresh= £  __SYMBOL__  =  £  __SYMBOL__  =  £
|--|--|--|--|--
|--|--|--|--(1, 0x06263fcb1040c2d1)
|--|--|--|--|--     End of self-consistent calculation
|--|--|--|--|--
|--|--|--|--(1, 0x3ba996abc91b487d)
|--|--|--|--|--     Convergence has been achieved 
|--|--|--|--|--
|--|--(1, 0x0fef06cc82c4e43a)
|--|--|--(1, 0xfc91e0e13f80e36b)
|--|--|--|--     Number of q in the star =    £
|--|--|--|--     List of q in the star:
|--|--|--|--          £   £   £   £
|--|--|--|--
|--|--|--(1, 0x9a2b9f4552b5b965)
|--|--|--|--     Diagonalizing the dynamical matrix
|--|--|--|--
|--|--|--(1, 0xe057d3f88ff88e60)
|--|--|--|--     q = (    £   £   £ ) 
|--|--|--|--
|--|--|--(1, 0xd3c8539a32d94f87)
|--|--|--|-- **************************************************************************
|--|--|--|--     freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =      £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =       £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (    £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =     £  __UNITCMINV__ 
                 freq (   £ ) =      £ [THz] =    £  __UNITCMINV__ 
|--|--|--|-- **************************************************************************
|--|--|--|--
|--(1, 0x7da11bd1014803a9)
|--|--      __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(3, 0xe1b3a0d9b90c63e9)
|--|--     Called by  __QEelROUTINES__ 
|--|--      __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (      £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (      £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(1, 0x79b76a995d19b7cd)
|--|--     Called by  __QEelROUTINES__ 
|--|--
|--(2, 0xe1b3a0d9b90c63e9)
|--|--     Called by  __QEelROUTINES__ 
|--|--      __QEelROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (   £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
|--|--
|--(1, 0xa2c9a135a146b680)
|--|--     General routines
|--|--      __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (   £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEgenROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (  £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
|--|--
|--(1, 0x65ddc531ff703ce7)
|--|--     Parallel routines
|--|--      __QEgenROUTINES__        __DURATION__   __QECPU__       __DURATION__  WALL (  £ calls)
            __QEgenROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (  £ calls)
|--|--
|--(1, 0x53a7f7f1f85dc004)
|--|--      __QEphROUTINES__     __DURATION__   __QECPU__     __DURATION__  WALL
|--|--
|--(1, 0xa6b2bb9de6dfac39)
|--|--     INITIALIZATION: 
|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(1, 0x0e04195a6a3768c3)
|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(1, 0x00f7de0a96778d6b)
|--|--     DYNAMICAL MATRIX:
|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
            __QEphROUTINES__      __DURATION__   __QECPU__      __DURATION__  WALL (       £ calls)
            __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (       £ calls)
|--|--
|--(6, 0x0e04195a6a3768c3)
|--|--      __QEphROUTINES__      __DURATION__   __QECPU__      __DURATION__  WALL (       £ calls)
            __QEphROUTINES__      __DURATION__   __QECPU__      __DURATION__  WALL (      £ calls)
            __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (      £ calls)
|--|--
|--(1, 0x2850232b29da1046)
|--|--      __QEphROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (    £ calls)
|--|--     c __QEelROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (   £ calls)
|--|--
|--(1, 0xedef917ec95a7ed6)
|--|--     c __QEelROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (   £ calls)
|--|--      __QEelROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (   £ calls)
|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (   £ calls)
|--|--
|--(1, 0x7da11bd1014803a9)
|--|--      __QEelROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (   £ calls)
            __QEelROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (   £ calls)
|--|--
|--(1, 0x0e04195a6a3768c3)
|--|--      __QEphROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
|--|--
|--
|--(1, 0xa2c9a135a146b680)
|--|--      General routines
|--|--      __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (   £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
            __QEgenROUTINES__       __DURATION__   __QECPU__       __DURATION__  WALL (  £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (    £ calls)
            __QEgenROUTINES__        __DURATION__   __QECPU__        __DURATION__  WALL (     £ calls)
|--|--
|--
|--(1, 0x53a7f7f1f85dc004)
|--|--      __QEphROUTINES__     __DURATION__   __QECPU__     __DURATION__  WALL
|--|--
|--
|--(1, 0xad46d62f62ea9784)
|--|--   This run was terminated on:    __HHMMSS__    __DATEa__             
|--|--
|--(1, 0x0b98dcd818267263)
|--|--=------------------------------------------------------------------------------=
|--|--   JOB DONE.
|--|--=------------------------------------------------------------------------------=
|--|--